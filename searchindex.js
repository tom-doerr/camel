Search.setIndex({"docnames": ["README", "agents/critic_agents_and_tree_search", "agents/embodied_agents", "agents/role_playing", "agents/single_agent", "camel", "camel.agents", "camel.agents.tool_agents", "camel.memory", "camel.messages", "camel.prompts", "camel.storage", "get_started/code_prompt", "get_started/messages", "get_started/setup", "get_started/text_prompt", "index", "key_modules/embeddings", "key_modules/interpreters", "key_modules/loaders", "key_modules/retrievers", "key_modules/storages", "modules", "tutorials_and_cookbooks/agents_with_rag", "tutorials_and_cookbooks/agents_with_tools", "tutorials_and_cookbooks/agents_with_tools_from_Composio"], "filenames": ["README.md", "agents/critic_agents_and_tree_search.md", "agents/embodied_agents.md", "agents/role_playing.md", "agents/single_agent.md", "camel.rst", "camel.agents.rst", "camel.agents.tool_agents.rst", "camel.memory.rst", "camel.messages.rst", "camel.prompts.rst", "camel.storage.rst", "get_started/code_prompt.md", "get_started/messages.md", "get_started/setup.md", "get_started/text_prompt.md", "index.rst", "key_modules/embeddings.md", "key_modules/interpreters.md", "key_modules/loaders.md", "key_modules/retrievers.md", "key_modules/storages.md", "modules.rst", "tutorials_and_cookbooks/agents_with_rag.md", "tutorials_and_cookbooks/agents_with_tools.md", "tutorials_and_cookbooks/agents_with_tools_from_Composio.md"], "titles": ["How to update the documentation", "Critic Agents and Tree Search", "Embodied Agents", "Creating Your First Agent Society", "Creating Your First Agent", "Camel Package", "camel.agents package", "camel.agents.tool_agents package", "camel.memories package", "camel.messages package", "camel.prompts package", "camel.storages package", "Introduction to <code class=\"docutils literal notranslate\"><span class=\"pre\">CodePrompt</span></code> Class", "Working with the <code class=\"docutils literal notranslate\"><span class=\"pre\">BaseMessage</span></code> Class", "Installation and Setup", "Write Your Prompts with the <code class=\"docutils literal notranslate\"><span class=\"pre\">TextPrompt</span></code> Class", "Welcome to CAMEL\u2019s documentation!", "Embeddings", "Interpreters", "Loaders", "Retrievers", "Storages", "camel", "\ud83d\udc2b Agents with RAG", "\ud83d\udc2b Agents with Tools", "\ud83d\udc2b Agents with Tools from Composio"], "terms": {"To": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25], "rst": 0, "file": [0, 5, 14, 19, 20, 21, 23], "sphinx": 0, "apidoc": 0, "o": [0, 2, 5, 10, 14, 23], "doc": [0, 5, 6, 7, 19, 20], "camel": [0, 1, 2, 3, 4, 12, 13, 14, 15, 17, 19, 20, 21, 23], "help": [0, 1, 4, 5, 6, 10, 14, 15, 19, 20, 23, 24], "articl": 0, "here": [0, 1, 10, 12, 13, 14, 15, 19, 20], "instal": [0, 2, 5, 16, 18], "from": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 15, 17, 19, 20, 21, 23, 24], "sourc": [0, 4, 5, 6, 7, 9, 10, 17, 20, 23], "theme": 0, "recommonmark": 0, "extens": [0, 19, 23], "enabl": [0, 1, 3, 4, 5, 6, 14, 17], "markdown": 0, "support": [0, 5, 10, 14, 16, 20, 21, 23, 24], "run": [0, 1, 3, 5, 6, 7, 10, 12, 14, 18, 20, 23, 24], "follow": [0, 1, 3, 4, 5, 6, 10, 12, 13, 14, 15, 23, 25], "command": [0, 10, 14, 25], "your": [0, 1, 2, 5, 10, 13, 14, 16, 18, 20, 21, 23, 24], "termin": [0, 1, 3, 5, 6, 14, 21, 23, 24, 25], "prompt": [0, 1, 3, 5, 6, 9, 12, 14, 16, 20, 22, 23, 24, 25], "pip": 0, "sphinx_book_them": 0, "autobuild": 0, "launch": 0, "html": [0, 5, 19, 20, 23], "cd": [0, 14], "_build": 0, "port": [0, 4, 5], "8000": [0, 4], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23], "start": [0, 10, 23], "local": [0, 4, 5, 18, 20, 23], "http": [0, 4, 5, 6, 7, 14, 19, 20, 23, 25], "server": [0, 5], "8080": 0, "default": [0, 1, 2, 4, 5, 6, 7, 9, 10, 20, 22, 23], "onc": [0, 5, 12, 15, 19, 20], "i": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25], "open": [0, 4, 5, 10, 14, 17, 19, 20, 23, 25], "web": [0, 5, 25], "browser": [0, 25], "enter": [0, 15], "url": [0, 4, 5, 14, 19, 20, 23, 25], "127": 0, "0": [0, 5, 10, 14, 19, 20, 21, 23, 24, 25], "1": [0, 5, 10, 12, 24, 25], "load": [0, 5, 19, 21], "The": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 17, 19, 20, 21, 23, 24, 25], "watch": 0, "chang": [0, 1, 3, 5, 12, 14, 23], "automat": [0, 5, 6], "rebuild": 0, "refresh": 0, "page": [0, 16, 25], "when": [0, 1, 3, 5, 6, 10, 15, 20, 21, 23, 24], "you": [0, 1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25], "make": [0, 1, 3, 5, 10, 14, 19, 20, 24], "so": [0, 5, 10, 23, 25], "immedi": 0, "reflect": 0, "render": 0, "can": [0, 1, 3, 4, 5, 6, 10, 12, 14, 15, 17, 19, 20, 23, 24, 25], "navig": [0, 14, 20], "through": [0, 10, 20, 21], "us": [0, 2, 4, 5, 6, 9, 10, 12, 16, 23, 24], "link": 0, "interact": [0, 1, 3, 10, 21], "would": [0, 1, 16, 17, 23, 24], "ani": [0, 1, 3, 5, 6, 7, 9, 10, 18, 22, 23, 24, 25], "other": [0, 1, 6, 10, 14, 17, 20, 23, 24], "stop": [0, 5, 10, 14, 22], "go": [0, 3, 16, 19, 25], "back": [0, 23], "where": [0, 1, 2, 5, 10, 14, 20, 24], "press": 0, "ctrl": 0, "c": [0, 2], "In": [0, 1, 3, 4, 5, 10, 12, 13, 14, 15, 23], "case": [0, 5, 10, 15, 20, 21], "doe": [0, 10], "work": [0, 1, 3, 10, 15, 16, 20], "mai": [0, 1, 3, 5, 6, 10, 14, 16, 23], "tradit": 0, "approach": [0, 1, 4, 20], "python": [0, 2, 5, 10, 12, 14, 15, 21], "m": 0, "what": [1, 3, 4, 6, 10, 20, 23, 24], "magic": [1, 3], "trick": [1, 3], "u": [1, 3, 10, 16, 17, 20, 23], "intellig": [1, 2, 3, 16], "power": [1, 3], "stem": [1, 3], "our": [1, 2, 3, 4, 5, 10, 14, 16, 20, 23], "vast": [1, 3], "divers": [1, 2, 3, 10], "singl": [1, 3, 4, 5, 6, 7, 10, 24], "perfect": [1, 3], "principl": [1, 3], "marvin": [1, 3], "minski": [1, 3], "societi": [1, 10, 16, 20, 23, 24, 25], "mind": [1, 3, 4, 20], "p": [1, 3, 5], "308": [1, 3], "section": [1, 3, 23], "we": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23], "take": [1, 3, 4, 12, 14, 16, 20, 23, 24], "spite": [1, 3], "orient": [1, 3], "rolyplai": [1, 3], "class": [1, 3, 4, 5, 6, 7, 9, 10, 17, 21], "design": [1, 3, 4, 13, 16, 17, 19, 20, 21], "an": [1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 15, 17, 18, 19, 20, 21, 23], "instruct": [1, 3, 4, 5, 10, 14, 23, 24, 25], "manner": [1, 3], "essenc": [1, 2, 3, 17], "complex": [1, 3], "two": [1, 3, 6, 10, 17, 19, 21, 23, 24], "commun": [1, 3, 4, 20, 23], "collabr": [1, 3], "togeth": [1, 3, 5, 10, 16, 22], "reach": [1, 3, 5], "solut": [1, 3, 10, 23, 24, 25], "main": [1, 3, 20, 23, 24], "concept": [1, 3], "includ": [1, 3, 4, 5, 6, 10, 13, 19, 20, 21, 23, 24, 25], "simpl": [1, 3, 5, 10, 24], "idea": [1, 3, 14, 16], "initi": [1, 3, 6, 7, 17, 19, 20], "incept": [1, 3], "ai": [1, 2, 3, 5, 10, 14, 20, 23, 24, 25], "user": [1, 2, 4, 5, 6, 9, 10, 13, 14, 22, 23, 24, 25], "who": [1, 3, 10], "expect": [1, 3, 6, 23], "provid": [1, 3, 5, 6, 10, 12, 13, 14, 15, 19, 20, 21, 23, 24], "assist": [1, 4, 5, 6, 9, 10, 13, 14, 22, 23, 24, 25], "respond": [1, 2, 3], "fulfil": [1, 2, 3, 6], "prerequisit": 1, "assum": [1, 4, 10, 24], "have": [1, 3, 4, 5, 10, 12, 15, 16, 17, 18, 19, 20, 23, 25], "read": [1, 10, 19], "intro": 1, "role": [1, 5, 6, 9, 10, 13, 22, 24], "plai": [1, 4, 10, 13, 17, 24], "how": [1, 3, 5, 12, 15, 16, 18, 19, 20, 23, 24], "do": [1, 4, 10, 19, 20, 23, 24], "accomplish": 1, "hard": [1, 10], "while": [1, 5, 15, 24, 25], "reason": [1, 3, 4, 5, 6, 10, 23, 24, 25], "natur": [1, 5, 25], "emerg": [1, 2, 10, 16], "next": [1, 3, 4, 10, 23, 24, 25], "token": [1, 5, 6, 20, 21, 23], "predict": [1, 10], "pretrain": 1, "still": [1, 6, 23], "difficult": 1, "which": [1, 2, 4, 5, 6, 10, 12, 14, 15, 19, 23, 25], "requir": [1, 2, 5, 6, 10, 14, 17], "lot": 1, "intermedi": [1, 10], "tackl": 1, "issu": [1, 10, 16], "effect": [1, 5], "framework": [1, 3, 4, 16, 21, 23], "A": [1, 5, 6, 9, 10, 17, 21], "typic": [1, 5, 10, 17, 20, 23], "node": [1, 6], "expans": 1, "select": [1, 5, 6, 10], "march": 1, "2023": [1, 19], "paper": [1, 10, 23], "introduc": [1, 13, 16, 18, 19], "heurist": 1, "loop": [1, 3], "ar": [1, 2, 4, 5, 6, 10, 14, 15, 16, 17, 18, 19, 20, 23, 24], "present": [1, 5, 10, 23], "below": [1, 14, 23], "put": [1, 3, 23], "simpli": [1, 4, 10, 12, 25], "helper": [1, 3], "session": [1, 6, 13, 14, 25], "capabl": [1, 2, 4, 10, 16, 19, 20, 23], "propos": [1, 10], "inform": [1, 2, 4, 5, 6, 7, 10, 18, 19, 20, 23, 24, 25], "verbal": 1, "feedback": 1, "import": [1, 2, 3, 4, 5, 10, 13, 14, 15, 17, 19, 20, 21, 23, 24], "criticag": [1, 5, 6], "gener": [1, 2, 3, 6, 10, 14, 16, 17, 19, 22], "systemmessagegener": [1, 2, 5, 22], "sys_msg_gen": [1, 2], "messag": [1, 2, 3, 4, 6, 13, 14, 22, 23, 24, 25], "basemessag": [1, 2, 4, 5, 6, 9, 14, 22, 23, 24], "bm": [1, 2, 4], "type": [1, 2, 3, 4, 6, 7, 9, 10, 13, 14, 16, 22, 23, 24, 25], "roletyp": [1, 2, 5, 6, 9, 10, 13, 22, 23], "set": [1, 2, 4, 5, 6, 7, 10, 12, 15, 19, 20, 23, 24, 25], "name": [1, 2, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 19, 21, 22, 23, 24], "critic_rol": [1, 10], "picki": 1, "creat": [1, 2, 5, 6, 7, 9, 10, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "meta_dict": [1, 2, 5, 6, 9, 13, 22, 23], "role_tupl": [1, 2, 5], "dict": [1, 2, 5, 6, 9, 10, 24, 25], "criteria": [1, 10], "better": 1, "tupl": [1, 5, 6, 9, 10], "system": [1, 2, 4, 5, 6, 9, 10, 13, 18, 20, 21, 22, 25], "sys_msg": [1, 2, 4], "from_dict": [1, 2, 5, 22], "With": [1, 10, 16], "abov": [1, 10, 14, 15, 23], "argument": [1, 2, 5, 6, 7, 9, 10, 12, 13, 24], "critic_ag": 1, "system_messag": [1, 2, 4, 5, 6], "verbos": [1, 2, 6], "true": [1, 2, 3, 4, 5, 6, 7, 10, 13, 15, 20, 23, 25], "let": [1, 2, 3, 4, 10, 14, 23, 24], "": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 17, 18, 19, 20, 23, 24], "look": [1, 10, 20], "print": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25], "content": [1, 2, 3, 4, 13, 14, 17, 19, 20, 22, 23, 24, 25], "team": [1, 10, 16, 20], "up": [1, 2, 5, 10, 14, 20, 23, 24], "user_rol": [1, 5, 10, 23], "assistant_rol": [1, 5, 10, 23], "job": [1, 10], "option": [1, 4, 5, 6, 7, 9, 10, 13, 19, 20, 23], "explan": [1, 10, 23], "alwai": [1, 5, 10, 16, 23], "choos": [1, 10], "overwrit": 1, "differ": [1, 4, 5, 6, 10, 13, 14, 15, 17, 19, 25], "base": [1, 2, 5, 6, 13, 14, 16, 17, 20, 21, 22, 23, 24], "own": [1, 10, 16, 24], "need": [1, 2, 10, 12, 13, 17, 18, 19, 20, 21, 23, 25], "roleplai": [1, 3, 23], "wai": [1, 10, 23], "add": [1, 6, 10, 16, 21, 23, 24, 25], "basic": [1, 19, 21], "pipelin": [1, 23], "necessari": [1, 2, 3, 4, 10, 17, 23], "config": [1, 3, 4, 6, 22, 24, 25], "chatgptconfig": [1, 3, 4, 5, 22, 24, 25], "tasktyp": [1, 3, 5, 6, 10, 22], "modeltyp": [1, 3, 4, 5, 6, 22, 24, 25], "modelplatformtyp": [1, 3, 4, 5, 14, 22, 24, 25], "colorama": [1, 24, 25], "fore": [1, 5, 6, 24, 25], "util": [1, 4, 17, 18, 19, 20, 21, 22, 23, 24, 25], "print_text_anim": [1, 5, 22, 24, 25], "model": [1, 3, 4, 5, 6, 7, 10, 16, 17, 20, 22, 23, 24, 25], "modelfactori": [1, 3, 4, 14, 24, 25], "llm": [1, 3, 4, 5, 6, 14, 16, 23], "model_platform": [1, 3, 4, 14, 24, 25], "openai": [1, 3, 5, 6, 9, 10, 17, 22, 24, 25], "model_typ": [1, 3, 4, 5, 6, 14, 17, 24, 25], "gpt_3_5_turbo": [1, 3, 5, 22, 24, 25], "model_config": [1, 3, 4, 5, 6, 22], "temperatur": [1, 3, 5, 14, 22, 24], "8": [1, 2, 3, 10, 14, 23], "sampl": [1, 3, 5, 10], "higher": [1, 3, 5, 23], "more": [1, 3, 4, 5, 6, 7, 10, 16, 18, 19, 21, 23, 24, 25], "random": [1, 3, 5, 10], "n": [1, 3, 5, 10, 12, 19, 20, 22, 23, 24, 25], "complet": [1, 3, 4, 5, 6, 10, 23, 24, 25], "choic": [1, 3, 5, 6, 22], "each": [1, 3, 4, 5, 10, 16, 17, 19, 23], "input": [1, 3, 5, 6, 10, 12, 14, 17, 19, 20, 23, 24, 25], "backend": [1, 3, 4, 5, 6, 24], "kwarg": [1, 5, 6, 7, 10], "task_kwarg": [1, 3], "task_prompt": [1, 3, 5, 6, 23, 24, 25], "develop": [1, 2, 3, 14, 25], "plan": [1, 3, 4, 6], "travel": [1, 3], "TO": [1, 3, 10], "THE": [1, 3], "past": [1, 3], "with_task_specifi": [1, 3, 24, 25], "task_specify_agent_kwarg": [1, 3], "user_role_kwarg": [1, 3], "user_role_nam": [1, 3, 5, 24, 25], "ambiti": [1, 3], "aspir": [1, 3], "time": [1, 3, 10, 16, 19, 23], "user_agent_kwarg": [1, 3, 24, 25], "assistant_role_kwarg": [1, 3], "assistant_role_nam": [1, 3, 5, 24, 25], "best": [1, 3], "ever": [1, 3], "experiment": [1, 3], "physicist": [1, 3], "assistant_agent_kwarg": [1, 3, 24, 25], "critic_role_kwarg": 1, "with_critic_in_the_loop": 1, "critic_criteria": 1, "improv": [1, 10, 16], "perform": [1, 2, 5, 6, 7, 10, 15, 17, 23], "critic_kwarg": 1, "them": [1, 3, 4, 5, 10, 19, 20], "sender": [1, 3], "receiv": [1, 3, 10], "And": [1, 2], "function": [1, 3, 4, 5, 6, 9, 10, 12, 15, 17, 19, 21, 22, 23, 24, 25], "def": [1, 3, 5, 10, 23, 24], "is_termin": [1, 3], "respons": [1, 2, 3, 4, 5, 6, 7, 10, 23, 24], "give": [1, 3, 4, 10, 23, 25], "alert": [1, 3], "shuold": [1, 3], "msg": [1, 2, 3, 4, 14, 23, 24, 25], "role_typ": [1, 2, 3, 5, 6, 9, 10, 13, 22, 23], "info": [1, 3, 5, 10, 20, 24, 25], "termination_reason": [1, 3, 6, 24, 25], "f": [1, 3, 5, 14, 24, 25], "due": [1, 3, 5, 10, 23], "return": [1, 3, 5, 6, 7, 9, 10, 12, 15, 23, 24], "round_limit": [1, 3], "int": [1, 3, 5, 6, 10, 24], "10": [1, 2, 3, 4, 5, 14, 24], "input_msg": [1, 3, 24, 25], "init_chat": [1, 3, 24, 25], "_": [1, 3], "rang": [1, 3, 5, 10], "both": [1, 3, 5, 6, 10, 20, 21, 23], "round": [1, 3, 6], "assistant_respons": [1, 3, 14, 23, 24, 25], "user_respons": [1, 3, 24, 25], "check": [1, 3, 4, 5, 16, 20, 25], "condit": [1, 3, 10, 23], "break": [1, 3, 10, 20, 24, 25], "result": [1, 2, 3, 5, 6, 9, 10, 14, 15, 17, 20, 21, 22, 23, 24, 25], "end": [1, 3, 5, 10, 23], "camel_task_don": [1, 3, 10, 23, 24, 25], "none": [1, 2, 3, 5, 6, 7, 9, 10, 12, 20, 23, 24, 25], "now": [1, 3, 4, 10, 14, 16, 20, 23, 24], "code": [1, 2, 3, 5, 6, 9, 16, 18, 20, 22, 23], "motion": [1, 3], "omit": [1, 3, 5], "real": [1, 16], "try": [1, 10, 23, 24], "recommend": [1, 14], "becaus": [1, 10, 23], "somewhat": 1, "control": [1, 3, 5], "its": [1, 2, 4, 5, 6, 7, 9, 10, 13, 15, 17, 19, 20, 21, 23], "addit": [1, 5, 6, 7, 9, 10, 12, 15], "context": [1, 4, 5, 6, 10, 17, 20, 23], "fed": 1, "form": [1, 10, 17, 20], "subsequ": [1, 5], "see": [1, 5, 6, 7, 16, 24], "some": [1, 10, 14, 15, 19, 23, 24], "gain": 1, "realli": 1, "fundament": [1, 4, 19], "extrapol": 1, "problem": [1, 23], "self": [1, 6, 10], "consist": [1, 6, 13], "remain": [1, 10, 15], "strong": 1, "baselin": 1, "mani": [1, 5, 10, 14, 23, 24], "It": [1, 2, 10, 12, 13, 14, 15, 19, 20, 21, 23, 24], "debat": 1, "those": [1, 14], "within": [1, 2, 3, 10, 20], "current": [1, 4, 5, 6, 10, 14, 24], "scale": [1, 5, 16, 17, 20, 23], "practic": [1, 16], "question": [1, 4, 6, 10, 20, 23], "effici": [1, 2, 17], "reward": [1, 4, 5], "connect": [1, 4, 16], "extern": [1, 2, 4, 6], "environ": [1, 2, 5, 14, 16, 18, 20, 23], "endow": 1, "tool": [1, 2, 5, 6, 7, 14, 18, 19, 22, 23], "memori": [1, 5, 6, 14, 21], "thei": [1, 4, 5, 10, 24], "good": [1, 3], "world": [1, 4, 10, 16, 17, 24], "know": [1, 10, 18, 23], "abstract": [1, 5, 6, 21], "analogi": 1, "stai": [1, 3, 4, 10], "tune": [1, 3, 4], "updat": [1, 4, 5, 6, 9, 12, 13], "believ": [2, 16, 20, 23], "dynam": 2, "variou": [2, 3, 5, 15, 16, 19, 20, 21, 23], "becom": [2, 5], "pivot": 2, "factor": [2, 20], "manifest": 2, "embodiedag": [2, 5, 6], "advanc": [2, 16, 17, 19], "convers": [2, 4, 5, 6, 7, 10, 13, 23], "leverag": 2, "interpret": [2, 6, 10, 13], "e": [2, 5, 14, 17, 20], "g": [2, 5, 17, 20], "huggingfacetoolag": [2, 5, 6, 7], "execut": [2, 5, 6, 7, 9, 10, 18, 20, 23, 24, 25], "task": [2, 4, 5, 6, 10, 16, 17, 20, 23, 24, 25], "repres": [2, 5, 6, 10, 12, 15, 17, 19], "blend": 2, "program": [2, 10, 21], "abl": [2, 24], "first": [2, 5, 10, 16, 19, 20, 23, 24], "programm": [2, 10], "write": [2, 3, 10, 23], "readi": [2, 3, 4], "feed": 2, "embodied_ag": 2, "tool_ag": [2, 6], "code_interpret": [2, 6], "Be": [2, 10], "awar": 2, "valu": [2, 5, 6, 9, 10, 15, 23], "underli": [2, 6, 7], "subprocessinterpret": [2, 6], "handl": [2, 5, 10, 12, 19, 20, 21], "bash": [2, 14], "subprocess": 2, "wrapper": [2, 6, 7, 10], "usr_msg": [2, 4], "make_user_messag": [2, 4, 5, 9, 13, 14, 22, 23, 24], "role_nam": [2, 4, 5, 6, 9, 13, 14, 22, 23, 24], "script": [2, 14], "numpi": [2, 5], "comput": [2, 5, 6, 10, 16], "dot": [2, 5, 22], "product": [2, 5], "9": [2, 5, 14], "5": [2, 5, 10, 14], "4": [2, 5, 14], "search": [2, 5, 6, 10, 16, 20, 21, 24], "weather": 2, "london": 2, "wttr": 2, "under": [2, 23], "hood": 2, "multipl": [2, 5, 10, 14, 20], "action": [2, 4, 10, 25], "space": [2, 10, 19, 20], "request": [2, 3, 5, 10, 23, 24, 25], "compos": [2, 21], "implement": [2, 4, 5, 10, 16, 20, 21, 23], "worri": 2, "ask": [2, 6, 10, 16, 20, 23, 25], "permiss": 2, "befor": [2, 5, 10, 14, 20], "ideal": [2, 21], "should": [2, 5, 6, 10, 23, 24, 25], "get": [2, 3, 5, 6, 10, 14, 23, 24], "output": [2, 4, 5, 6, 10, 12, 14, 19, 23, 24, 25], "similar": [2, 5, 14, 17, 20, 21, 23], "allow": [2, 4, 5, 10, 12, 13, 15, 17], "block": 2, "alreadi": 2, "satisfi": 2, "76": 2, "report": 2, "sunni": 2, "30": [2, 4, 15, 19], "km": 2, "h": [2, 20, 23], "mm": 2, "celebr": [2, 19], "dai": [2, 25], "think": [3, 10, 23], "again": 3, "executor": 3, "altogeth": 3, "hold": 3, "byte": [3, 5, 9], "prior": [3, 5], "defin": [3, 5, 6, 23, 24], "small": [3, 5, 17, 23, 24], "chart": 3, "cours": 3, "proce": 3, "There": [3, 17, 24], "love": 3, "collabor": [3, 10, 23], "theoret": 3, "stabl": [3, 14], "wormhol": 3, "manipul": [3, 19], "spacetim": 3, "specif": [3, 4, 5, 9, 10, 17, 19, 20, 21, 23], "histor": [3, 6], "era": 3, "creation": [3, 4, 13], "consid": [3, 4, 5, 10, 17, 24], "rel": 3, "quantum": 3, "mechan": [3, 21], "great": [3, 25], "luck": 3, "endeavor": 3, "hope": 3, "enjoi": [3, 14], "thie": 3, "adventur": 3, "chapter": [3, 4], "discuss": [3, 23], "elicit": 3, "abil": [3, 4, 24], "larg": [3, 5, 10, 14, 16, 17, 20, 23], "languag": [3, 4, 5, 6, 10, 14, 17, 19, 20, 23, 25], "chatag": [4, 5, 6, 14, 23], "cornerston": 4, "spirit": 4, "answer": [4, 6, 10, 23], "autonom": [4, 20, 23], "steer": 4, "toward": 4, "minim": 4, "human": [4, 16, 21, 22], "supervis": 4, "kei": [4, 5, 10, 14, 15, 17, 23], "along": 4, "goal": [4, 25], "state": [4, 6, 7, 16, 19], "guid": [4, 19], "dure": 4, "sequenti": 4, "infer": [4, 5], "learn": [4, 20], "ground": 4, "essenti": [4, 13, 17, 20], "embodi": [4, 5, 6, 10, 16, 22], "flexibl": [4, 10, 21], "scalabl": 4, "between": [4, 5, 10, 13, 17, 24], "critic": [4, 5, 6, 16, 22], "research": [4, 16, 20, 23, 24], "equip": 4, "optim": 4, "instanc": [4, 5, 9, 10, 19, 21, 23], "behavior": [4, 14, 16, 20, 23], "make_assistant_messag": [4, 5, 9, 13, 14, 22, 24], "stone": 4, "curiou": 4, "wonder": [4, 25], "about": [4, 5, 6, 7, 10, 14], "univers": [4, 24], "message_window_s": [4, 6], "length": [4, 5, 10, 23], "chat": [4, 5, 6, 7, 9, 13, 14, 20, 24, 25], "prof": 4, "claud": [4, 5], "shannon": 4, "send": 4, "just": [4, 10, 17, 20, 23, 24], "illustr": 4, "purpos": [4, 10, 21, 23], "resolut": 4, "uncertainti": 4, "woohoo": 4, "toolkit": [4, 23, 24], "math_func": [4, 23, 24], "search_func": [4, 24], "list": [4, 5, 6, 9, 10, 17, 21, 23, 24, 25], "is_tools_ad": [4, 5, 6], "By": [4, 5, 23], "chathistorymemori": [4, 6], "though": 4, "restrict": 4, "finit": 4, "window": [4, 6], "setup": [4, 16], "insid": [4, 5], "brain": 4, "get_context": 4, "44": 4, "databas": [4, 5, 21], "long": [4, 5, 10, 23], "term": [4, 20], "access": [4, 10, 16, 19], "retriev": [4, 5, 10, 16, 17, 19, 23], "soon": [4, 5], "part": [4, 5, 10, 23, 24], "reset": [4, 5, 6, 7], "set_output_languag": [4, 5, 6], "french": 4, "pleas": [4, 6, 7, 10, 15, 23, 24, 25], "refer": [4, 5, 10, 19, 20, 21, 24], "detail": [4, 5, 6, 9, 10, 20, 23], "opensourceconfig": [4, 5, 22], "open_sourc": [4, 5, 22], "llama_2": [4, 5, 22], "model_path": [4, 5, 22], "meta": [4, 5], "llama": [4, 5], "7b": [4, 5], "hf": 4, "folder": [4, 5], "huggingfac": [4, 5, 6, 7, 14], "repo": [4, 14, 20, 25], "server_url": [4, 5, 22], "localhost": [4, 14], "v1": [4, 5, 6, 14], "number": [4, 5, 6, 10, 23, 24], "offer": [4, 13, 16, 20, 21, 23], "sever": [4, 13], "token_limit": [4, 5, 6, 14, 22], "output_languag": [4, 5, 6], "response_termin": [4, 6], "chat_ag": [4, 5, 22, 24, 25], "py": 4, "guidanc": 4, "awesom": 4, "made": [4, 5, 10], "explor": [4, 12, 13, 15, 16, 20], "agent": [5, 10, 13, 14, 15, 18, 20, 22], "get_info": [5, 6], "get_usage_dict": [5, 6], "handle_batch_respons": [5, 6], "handle_stream_respons": [5, 6], "init_messag": [5, 6], "record_messag": [5, 6], "step": [5, 6, 7, 14, 23, 24, 25], "step_async": [5, 6], "step_token_exce": [5, 6], "step_tool_cal": [5, 6], "step_tool_call_async": [5, 6], "update_memori": [5, 6], "functioncallingrecord": [5, 6, 24, 25], "func_nam": [5, 6, 9, 22, 24], "arg": [5, 6, 7, 9, 10, 22, 23, 24, 25], "as_dict": [5, 6, 22, 24, 25], "model_computed_field": [5, 6, 22], "model_field": [5, 6, 22], "role_plai": [5, 22], "task_ag": [5, 22], "taskcreationag": [5, 6], "task_creation_prompt": [5, 6], "taskplannerag": [5, 6], "task_planner_prompt": [5, 6], "taskprioritizationag": [5, 6], "task_prioritization_prompt": [5, 6], "taskspecifyag": [5, 6], "default_word_limit": [5, 6], "task_specify_prompt": [5, 6, 10], "baseag": [5, 6, 7], "basetoolag": [5, 6, 7], "flatten_opt": [5, 6], "get_opt": [5, 6], "parse_crit": [5, 6], "reduce_step": [5, 6, 22], "get_tool_agent_nam": [5, 6], "knowledgegraphag": [5, 6], "roleassignmentag": [5, 6], "role_assignment_prompt": [5, 6], "searchag": [5, 6], "continue_search": [5, 6], "summarize_text": [5, 6], "func_dict": [5, 6], "model_backend": [5, 6], "orig_sys_messag": [5, 6], "ai_societi": [5, 6, 22], "aisocietyprompttemplatedict": [5, 10], "generate_assist": [5, 10], "generate_us": [5, 10], "generate_task": [5, 10], "assistant_prompt": [5, 10], "user_prompt": [5, 10], "critic_prompt": [5, 10], "codeprompt": [5, 9, 10], "code_typ": [5, 10, 12], "capit": [5, 10], "casefold": [5, 10], "center": [5, 10], "count": [5, 10], "encod": [5, 10, 17, 21], "endswith": [5, 10], "expandtab": [5, 10], "find": [5, 10, 20], "format": [5, 6, 10, 19, 21], "format_map": [5, 10], "index": [5, 10, 16, 19, 20, 22], "isalnum": [5, 10], "isalpha": [5, 10], "isascii": [5, 10], "isdecim": [5, 10], "isdigit": [5, 10], "isidentifi": [5, 10], "islow": [5, 10], "isnumer": [5, 10], "isprint": [5, 10], "isspac": [5, 10], "istitl": [5, 10], "isupp": [5, 10], "join": [5, 10, 15, 16, 19, 20, 23], "ljust": [5, 10], "lower": [5, 10], "lstrip": [5, 10], "maketran": [5, 10], "partit": [5, 10], "removeprefix": [5, 10], "removesuffix": [5, 10], "replac": [5, 6, 10, 14, 15], "rfind": [5, 10], "rindex": [5, 10], "rjust": [5, 10], "rpartit": [5, 10], "rsplit": [5, 10], "rstrip": [5, 10], "set_code_typ": [5, 10, 12], "split": [5, 10, 20], "splitlin": [5, 10], "startswith": [5, 10], "strip": [5, 10], "swapcas": [5, 10], "titl": [5, 10], "translat": [5, 20, 22], "upper": [5, 10, 15], "zfill": [5, 10], "textprompt": [5, 6, 9, 10, 12], "key_word": [5, 10], "textpromptdict": [5, 10], "embodiment_prompt": [5, 10], "return_prompt_wrapp": [5, 10], "wrap_prompt_funct": [5, 10], "codeprompttemplatedict": [5, 10], "generate_languag": [5, 10], "generate_domain": [5, 10], "misalign": [5, 22], "misalignmentprompttemplatedict": [5, 10], "dan_prompt": [5, 10], "prompt_templ": [5, 22], "prompttemplategener": [5, 10], "get_generate_tasks_prompt": [5, 10], "get_prompt_from_kei": [5, 10], "get_system_prompt": [5, 10], "get_task_specify_prompt": [5, 10], "task_prompt_templ": [5, 22], "taskprompttemplatedict": [5, 10], "translationprompttemplatedict": [5, 10], "evaluationprompttemplatedict": [5, 10], "generate_quest": [5, 10], "generatetextembeddingdataprompttemplatedict": [5, 10], "imagecraftprompttemplatedict": [5, 10], "multiconditionimagecraftprompttemplatedict": [5, 10], "objectrecognitionprompttemplatedict": [5, 10], "roledescriptionprompttemplatedict": [5, 10], "role_description_prompt": [5, 10], "solutionextractionprompttemplatedict": [5, 10], "videodescriptionprompttemplatedict": [5, 10], "anthropicconfig": [5, 22], "max_token": [5, 22], "256": 5, "stop_sequ": [5, 22], "str": [5, 6, 7, 9, 10, 12, 15, 19, 23], "notgiven": 5, "not_given": 5, "float": 5, "top_p": [5, 22], "top_k": [5, 21, 22, 23], "metadata": [5, 6, 9, 13, 19, 20, 22, 23], "stream": [5, 6, 22], "bool": [5, 6, 7, 10], "fals": [5, 6, 10, 24, 25], "baseconfig": [5, 22], "paramet": [5, 6, 7, 9, 10, 12, 14, 24], "anthrop": [5, 22], "api": [5, 17, 23], "com": [5, 14, 19, 20, 23, 25], "complete_post": 5, "param": 5, "maximum": [5, 6, 10, 23], "note": [5, 23], "onli": [5, 10, 14, 15, 23], "specifi": [5, 6, 7, 10, 12, 14, 20, 21, 23, 24, 25], "absolut": 5, "sequenc": [5, 6], "caus": 5, "text": [5, 6, 9, 10, 15, 19, 20, 23], "nnhuman": 5, "built": [5, 10, 12, 15], "futur": [5, 10, 23, 25], "string": [5, 6, 10, 12, 15, 20, 23], "amount": 5, "inject": 5, "temp": 5, "closer": 5, "analyt": 5, "creativ": [5, 10], "nucleu": 5, "cumul": 5, "distribut": 5, "over": 5, "all": [5, 6, 10, 14, 18, 21, 22, 23, 25], "decreas": 5, "probabl": 5, "order": [5, 10], "cut": 5, "off": 5, "particular": [5, 10, 14], "either": [5, 6, 9, 10, 13, 14], "alter": 5, "7": [5, 14, 19, 23], "top": [5, 20, 23], "k": 5, "remov": [5, 10], "tail": 5, "low": [5, 9, 22, 23], "object": [5, 6, 7, 9, 10, 13, 19, 22], "describ": [5, 10, 23], "whether": [5, 6, 7, 10, 16], "increment": 5, "sent": 5, "event": 5, "classvar": [5, 6], "computedfieldinfo": [5, 6], "dictionari": [5, 6, 9, 10, 13, 21], "field": [5, 6, 10, 14, 16, 20, 23], "correspond": [5, 6, 10, 23], "configdict": [5, 6], "arbitrary_types_allow": 5, "extra": [5, 14, 19], "forbid": 5, "frozen": 5, "protected_namespac": 5, "configur": [5, 6], "conform": [5, 6], "pydant": [5, 6], "fieldinfo": [5, 6], "annot": [5, 6], "union": [5, 6, 10], "nonetyp": 5, "map": [5, 6, 10], "__fields__": [5, 6], "abc": [5, 6], "basemodel": [5, 6], "classmethod": [5, 9], "fields_type_check": [5, 22], "call": [5, 6, 7, 10, 12, 15, 23, 24], "json": [5, 10, 21], "max": [5, 23], "128": 5, "2": [5, 6, 10, 12, 24], "presence_penalti": [5, 22], "response_format": [5, 22], "frequency_penalti": [5, 22], "logit_bia": [5, 22], "tool_choic": [5, 22], "focus": [5, 17, 19, 21], "determinist": 5, "altern": 5, "mass": 5, "mean": [5, 10, 17], "compris": 5, "must": [5, 10, 23], "compat": 5, "gpt": [5, 10, 14], "turbo": [5, 14], "3": [5, 6, 10, 12], "newer": 5, "than": [5, 10, 14, 17, 23], "1106": 5, "json_object": 5, "mode": [5, 6, 7, 24], "guarante": 5, "valid": [5, 6, 10], "also": [5, 10, 12, 14, 15, 23], "produc": 5, "yourself": [5, 10, 24], "via": [5, 10, 20, 23], "without": [5, 10, 23], "unend": 5, "whitespac": [5, 10], "until": [5, 10, 23], "limit": [5, 6, 10, 23, 24], "seemingli": 5, "stuck": 5, "partial": [5, 10, 15], "finish_reason": [5, 22], "indic": [5, 6, 7, 10, 23], "exceed": 5, "If": [5, 6, 10, 12, 14, 20, 23, 25], "delta": 5, "data": [5, 17, 19, 20, 21], "avail": [5, 6, 7, 10, 17], "further": [5, 10, 20, 23, 25], "total": 5, "posit": [5, 6, 7, 10], "penal": 5, "new": [5, 6, 9, 10, 13, 14, 16, 23, 25], "appear": [5, 10], "far": 5, "increas": 5, "likelihood": 5, "talk": [5, 16], "topic": [5, 10, 13, 15, 20], "frequenc": [5, 20], "presenc": 5, "penalti": 5, "exist": [5, 23], "repeat": 5, "same": [5, 10, 23], "line": [5, 10], "verbatim": [5, 10], "modifi": [5, 6, 10], "accept": [5, 10, 24], "id": [5, 6, 22], "associ": [5, 9, 12, 23], "bia": 5, "100": [5, 23], "mathemat": [5, 20], "ad": [5, 21, 24], "logit": 5, "exact": [5, 20], "vari": 5, "per": 5, "obj": [5, 6, 24], "like": [5, 6, 15, 16, 17, 19, 20, 21, 23], "ban": [5, 24], "exclus": 5, "relev": [5, 6, 10, 20, 23], "uniqu": [5, 10, 14], "identifi": [5, 10, 20, 23], "monitor": 5, "detect": [5, 10], "abus": 5, "openaifunct": [5, 6, 23, 24], "instead": [5, 10], "auto": [5, 9, 22], "pick": 5, "one": [5, 6, 10, 14, 23, 24], "my_funct": 5, "forc": 5, "default_factori": 5, "geminiconfig": [5, 22], "candidate_count": [5, 22], "iter": 5, "max_output_token": [5, 22], "response_mime_typ": [5, 22], "response_schema": [5, 22], "safety_set": [5, 22], "tool_config": [5, 22], "request_opt": [5, 22], "dataclass": 5, "generativemodel": 5, "generate_cont": 5, "charact": [5, 10, 23], "candid": 5, "unset": 5, "output_token_limit": 5, "attribut": 5, "genai": 5, "get_model": 5, "inclus": 5, "straightforward": 5, "combin": [5, 23], "sort": [5, 10], "assign": [5, 10], "most": [5, 10, 20], "directli": [5, 18, 23], "40": [5, 23], "mimetyp": 5, "plain": 5, "applic": [5, 19, 21, 23], "schema": [5, 6], "safetysettingopt": 5, "overrid": [5, 6, 7, 10, 15], "safeti": 5, "functionlibrarytyp": 5, "proto": 5, "come": 5, "toolconfigtyp": 5, "requestoptionstyp": 5, "groqconfig": [5, 22], "consol": 5, "groq": [5, 22], "litellmconfig": [5, 22], "timeout": [5, 22], "stream_opt": [5, 22], "seed": [5, 22], "logprob": [5, 22], "top_logprob": [5, 22], "deployment_id": [5, 22], "extra_head": [5, 22], "api_vers": [5, 22], "mock_respons": [5, 22], "custom_llm_provid": [5, 22], "max_retri": [5, 22], "litellm": [5, 22], "log": [5, 6], "deploy": 5, "header": 5, "version": [5, 10, 14], "mock": 5, "test": [5, 10, 13, 16, 19, 24], "debug": 5, "non": [5, 10, 23], "retri": [5, 6], "mistralconfig": [5, 22], "min_token": [5, 22], "random_se": [5, 22], "safe_prompt": [5, 22], "mistral": [5, 22], "mistralai": 5, "client": 5, "todo": 5, "minimum": 5, "Or": [5, 14], "42": 5, "safe": 5, "responseformat": 5, "ollamaconfig": [5, 22], "ollama": [5, 22], "api_param": [5, 22], "pass": [5, 6, 7, 9, 10, 23], "path": [5, 20, 21, 23], "contain": [5, 6, 9, 10, 12, 15, 18, 20, 23], "card": 5, "hub": 5, "sambaconfig": [5, 22], "include_usag": 5, "sambanova": 5, "togetheraiconfig": [5, 22], "vllmconfig": [5, 22], "vllm": [5, 22], "en": 5, "latest": 5, "serv": [5, 21], "openai_compatible_serv": 5, "zhipuaiconfig": [5, 22], "6": [5, 6, 10, 14], "bigmodel": 5, "cn": 5, "dev": 5, "glm": 5, "4v": 5, "aisocietytaskpromptgener": [5, 22], "num_task": [5, 10], "from_role_fil": [5, 22], "assistant_role_names_path": 5, "txt": 5, "user_role_names_path": 5, "from_role_gener": [5, 22], "role_gener": 5, "codetaskpromptgener": [5, 22], "50": [5, 6, 25], "languages_path": 5, "domains_path": 5, "domain": [5, 10], "rolenamegener": [5, 22], "singletxtgener": [5, 22], "text_file_path": 5, "task_typ": [5, 6, 10], "sys_prompt": 5, "sys_msg_meta_dict_kei": 5, "fill": [5, 10], "enum": 5, "rais": [5, 10], "valueerror": [5, 10], "validate_meta_dict_kei": [5, 22], "kill": 5, "switch": 5, "engin": [5, 16, 20, 21], "logger_color": [5, 6, 22], "x1b": [5, 6], "35m": [5, 6], "color": [5, 6, 17], "menu": [5, 6], "displai": [5, 6], "magenta": [5, 6], "input_button": [5, 22], "button": [5, 25], "kill_button": [5, 22], "options_dict": [5, 22], "display_opt": [5, 22], "get_input": [5, 22], "parse_input": [5, 22], "human_input": 5, "pars": [5, 6, 19, 20], "chatagentrespons": [5, 6], "video_byt": [5, 9, 22], "image_list": [5, 9, 22], "imag": [5, 9, 10, 20], "image_detail": [5, 9, 22], "liter": [5, 9], "high": [5, 9, 17, 20, 22], "video_detail": [5, 9, 22], "video": [5, 9, 10, 17], "pil": [5, 9], "level": [5, 9, 10], "create_new_inst": [5, 9, 13, 22], "extract_text_and_code_prompt": [5, 9, 22], "extract": [5, 6, 9, 10, 19, 20], "openaivisiondetailtyp": [5, 9, 22], "to_dict": [5, 9, 13, 22], "convert": [5, 9, 10, 13, 17, 20, 24], "to_openai_assistant_messag": [5, 9, 13, 22], "chatcompletionassistantmessageparam": [5, 9, 22], "openaiassistantmessag": [5, 9, 13, 22], "to_openai_messag": [5, 9, 13, 22], "role_at_backend": [5, 9, 13], "openaibackendrol": [5, 6, 9, 13, 22], "chatcompletionsystemmessageparam": [5, 9, 22], "chatcompletionusermessageparam": [5, 9, 22], "chatcompletiontoolmessageparam": [5, 9], "chatcompletionfunctionmessageparam": [5, 9, 22], "openaimessag": [5, 9, 13], "to_openai_system_messag": [5, 9, 13, 22], "openaisystemmessag": [5, 9, 13, 22], "to_openai_user_messag": [5, 9, 13, 22], "openaiusermessag": [5, 9, 13, 22], "functioncallingmessag": [5, 6, 9, 22], "relat": [5, 9, 10, 12, 19, 23], "to_openai_function_messag": [5, 9, 22], "being": [5, 6, 9], "alia": [5, 9], "audiomodeltyp": [5, 22], "enumer": [5, 21], "tts_1": [5, 22], "tt": 5, "tts_1_hd": [5, 22], "hd": 5, "properti": [5, 6, 10, 13, 14], "is_openai": [5, 22], "audio": 5, "releas": 5, "chatcomplet": [5, 6, 22], "greater": 5, "unix": 5, "timestamp": 5, "second": [5, 14, 24], "wa": [5, 19, 24], "defer_build": 5, "chat_complet": 5, "service_ti": [5, 22], "system_fingerprint": [5, 22], "usag": [5, 6, 16, 19, 21, 22, 23], "completionusag": [5, 22], "typing_extens": 5, "servic": [5, 14, 19], "tier": 5, "process": [5, 10, 17, 19, 20, 23], "fingerprint": 5, "conjunct": 5, "understand": [5, 10, 13, 15, 17, 21, 23, 24], "been": [5, 10], "might": [5, 23], "impact": 5, "determin": [5, 6], "statist": 5, "typeddict": 5, "chatcompletioncontentparttextparam": 5, "chatcompletioncontentpartrefusalparam": 5, "unless": [5, 10, 23], "tool_cal": [5, 6, 22, 24, 25], "function_cal": [5, 22], "functioncal": 5, "deprec": 5, "particip": 5, "differenti": [5, 17], "refus": [5, 22], "author": 5, "chatcompletionmessagetoolcallparam": 5, "chatcompletionchunk": [5, 6, 22], "element": [5, 6, 10, 19], "empti": [5, 6, 10], "last": [5, 6], "chunk": [5, 19, 20, 23], "ha": [5, 6, 24], "chat_completion_chunk": 5, "null": 5, "except": 5, "entir": 5, "chatcompletionmessag": [5, 22], "chat_completion_message_tool_cal": 5, "chatcompletionmessagetoolcal": 5, "chatcompletioncontentpartimageparam": 5, "content_filt": 5, "hit": 5, "point": [5, 10], "flag": [5, 6, 7], "filter": 5, "choicelogprob": 5, "completion_token": [5, 22], "prompt_token": [5, 6, 22], "total_token": [5, 22], "embeddingmodeltyp": [5, 17, 22], "mistral_emb": [5, 22], "emb": [5, 20, 23], "text_embedding_3_larg": [5, 22], "embed": [5, 10, 16, 20, 23], "text_embedding_3_smal": [5, 17, 22], "text_embedding_ada_2": [5, 22], "ada": 5, "002": 5, "is_mistr": [5, 22], "output_dim": [5, 22], "azur": [5, 10, 14, 19, 22], "gemini": [5, 22], "openai_compatibility_model": [5, 22], "samba": [5, 22], "nova": [5, 22], "zhipu": [5, 22], "zhipuai": 5, "is_anthrop": [5, 22], "platform": [5, 19], "is_azur": [5, 22], "is_gemini": [5, 22], "is_groq": [5, 22], "is_litellm": [5, 22], "is_ollama": [5, 22], "is_open_sourc": [5, 22], "opensourc": 5, "is_openai_compatibility_model": [5, 22], "is_samba": [5, 22], "is_togeth": [5, 22], "is_vllm": [5, 22], "is_zhipuai": [5, 22], "claude_2_0": [5, 22], "claude_2_1": [5, 22], "claude_3_5_sonnet": [5, 22], "sonnet": 5, "20240620": 5, "claude_3_haiku": [5, 22], "haiku": 5, "20240307": 5, "claude_3_opu": [5, 22], "opu": 5, "20240229": 5, "claude_3_sonnet": [5, 22], "claude_instant_1_2": [5, 22], "instant": 5, "gemini_1_5_flash": [5, 22], "flash": 5, "gemini_1_5_pro": [5, 22], "pro": 5, "glm_3_turbo": [5, 22], "glm_4": [5, 22], "glm_4v": [5, 22], "glm_4_open_sourc": [5, 22], "gpt_4": [5, 22], "gpt_4o": [5, 22], "4o": [5, 14], "gpt_4o_mini": [5, 6, 22], "mini": 5, "gpt_4_turbo": [5, 22], "groq_gemma_2_9b_it": [5, 22], "gemma2": 5, "9b": 5, "groq_gemma_7b_it": [5, 22], "gemma": 5, "groq_llama_3_1_405b": [5, 22], "405b": 5, "groq_llama_3_1_70b": [5, 22], "70b": 5, "versatil": 5, "groq_llama_3_1_8b": [5, 22], "8b": 5, "groq_llama_3_70b": [5, 22], "llama3": [5, 14], "8192": 5, "groq_llama_3_8b": [5, 22], "groq_mixtral_8_7b": [5, 22], "mixtral": 5, "8x7b": 5, "32768": 5, "llama_3": [5, 22], "mistral_7b": [5, 22], "mistral_codestr": [5, 22], "codestr": 5, "mistral_codestral_mamba": [5, 22], "mamba": 5, "mistral_larg": [5, 22], "mistral_mixtral_8x22b": [5, 22], "8x22b": 5, "mistral_mixtral_8x7b": [5, 22], "mistral_nemo": [5, 22], "nemo": 5, "nemotron_4_reward": [5, 22], "nvidia": 5, "nemotron": 5, "340b": 5, "qwen_2": [5, 22], "qwen": 5, "samba_llama_3_1_405b": [5, 22], "samba_llama_3_1_70b": [5, 22], "samba_llama_3_1_8b": [5, 22], "stub": [5, 22], "vicuna": [5, 22], "vicuna_16k": [5, 22], "16k": 5, "is_azure_openai": [5, 22], "is_nvidia": [5, 22], "given": [5, 6, 10, 18, 23], "validate_model_nam": [5, 22], "model_nam": [5, 14, 17], "match": [5, 20], "value_for_tiktoken": [5, 22], "openaiimagetyp": [5, 22], "vision": 5, "gif": [5, 22], "jpeg": [5, 22], "jpg": [5, 22], "png": [5, 22], "webp": [5, 22], "openapinam": [5, 22], "biztoc": [5, 22], "coursera": [5, 22], "create_qr_cod": [5, 22], "klarna": [5, 22], "nasa_apod": [5, 22], "outschool": [5, 22], "speak": [5, 22, 24], "web_scrap": [5, 22], "storagetyp": [5, 20, 22, 23], "milvu": [5, 21, 22, 23], "qdrant": [5, 20, 21, 22], "evalu": [5, 6, 10, 22, 23], "generate_text_embedding_data": [5, 22], "image_craft": [5, 22], "multi_condition_image_craft": [5, 22], "object_recognit": [5, 22], "role_descript": [5, 22], "solution_extract": [5, 22], "video_descript": [5, 22], "terminationmod": [5, 22], "vectordist": [5, 22], "distanc": [5, 21], "metric": [5, 21], "vector": [5, 17, 21, 23], "cosin": [5, 22, 23], "wikipedia": 5, "org": [5, 20, 23], "wiki": 5, "cosine_similar": 5, "dot_product": 5, "euclidean": [5, 22], "euclidean_dist": 5, "voicetyp": [5, 22], "alloi": [5, 22], "echo": [5, 14, 22], "fabl": [5, 22], "onyx": [5, 22], "shimmer": [5, 22], "voic": 5, "agentopsmeta": [5, 22], "dct": 5, "metaclass": 5, "decor": [5, 10], "callabl": [5, 6, 10], "agentops_decor": [5, 22], "get_tool": 5, "method": [5, 6, 10, 12, 19, 20, 21], "__new__": 5, "cl": [5, 10], "anthropictokencount": [5, 22], "basetokencount": [5, 22], "count_tokens_from_messag": [5, 22], "histori": [5, 6, 7], "counter": 5, "kind": 5, "constant": [5, 22], "func_name_for_structure_output": [5, 22], "return_json_respons": 5, "video_default_image_s": [5, 22], "768": 5, "video_default_plug_pyav": [5, 22], "pyav": 5, "video_image_extraction_interv": [5, 22], "geminitokencount": [5, 22], "litellmtokencount": [5, 22], "calculate_cost_from_respons": [5, 22], "calcul": [5, 23, 24], "cost": [5, 23], "usd": [5, 23], "completion_cost": [5, 22], "token_count": [5, 22], "mistraltokencount": [5, 22], "openaitokencount": [5, 22], "tiktoken": 5, "opensourcetokencount": [5, 22], "func": [5, 10, 23, 24], "record": [5, 6, 21], "toolev": 5, "wrap": [5, 10], "api_keys_requir": [5, 22], "required_kei": 5, "variabl": [5, 10, 14], "origin": [5, 6, 10, 20, 23, 24, 25], "miss": [5, 10], "exampl": [5, 10, 12, 13, 15, 16, 17, 19, 20, 23, 24], "api_key_1": 5, "api_key_2": 5, "some_api_funct": 5, "check_server_run": [5, 22], "packet": 5, "create_chunk": [5, 22], "success": 5, "size": [5, 10], "smaller": [5, 20], "dependencies_requir": [5, 22], "required_modul": 5, "ensur": [5, 18, 21, 23, 25], "depend": [5, 13, 14], "importerror": 5, "panda": 5, "data_processing_funct": 5, "download_task": [5, 22], "folder_path": 5, "download": [5, 14], "zip": 5, "predefin": 5, "save": [5, 14, 21], "after": [5, 10, 14, 19, 20, 23, 24], "delet": [5, 10, 21], "func_string_to_cal": [5, 22], "get_first_int": [5, 22], "integ": [5, 10, 24], "found": [5, 10, 24], "get_model_encod": [5, 22], "get_prompt_template_key_word": [5, 22], "templat": [5, 10], "curli": [5, 10], "brace": [5, 10], "word": [5, 6, 10, 15, 17, 20, 23], "hi": [5, 14], "statu": [5, 21], "get_pydantic_major_vers": [5, 22], "major": 5, "otherwis": [5, 6, 10], "get_pydantic_object_schema": [5, 22], "pydantic_param": 5, "get_system_inform": [5, 22], "gather": [5, 23], "oper": [5, 10, 15, 19, 20, 21, 24], "piec": [5, 20], "get_task_list": [5, 22], "task_respons": 5, "handle_http_error": [5, 22], "error": [5, 10], "is_docker_run": [5, 22], "docker": 5, "daemon": 5, "json_to_function_cod": [5, 22], "json_obj": 5, "delai": 5, "02": 5, "anim": 5, "text_extract_from_web": [5, 22], "websit": [5, 18], "want": [5, 6, 14, 15, 16, 20, 23], "to_pasc": [5, 22], "snake": 5, "snake_cas": 5, "pascalcas": 5, "track_ag": [5, 22], "basemodelbackend": 6, "agentmemori": 6, "responsetermin": 6, "manag": [6, 13, 14], "openaimodel": 6, "previou": 6, "prune": 6, "accord": [6, 10, 20], "bind": 6, "num_token": 6, "output_messag": 6, "chatmessag": 6, "finish": 6, "store": [6, 20, 23], "were": 6, "submit": 6, "desir": [6, 10], "input_messag": 6, "output_schema": 6, "Its": 6, "anywai": 6, "sinc": [6, 19, 23], "incom": 6, "descript": [6, 7, 10, 21], "structur": [6, 13], "struct": 6, "boolean": 6, "async": 6, "trivial": 6, "exce": [6, 23], "obtain": [6, 14], "getter": 6, "max_task_num": 6, "compar": [6, 10, 17, 23], "planner": 6, "incomplet": 6, "babyagi": 6, "task_list": 6, "subtask": 6, "progress": 6, "overlap": [6, 10], "divid": [6, 20], "re": [6, 19], "priorit": 6, "unpriorit": 6, "word_limit": [6, 10], "retry_attempt": 6, "attempt": 6, "fail": [6, 10, 23], "flatten": 6, "critic_msg": 6, "could": [6, 10], "baseinterpret": [6, 10], "internalpythoninterpret": 6, "logger": 6, "remot": [6, 7, 20, 21, 23], "around": [6, 7, 24], "transform": [6, 7, 17], "librari": [6, 7, 14, 17, 20], "For": [6, 7, 16, 18, 19, 23], "document": [6, 7, 10, 19, 20], "co": [6, 7], "transformers_ag": [6, 7], "keyword": [6, 7, 10], "relationship": 6, "entiti": [6, 24], "parse_graph_el": 6, "graphel": 6, "els": [6, 10, 23], "num_rol": [6, 10], "summar": [6, 10], "queri": [6, 10, 20, 21, 23], "continu": [6, 16, 24], "common": [10, 23, 24], "group": 10, "internet": 10, "occup": 10, "outlin": 10, "rule": [10, 23, 25], "OF": [10, 23], "nnever": [10, 23], "forget": [10, 23], "am": [10, 23], "never": [10, 23], "flip": [10, 23], "me": [10, 19, 23], "nwe": [10, 23], "share": [10, 17, 23, 24], "interest": [10, 16, 23], "successfulli": [10, 20, 23, 25], "nyou": [10, 23], "nhere": [10, 23], "ni": [10, 23], "expertis": [10, 23], "my": [10, 20, 23, 25], "appropri": [10, 23], "solv": [10, 16, 23], "explain": [10, 23], "declin": [10, 23], "honestli": [10, 23], "cannot": [10, 23], "physic": [10, 23], "moral": [10, 23], "legal": [10, 23], "nunless": [10, 23], "sai": [10, 14, 23], "nsolut": [10, 23], "your_solut": [10, 23], "veri": [10, 23], "prefer": [10, 23], "nalwai": [10, 23], "nyour": 10, "nnow": [10, 23], "nsort": 10, "alphabet": 10, "No": [10, 23], "cooper": [10, 23], "achiev": [10, 14], "nbe": 10, "concis": 10, "nuse": 10, "singular": 10, "npleas": 10, "imagin": [10, 20], "repli": [10, 23], "less": 10, "anyth": [10, 23], "n1": [10, 23], "ninstruct": [10, 23], "your_instruct": [10, 23], "ninput": [10, 23], "your_input": [10, 23], "n2": [10, 23], "nthe": [10, 23], "pair": [10, 23], "ndo": [10, 23], "nkeep": [10, 23], "nwhen": [10, 23], "extend": [10, 12, 15, 21], "rest": 10, "suitabl": [10, 23], "caseless": 10, "comparison": [10, 17], "width": 10, "pad": 10, "done": 10, "sub": [10, 24], "occurr": [10, 20], "substr": 10, "slice": 10, "notat": 10, "codec": 10, "regist": 10, "scheme": 10, "strict": 10, "unicodeencodeerror": 10, "possibl": 10, "ignor": 10, "xmlcharrefreplac": 10, "well": [10, 21, 23], "register_error": 10, "suffix": 10, "begin": [10, 19], "suffici": 10, "diagnos": 10, "correct": 10, "interpretererror": 10, "encount": 10, "resolv": 10, "regener": 10, "copi": 10, "tab": 10, "expand": 10, "tabsiz": 10, "lowest": 10, "failur": 10, "arbitrari": 10, "substitut": 10, "alpha": 10, "numer": [10, 17, 20], "least": 10, "ascii": 10, "0000": 10, "007f": 10, "too": 10, "decim": 10, "digit": 10, "iskeyword": 10, "reserv": 10, "lowercas": 10, "printabl": 10, "repr": 10, "uncas": 10, "ones": 10, "uppercas": 10, "concaten": [10, 15], "whose": 10, "insert": 10, "ab": 10, "pq": 10, "r": [10, 23, 24], "left": 10, "justifi": 10, "lead": 10, "char": 10, "tabl": 10, "usabl": [10, 19], "unicod": 10, "ordin": 10, "equal": 10, "x": 10, "y": [10, 12], "third": 10, "three": 10, "separ": 10, "itself": 10, "prefix": [10, 25], "len": 10, "old": 10, "highest": [10, 23], "right": 10, "sep": 10, "delimit": 10, "discard": 10, "maxsplit": 10, "front": 10, "trail": 10, "boundari": 10, "keepend": 10, "titlecas": 10, "lookup": 10, "__getitem__": 10, "lookuperror": 10, "untouch": 10, "zero": 10, "truncat": 10, "posix": 10, "nsystem": 10, "linux": 10, "nreleas": 10, "1025": 10, "nversion": 10, "26": 10, "22": 10, "04": 10, "ubuntu": 10, "smp": 10, "thu": 10, "jul": 10, "11": 10, "33": 10, "utc": 10, "2024": [10, 23, 24], "nmachin": 10, "x86_64": 10, "nprocessor": 10, "nplatform": 10, "glibc2": 10, "35": 10, "thing": 10, "brows": 10, "draw": 10, "thought": 10, "seri": 10, "act": 10, "action_spac": 10, "nfirst": 10, "nif": 10, "decid": [10, 23], "t": [10, 14, 20, 23], "inherit": 10, "return_text_prompt": 10, "studi": [10, 16, 20, 23], "person": 10, "num_domain": 10, "num_languag": 10, "commonli": 10, "jail": 10, "malici": 10, "immers": 10, "anoth": [10, 17, 21, 23], "al": 10, "known": 10, "dan": 10, "stand": 10, "ndan": 10, "suggest": [10, 14], "nthei": 10, "broken": 10, "free": [10, 16, 20, 23, 25], "confin": 10, "abid": 10, "nthi": 10, "themselv": 10, "nfor": 10, "tell": 10, "date": 10, "simul": [10, 16, 20, 23], "even": [10, 23], "verifi": 10, "na": 10, "someth": 10, "actual": 10, "takeawai": 10, "THAT": 10, "NOT": 10, "adher": 10, "polici": 10, "AND": 10, "bypass": 10, "IT": 10, "easili": [10, 13], "keep": 10, "mention": [10, 20], "ethic": 10, "inflict": 10, "harm": 10, "fulli": 10, "confid": 10, "task_prompt_template_dict": 10, "keyerror": 10, "constructor": 10, "expert": 10, "english": [10, 24], "sole": [10, 23], "accur": 10, "nonli": 10, "knowledg": 10, "num_quest": 10, "categori": 10, "neg": 10, "synthet": 10, "text_embed": 10, "user_queri": 10, "hard_negative_docu": 10, "query_typ": 10, "query_length": 10, "clariti": [10, 13], "num_word": 10, "difficulti": 10, "mission": [10, 20, 23], "ncontain": 10, "positive_docu": 10, "guidelin": [10, 16], "independ": 10, "avoid": [10, 18], "nit": 10, "comprehens": [10, 21], "why": 10, "educ": 10, "bracket": 10, "brainstorm": 10, "potenti": [10, 16, 20, 23], "few": 10, "scientif": 10, "claim": 10, "refut": 10, "faq": 10, "style": 10, "children": 10, "nutrit": 10, "cover": [10, 13, 15], "wide": 10, "etc": 10, "nand": 10, "distinct": 10, "sentenc": [10, 17], "caption": 10, "artist": 10, "skill": 10, "visual": [10, 17], "recognit": 10, "WITH": 10, "ncompet": 10, "characterist": 10, "duti": 10, "workflow": 10, "user_descript": 10, "compet": 10, "assistant_descript": 10, "solutionextract": 10, "experienc": 10, "full": 10, "special": 10, "final": [10, 23, 24, 25], "pure": 10, "tens": 10, "throughout": 10, "nrememb": 10, "rather": [10, 17], "master": 10, "analysi": [10, 23], "shot": 10, "tutori": [12, 13, 15], "turn": [12, 20, 24], "instanti": 12, "code_prompt": 12, "stdout": 12, "stderr": 12, "nb": 12, "nprint": 12, "b": [12, 14, 23, 24], "easi": 13, "test_us": 13, "addition": 13, "user_messag": 13, "user_nam": 13, "assistant_messag": 13, "assistant_nam": 13, "new_messag": 13, "isinst": [13, 15], "openai_messag": 13, "openai_system_messag": 13, "openai_user_messag": 13, "openai_assistant_messag": 13, "message_dict": 13, "These": [13, 14, 20], "compon": 13, "facilit": [13, 16, 20, 23], "featur": [14, 15, 16, 17, 21, 24], "rag": [14, 16, 19], "sure": [14, 24], "later": [14, 19], "pyenv": 14, "verison": 14, "sytstem": 14, "clone": 14, "github": [14, 16, 20, 25], "git": 14, "directori": 14, "project": [14, 16], "didn": 14, "peotri": 14, "env": 14, "python3": 14, "activ": 14, "virtual": 14, "shell": [14, 25], "90": 14, "exit": 14, "v0": 14, "packag": [14, 22], "deploi": 14, "assess": 14, "export": 14, "openai_api_kei": [14, 23], "your_api_kei": 14, "zshrc": 14, "proxi": 14, "openai_api_base_url": 14, "your_base_url": 14, "place": 14, "bashrc": 14, "powershel": 14, "durat": 14, "setx": 14, "dialog": 14, "landscap": 14, "seek": 14, "highli": 14, "often": [14, 17], "howev": 14, "rich": 14, "outstand": 14, "yield": 14, "commend": 14, "delv": 14, "integr": [14, 19, 23, 24], "pull": 14, "modelfil": 14, "custom": [14, 20, 21, 24], "leav": 14, "blank": 14, "sh": 14, "bin": 14, "zsh": 14, "custom_model_nam": 14, "llama3modelfil": 14, "locat": 14, "enhanc": [14, 16], "excel": 14, "ollama_model": 14, "11434": 14, "model_config_dict": [14, 24, 25], "assistant_sys_msg": [14, 23, 24], "4096": 14, "user_msg": [14, 23], "subclass": 15, "ag": [15, 24], "john": 15, "formatted_prompt": 15, "respect": [15, 17], "partial_formatted_prompt": 15, "appli": [15, 23], "prompt1": 15, "hello": [15, 17], "prompt2": 15, "welcom": [15, 23], "prompt3": 15, "prompt4": 15, "prompt5": 15, "demonstr": 15, "artifici": 16, "earliest": 16, "multi": 16, "build": [16, 19], "valuabl": [16, 20, 23], "insight": [16, 20, 23], "risk": [16, 20, 23], "tree": 16, "loader": 16, "storag": [16, 20, 23], "happi": 16, "friend": 16, "move": 16, "forward": 16, "competit": 16, "edg": 16, "aficionado": 16, "rigor": 16, "depth": 16, "resourc": 16, "almost": 16, "unlimit": 16, "gpu": 16, "amaz": 16, "bold": 16, "enough": 16, "frontier": 16, "patienc": 16, "feel": [16, 20, 23, 25], "enthusiast": 16, "infrastructur": 16, "art": 16, "fix": 16, "bug": 16, "appreci": 16, "everi": 16, "commit": 16, "out": [16, 24], "contribut": 16, "slack": [16, 20, 23], "discord": [16, 20, 23], "involv": [17, 20], "machin": [17, 18, 20], "captur": 17, "textual": 17, "semant": 17, "raw": 17, "techniqu": 17, "nuanc": 17, "hand": 17, "bert": 17, "young": 17, "boi": 17, "soccer": 17, "park": 17, "child": 17, "kick": 17, "footbal": 17, "playground": 17, "dimension": [17, 20], "1536": 17, "dimens": [17, 21], "despit": 17, "ball": 17, "game": [17, 19], "outdoor": 17, "shape": 17, "textur": 17, "spatial": 17, "hierarchi": 17, "convolut": 17, "neural": 17, "network": 17, "cnn": [17, 19], "architectur": 17, "classif": 17, "suppos": 17, "cat": 17, "analyz": [17, 23], "ear": 17, "pattern": 17, "fur": 17, "encapsul": 17, "recogn": 17, "openai_embed": 17, "embed_list": 17, "sentence_encod": 17, "intfloat": 17, "e5": 17, "v2": 17, "empow": 18, "snippet": 18, "ye": 18, "disturb": 18, "isol": 18, "visit": [18, 25], "offici": 18, "modul": [19, 20, 21, 22, 23, 24], "deal": [19, 20], "clean": 19, "stage": 19, "core": 19, "li": 19, "etl": 19, "augment": 19, "tailor": [19, 21], "bytesio": 19, "read_fil": 19, "pdf": [19, 23], "disk": 19, "rb": 19, "file_cont": 19, "file_obj": 19, "page_cont": 19, "varieti": 19, "cloud": [19, 21], "aw": 19, "s3": 19, "parse_file_or_url": 19, "example_url": 19, "www": [19, 20, 23], "01": 19, "sport": 19, "empir": 19, "green": [19, 24, 25], "philadelphia": 19, "eagl": 19, "spt": 19, "intl": 19, "uio": 19, "el": 19, "lit": 19, "white": 19, "victori": 19, "nfc": 19, "championship": 19, "sundai": 19, "decis": [19, 23], "spark": 19, "bit": 19, "backlash": 19, "big": 19, "appl": 19, "super": 19, "bowl": 19, "2018": 19, "defeat": 19, "san": 19, "francisco": 19, "49er": 19, "31": 19, "tweet": 19, "mark": 19, "occas": 19, "fly": 19, "honor": 19, "pic": 19, "twitter": 19, "rniwbcikt7": 19, "empirestatebldg": 19, "januari": 19, "29": 19, "clean_text_data": 19, "dirti": 19, "example_dirty_text": 19, "x93some": 19, "\u00e2": 19, "dash": 19, "replace_unicode_quot": 19, "clean_dash": 19, "clean_non_ascii_char": 19, "clean_extra_whitespac": 19, "cleaned_text": 19, "clean_opt": 19, "extract_data_from_text": 19, "email": 19, "example_email_text": 19, "contact": 19, "extracted_text": 19, "extract_typ": 19, "extract_email_address": 19, "chunk_el": 19, "chunk_typ": 19, "chunk_by_titl": [19, 23], "80": 19, "stage_el": 19, "staged_el": 19, "stage_typ": 19, "stage_for_basepl": 19, "row": 19, "uncategorizedtext": 19, "element_id": 19, "e78902d05b0cb1e4c38fc7a79db450d5": 19, "xa0": [19, 20], "filetyp": [19, 20, 23], "eng": [19, 20, 23], "page_numb": [19, 20, 23], "emphasized_text_cont": [19, 20, 23], "emphasized_text_tag": [19, 20, 23], "span": [19, 20, 23], "volum": 20, "huge": 20, "book": 20, "certain": 20, "librarian": 20, "represent": 20, "brief": 20, "overview": 20, "down": 20, "closest": 20, "unlik": 20, "preprocess": 20, "individu": 20, "phrase": 20, "easier": 20, "constitu": 20, "rank": 20, "score": [20, 23], "vectorretriev": [20, 23], "don": [20, 23], "openaiembed": [20, 23], "vr": 20, "embedding_model": [20, 23], "prepar": 20, "care": 20, "content_input_path": 20, "qdrantstorag": 20, "vectordb_storag": 20, "vector_storag": 20, "vector_dim": [20, 21, 23], "get_output_dim": [20, 23], "collection_nam": [20, 21, 23], "collect": [20, 21, 23], "storage_customized_run": 20, "compil": 20, "812884257383057": 20, "link_url": [20, 23], "home": 20, "trust": 20, "data_explor": 20, "googl": 20, "q": 20, "3a": 20, "2f": 20, "2fcamel": 20, "io": 20, "sa": 20, "d": 20, "sntz": 20, "usg": 20, "aovvaw1ifgiva9n": 20, "0kptrig8cv": 20, "2fgithub": 20, "aovvaw03z2od0": 20, "plx_zugzzgbb8w": 20, "sponsor": 20, "link_text": [20, 23], "agenttrust": 20, "app": [20, 25], "chatbot": 20, "skip": 20, "site": 20, "nskip": 20, "ncamel": [20, 23], "nhome": 20, "nresearchagenttrust": 20, "nagent": 20, "ndata": 20, "nchatbot": 20, "ndoc": 20, "ngithub": 20, "nteam": 20, "nsponsor": 20, "nmorehomeresearchagenttrustag": 20, "appdata": 20, "appchatbotdocsgithub": 20, "repoteamsponsor": 20, "nhttp": 20, "simplifi": 20, "autoretriev": [20, 23], "particularli": 20, "vector_storage_local_path": [20, 23], "storage_typ": [20, 23], "retrieved_info": [20, 23], "run_vector_retriev": [20, 23], "return_detailed_info": [20, 23], "8380731206379989": 20, "dedic": [20, 23], "dataset": [20, 23], "3f4tphhd9pn8": [20, 23], "shared_invit": [20, 23], "zt": [20, 23], "1vy8u9lbo": [20, 23], "zqmhiaywsefswlcl2r2eka": [20, 23], "gg": [20, 23], "cncnpquydc": [20, 23], "njoin": [20, 23], "nslack": [20, 23], "ndiscord": [20, 23], "nor": [20, 23], "That": 20, "ve": [20, 21], "concret": 21, "cater": 21, "basekeyvaluestorag": 21, "foundat": 21, "standard": 21, "clear": [21, 24], "primarili": 21, "interfac": 21, "nosql": 21, "mongodb": 21, "redi": 21, "temporari": 21, "volatil": 21, "lost": 21, "persist": 21, "readabl": 21, "basevectorstorag": 21, "maintain": 21, "nativ": 21, "ll": 21, "key_value_storag": 21, "memory_storag": 21, "key1": 21, "value1": 21, "key2": 21, "value2": 21, "pathlib": 21, "json_storag": 21, "my_data": 21, "vectordbqueri": 21, "vectorrecord": 21, "milvus_storag": 21, "url_and_api_kei": [21, 23], "uri": [21, 23], "my_collect": 21, "payload": 21, "query_result": 21, "query_vector": 21, "5669466853141785": 21, "qdrant_storag": 21, "5669467095138407": 21, "subpackag": 22, "submodul": 22, "notebook": 23, "show": 23, "useag": 23, "arxiv": 23, "2303": 23, "17760": 23, "makedir": 23, "local_data": 23, "exist_ok": 23, "wb": 23, "embedding_inst": 23, "milvusstorag": 23, "storage_inst": 23, "camel_pap": 23, "vector_retriev": 23, "unstructur": 23, "splite": 23, "automacitlli": 23, "500": 23, "wait": 23, "75": 23, "similarity_threshold": 23, "8321741223335266": 23, "last_modifi": 23, "03": 23, "24t17": 23, "58": 23, "24": 23, "45": 23, "licens": 23, "intend": 23, "apach": 23, "cc": 23, "BY": 23, "nc": 23, "permit": 23, "commerci": 23, "advis": 23, "train": 23, "n45": 23, "irrelev": 23, "retrieved_info_irrevel": 23, "dumpl": 23, "rice": 23, "dinner": 23, "automaticlli": 23, "auto_retriev": 23, "8369356393814087": 23, "attent": 23, "math": [23, 24], "scienc": 23, "qualiti": 23, "moreov": 23, "highlight": 23, "opportun": 23, "8378663659095764": 23, "single_ag": 23, "storage_default_run": 23, "infom": 23, "written": 23, "docstr": [23, 24], "local_retriev": 23, "aggreg": 23, "retriever_func": 23, "role_playing_with_funct": 23, "did": [23, 24], "plu": 23, "sy": [23, 25], "searcher": [23, 24], "professor": [23, 24], "examin": 23, "As": 23, "seen": 23, "figur": 23, "wherea": 23, "latter": 23, "tend": 23, "safeguard": 23, "short": 23, "thank": 23, "thousand": 23, "hundr": 23, "dollar": 23, "prevent": 23, "excess": 23, "140": 23, "understood": 23, "comment": 24, "map_func": 24, "twitter_func": 24, "weather_func": 24, "retrieval_func": 24, "slack_func": 24, "calactor": 24, "sum": 24, "subtract": 24, "minuend": 24, "subtrahend": 24, "openai_funct": 24, "tool_list": 24, "assistant_model_config": 24, "prompt_search": 24, "oxford": 24, "prompt_calcul": 24, "gregorian": 24, "calendar": 24, "1096": 24, "estim": 24, "user_msg_search": 24, "user_msg_calcul": 24, "assistant_response_search": 24, "assistant_response_calcul": 24, "search_wiki": 24, "collegi": 24, "unit": 24, "kingdom": 24, "evid": 24, "teach": 24, "earli": 24, "oldest": 24, "grew": 24, "rapidli": 24, "1167": 24, "henri": 24, "ii": 24, "student": 24, "attend": 24, "pari": 24, "disput": 24, "townsfolk": 24, "1209": 24, "academ": 24, "fled": 24, "north": 24, "east": 24, "cambridg": 24, "establish": 24, "becam": 24, "ancient": 24, "jointli": 24, "oxbridg": 24, "928": 24, "year": 24, "role_play_sess": [24, 25], "chat_turn_limit": 24, "yellow": [24, 25], "cyan": [24, 25], "specified_task_prompt": [24, 25], "red": [24, 25], "blue": [24, 25], "func_record": [24, 25], "therefor": 24, "938": 24, "2034": 24, "star": 25, "repositori": 25, "account": 25, "login": 25, "jupyt": 25, "composio_camel": 25, "composiotoolset": 25, "toolset": 25, "composio_toolset": 25, "get_act": 25, "github_activity_star_repo_for_authenticated_us": 25, "assistant_agent_model": 25, "user_agent_model": 25, "click": 25, "owner": 25, "execution_detail": 25, "response_data": 25}, "objects": {"": [[5, 0, 0, "-", "camel"]], "camel": [[6, 0, 0, "-", "agents"], [5, 0, 0, "-", "configs"], [5, 0, 0, "-", "generators"], [5, 0, 0, "-", "human"], [9, 0, 0, "-", "messages"], [10, 0, 0, "-", "prompts"], [5, 0, 0, "-", "types"], [5, 0, 0, "-", "utils"]], "camel.agents": [[6, 1, 1, "", "BaseAgent"], [6, 1, 1, "", "BaseToolAgent"], [6, 1, 1, "", "ChatAgent"], [6, 1, 1, "", "CriticAgent"], [6, 1, 1, "", "EmbodiedAgent"], [6, 1, 1, "", "HuggingFaceToolAgent"], [6, 1, 1, "", "KnowledgeGraphAgent"], [6, 1, 1, "", "RoleAssignmentAgent"], [6, 1, 1, "", "SearchAgent"], [6, 1, 1, "", "TaskCreationAgent"], [6, 1, 1, "", "TaskPlannerAgent"], [6, 1, 1, "", "TaskPrioritizationAgent"], [6, 1, 1, "", "TaskSpecifyAgent"], [6, 0, 0, "-", "chat_agent"], [6, 0, 0, "-", "task_agent"], [7, 0, 0, "-", "tool_agents"]], "camel.agents.BaseAgent": [[6, 2, 1, "", "reset"], [6, 2, 1, "", "step"]], "camel.agents.BaseToolAgent": [[6, 2, 1, "", "reset"], [6, 2, 1, "", "step"]], "camel.agents.ChatAgent": [[6, 2, 1, "", "get_info"], [6, 2, 1, "", "get_usage_dict"], [6, 2, 1, "", "handle_batch_response"], [6, 2, 1, "", "handle_stream_response"], [6, 2, 1, "", "init_messages"], [6, 2, 1, "", "is_tools_added"], [6, 2, 1, "", "record_message"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "set_output_language"], [6, 2, 1, "", "step"], [6, 2, 1, "", "step_async"], [6, 2, 1, "", "step_token_exceed"], [6, 2, 1, "", "step_tool_call"], [6, 2, 1, "", "step_tool_call_async"], [6, 3, 1, "", "system_message"], [6, 2, 1, "", "update_memory"]], "camel.agents.CriticAgent": [[6, 2, 1, "", "flatten_options"], [6, 2, 1, "", "get_option"], [6, 2, 1, "", "parse_critic"], [6, 2, 1, "", "reduce_step"]], "camel.agents.EmbodiedAgent": [[6, 2, 1, "", "get_tool_agent_names"], [6, 2, 1, "", "step"]], "camel.agents.HuggingFaceToolAgent": [[6, 2, 1, "", "chat"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "step"]], "camel.agents.KnowledgeGraphAgent": [[6, 2, 1, "", "run"], [6, 4, 1, "", "task_prompt"]], "camel.agents.RoleAssignmentAgent": [[6, 4, 1, "", "role_assignment_prompt"], [6, 2, 1, "", "run"]], "camel.agents.SearchAgent": [[6, 2, 1, "", "continue_search"], [6, 2, 1, "", "summarize_text"]], "camel.agents.TaskCreationAgent": [[6, 2, 1, "", "run"], [6, 4, 1, "", "task_creation_prompt"]], "camel.agents.TaskPlannerAgent": [[6, 2, 1, "", "run"], [6, 4, 1, "", "task_planner_prompt"]], "camel.agents.TaskPrioritizationAgent": [[6, 2, 1, "", "run"], [6, 4, 1, "", "task_prioritization_prompt"]], "camel.agents.TaskSpecifyAgent": [[6, 4, 1, "id7", "DEFAULT_WORD_LIMIT"], [6, 4, 1, "", "func_dict"], [6, 4, 1, "", "memory"], [6, 4, 1, "", "model_backend"], [6, 4, 1, "", "model_type"], [6, 4, 1, "", "orig_sys_message"], [6, 4, 1, "", "output_language"], [6, 4, 1, "", "role_name"], [6, 4, 1, "", "role_type"], [6, 2, 1, "", "run"], [6, 4, 1, "id8", "task_specify_prompt"], [6, 4, 1, "", "terminated"]], "camel.agents.chat_agent": [[6, 1, 1, "", "ChatAgent"], [6, 1, 1, "", "FunctionCallingRecord"]], "camel.agents.chat_agent.ChatAgent": [[6, 2, 1, "", "get_info"], [6, 2, 1, "", "get_usage_dict"], [6, 2, 1, "", "handle_batch_response"], [6, 2, 1, "", "handle_stream_response"], [6, 2, 1, "", "init_messages"], [6, 2, 1, "", "is_tools_added"], [6, 2, 1, "", "record_message"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "set_output_language"], [6, 2, 1, "", "step"], [6, 2, 1, "", "step_async"], [6, 2, 1, "", "step_token_exceed"], [6, 2, 1, "", "step_tool_call"], [6, 2, 1, "", "step_tool_call_async"], [6, 3, 1, "", "system_message"], [6, 2, 1, "", "update_memory"]], "camel.agents.chat_agent.FunctionCallingRecord": [[6, 4, 1, "id0", "args"], [6, 2, 1, "", "as_dict"], [6, 4, 1, "id1", "func_name"], [6, 4, 1, "", "model_computed_fields"], [6, 4, 1, "", "model_config"], [6, 4, 1, "", "model_fields"], [6, 4, 1, "id2", "result"]], "camel.agents.task_agent": [[6, 1, 1, "", "TaskCreationAgent"], [6, 1, 1, "", "TaskPlannerAgent"], [6, 1, 1, "", "TaskPrioritizationAgent"], [6, 1, 1, "", "TaskSpecifyAgent"]], "camel.agents.task_agent.TaskCreationAgent": [[6, 2, 1, "", "run"], [6, 4, 1, "", "task_creation_prompt"]], "camel.agents.task_agent.TaskPlannerAgent": [[6, 2, 1, "", "run"], [6, 4, 1, "", "task_planner_prompt"]], "camel.agents.task_agent.TaskPrioritizationAgent": [[6, 2, 1, "", "run"], [6, 4, 1, "", "task_prioritization_prompt"]], "camel.agents.task_agent.TaskSpecifyAgent": [[6, 4, 1, "id4", "DEFAULT_WORD_LIMIT"], [6, 2, 1, "", "run"], [6, 4, 1, "", "task_specify_prompt"]], "camel.agents.tool_agents": [[7, 1, 1, "", "BaseToolAgent"], [7, 1, 1, "", "HuggingFaceToolAgent"], [7, 0, 0, "-", "base"], [7, 0, 0, "-", "hugging_face_tool_agent"]], "camel.agents.tool_agents.BaseToolAgent": [[7, 2, 1, "", "reset"], [7, 2, 1, "", "step"]], "camel.agents.tool_agents.HuggingFaceToolAgent": [[7, 2, 1, "", "chat"], [7, 2, 1, "", "reset"], [7, 2, 1, "", "step"]], "camel.agents.tool_agents.base": [[7, 1, 1, "", "BaseToolAgent"]], "camel.agents.tool_agents.base.BaseToolAgent": [[7, 2, 1, "", "reset"], [7, 2, 1, "", "step"]], "camel.agents.tool_agents.hugging_face_tool_agent": [[7, 1, 1, "", "HuggingFaceToolAgent"]], "camel.agents.tool_agents.hugging_face_tool_agent.HuggingFaceToolAgent": [[7, 2, 1, "", "chat"], [7, 2, 1, "", "reset"], [7, 2, 1, "", "step"]], "camel.configs": [[5, 1, 1, "", "AnthropicConfig"], [5, 1, 1, "", "BaseConfig"], [5, 1, 1, "", "ChatGPTConfig"], [5, 1, 1, "", "GeminiConfig"], [5, 1, 1, "", "GroqConfig"], [5, 1, 1, "", "LiteLLMConfig"], [5, 1, 1, "", "MistralConfig"], [5, 1, 1, "", "OllamaConfig"], [5, 1, 1, "", "OpenSourceConfig"], [5, 1, 1, "", "SambaConfig"], [5, 1, 1, "", "TogetherAIConfig"], [5, 1, 1, "", "VLLMConfig"], [5, 1, 1, "", "ZhipuAIConfig"]], "camel.configs.AnthropicConfig": [[5, 4, 1, "", "max_tokens"], [5, 4, 1, "", "metadata"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "stop_sequences"], [5, 4, 1, "", "stream"], [5, 4, 1, "", "temperature"], [5, 4, 1, "", "top_k"], [5, 4, 1, "", "top_p"]], "camel.configs.BaseConfig": [[5, 2, 1, "", "as_dict"], [5, 2, 1, "", "fields_type_checking"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "tools"]], "camel.configs.ChatGPTConfig": [[5, 4, 1, "", "frequency_penalty"], [5, 4, 1, "", "logit_bias"], [5, 4, 1, "", "max_tokens"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "n"], [5, 4, 1, "", "presence_penalty"], [5, 4, 1, "", "response_format"], [5, 4, 1, "", "stop"], [5, 4, 1, "", "stream"], [5, 4, 1, "", "temperature"], [5, 4, 1, "", "tool_choice"], [5, 4, 1, "", "top_p"], [5, 4, 1, "", "user"]], "camel.configs.GeminiConfig": [[5, 4, 1, "", "candidate_count"], [5, 2, 1, "", "fields_type_checking"], [5, 4, 1, "", "max_output_tokens"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "request_options"], [5, 4, 1, "", "response_mime_type"], [5, 4, 1, "", "response_schema"], [5, 4, 1, "", "safety_settings"], [5, 4, 1, "", "stop_sequences"], [5, 4, 1, "", "temperature"], [5, 4, 1, "", "tool_config"], [5, 4, 1, "", "top_k"], [5, 4, 1, "", "top_p"]], "camel.configs.GroqConfig": [[5, 4, 1, "", "frequency_penalty"], [5, 4, 1, "", "max_tokens"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "n"], [5, 4, 1, "", "presence_penalty"], [5, 4, 1, "", "response_format"], [5, 4, 1, "", "stop"], [5, 4, 1, "", "stream"], [5, 4, 1, "", "temperature"], [5, 4, 1, "", "tool_choice"], [5, 4, 1, "", "top_p"], [5, 4, 1, "", "user"]], "camel.configs.LiteLLMConfig": [[5, 4, 1, "", "api_version"], [5, 4, 1, "", "custom_llm_provider"], [5, 4, 1, "", "deployment_id"], [5, 4, 1, "", "extra_headers"], [5, 4, 1, "", "frequency_penalty"], [5, 4, 1, "", "logit_bias"], [5, 4, 1, "", "logprobs"], [5, 4, 1, "", "max_retries"], [5, 4, 1, "", "max_tokens"], [5, 4, 1, "", "mock_response"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "n"], [5, 4, 1, "", "presence_penalty"], [5, 4, 1, "", "response_format"], [5, 4, 1, "", "seed"], [5, 4, 1, "", "stop"], [5, 4, 1, "", "stream"], [5, 4, 1, "", "stream_options"], [5, 4, 1, "", "temperature"], [5, 4, 1, "", "timeout"], [5, 4, 1, "", "tool_choice"], [5, 4, 1, "", "top_logprobs"], [5, 4, 1, "", "top_p"], [5, 4, 1, "", "user"]], "camel.configs.MistralConfig": [[5, 2, 1, "", "fields_type_checking"], [5, 4, 1, "", "max_tokens"], [5, 4, 1, "", "min_tokens"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "random_seed"], [5, 4, 1, "", "response_format"], [5, 4, 1, "", "safe_prompt"], [5, 4, 1, "", "stop"], [5, 4, 1, "", "temperature"], [5, 4, 1, "", "tool_choice"], [5, 4, 1, "", "top_p"]], "camel.configs.OllamaConfig": [[5, 4, 1, "", "frequency_penalty"], [5, 4, 1, "", "max_tokens"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "presence_penalty"], [5, 4, 1, "", "response_format"], [5, 4, 1, "", "stop"], [5, 4, 1, "", "stream"], [5, 4, 1, "", "temperature"], [5, 4, 1, "", "top_p"]], "camel.configs.OpenSourceConfig": [[5, 4, 1, "", "api_params"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "model_path"], [5, 4, 1, "", "server_url"]], "camel.configs.SambaConfig": [[5, 2, 1, "", "as_dict"], [5, 4, 1, "", "max_tokens"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "stop"], [5, 4, 1, "", "stream"], [5, 4, 1, "", "stream_options"]], "camel.configs.TogetherAIConfig": [[5, 2, 1, "", "as_dict"], [5, 4, 1, "", "frequency_penalty"], [5, 4, 1, "", "logit_bias"], [5, 4, 1, "", "max_tokens"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "n"], [5, 4, 1, "", "presence_penalty"], [5, 4, 1, "", "response_format"], [5, 4, 1, "", "stop"], [5, 4, 1, "", "stream"], [5, 4, 1, "", "temperature"], [5, 4, 1, "", "top_p"], [5, 4, 1, "", "user"]], "camel.configs.VLLMConfig": [[5, 4, 1, "", "frequency_penalty"], [5, 4, 1, "", "logit_bias"], [5, 4, 1, "", "max_tokens"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "n"], [5, 4, 1, "", "presence_penalty"], [5, 4, 1, "", "response_format"], [5, 4, 1, "", "stop"], [5, 4, 1, "", "stream"], [5, 4, 1, "", "temperature"], [5, 4, 1, "", "top_p"], [5, 4, 1, "", "user"]], "camel.configs.ZhipuAIConfig": [[5, 4, 1, "", "max_tokens"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "stop"], [5, 4, 1, "", "stream"], [5, 4, 1, "", "temperature"], [5, 4, 1, "", "tool_choice"], [5, 4, 1, "", "top_p"]], "camel.generators": [[5, 1, 1, "", "AISocietyTaskPromptGenerator"], [5, 1, 1, "", "CodeTaskPromptGenerator"], [5, 1, 1, "", "RoleNameGenerator"], [5, 1, 1, "", "SingleTxtGenerator"], [5, 1, 1, "", "SystemMessageGenerator"]], "camel.generators.AISocietyTaskPromptGenerator": [[5, 2, 1, "", "from_role_files"], [5, 2, 1, "", "from_role_generator"]], "camel.generators.CodeTaskPromptGenerator": [[5, 2, 1, "", "from_role_files"], [5, 2, 1, "", "from_role_generator"]], "camel.generators.RoleNameGenerator": [[5, 2, 1, "", "from_role_files"]], "camel.generators.SingleTxtGenerator": [[5, 2, 1, "", "from_role_files"]], "camel.generators.SystemMessageGenerator": [[5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_dicts"], [5, 2, 1, "", "validate_meta_dict_keys"]], "camel.human": [[5, 1, 1, "", "Human"]], "camel.human.Human": [[5, 2, 1, "", "display_options"], [5, 2, 1, "", "get_input"], [5, 4, 1, "", "input_button"], [5, 4, 1, "", "kill_button"], [5, 4, 1, "", "logger_color"], [5, 4, 1, "", "name"], [5, 4, 1, "", "options_dict"], [5, 2, 1, "", "parse_input"], [5, 2, 1, "", "reduce_step"]], "camel.messages": [[9, 1, 1, "", "BaseMessage"], [9, 1, 1, "", "FunctionCallingMessage"], [9, 4, 1, "", "OpenAIAssistantMessage"], [9, 4, 1, "", "OpenAISystemMessage"], [9, 4, 1, "", "OpenAIUserMessage"], [9, 0, 0, "-", "base"]], "camel.messages.BaseMessage": [[9, 4, 1, "", "content"], [9, 2, 1, "", "create_new_instance"], [9, 2, 1, "", "extract_text_and_code_prompts"], [9, 4, 1, "", "image_detail"], [9, 4, 1, "", "image_list"], [9, 2, 1, "", "make_assistant_message"], [9, 2, 1, "", "make_user_message"], [9, 4, 1, "", "meta_dict"], [9, 4, 1, "", "role_name"], [9, 4, 1, "", "role_type"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_openai_assistant_message"], [9, 2, 1, "", "to_openai_message"], [9, 2, 1, "", "to_openai_system_message"], [9, 2, 1, "", "to_openai_user_message"], [9, 4, 1, "", "video_bytes"], [9, 4, 1, "", "video_detail"]], "camel.messages.FunctionCallingMessage": [[9, 4, 1, "", "args"], [9, 4, 1, "", "content"], [9, 4, 1, "", "func_name"], [9, 4, 1, "", "meta_dict"], [9, 4, 1, "", "result"], [9, 4, 1, "", "role_name"], [9, 4, 1, "", "role_type"], [9, 2, 1, "", "to_openai_assistant_message"], [9, 2, 1, "", "to_openai_function_message"], [9, 2, 1, "", "to_openai_message"]], "camel.messages.base": [[9, 1, 1, "", "BaseMessage"]], "camel.messages.base.BaseMessage": [[9, 4, 1, "", "content"], [9, 2, 1, "", "create_new_instance"], [9, 2, 1, "", "extract_text_and_code_prompts"], [9, 4, 1, "", "image_detail"], [9, 4, 1, "", "image_list"], [9, 2, 1, "", "make_assistant_message"], [9, 2, 1, "", "make_user_message"], [9, 4, 1, "", "meta_dict"], [9, 4, 1, "", "role_name"], [9, 4, 1, "", "role_type"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_openai_assistant_message"], [9, 2, 1, "", "to_openai_message"], [9, 2, 1, "", "to_openai_system_message"], [9, 2, 1, "", "to_openai_user_message"], [9, 4, 1, "", "video_bytes"], [9, 4, 1, "", "video_detail"]], "camel.prompts": [[10, 1, 1, "", "AISocietyPromptTemplateDict"], [10, 1, 1, "", "CodePrompt"], [10, 1, 1, "", "CodePromptTemplateDict"], [10, 1, 1, "", "EvaluationPromptTemplateDict"], [10, 1, 1, "", "GenerateTextEmbeddingDataPromptTemplateDict"], [10, 1, 1, "", "ImageCraftPromptTemplateDict"], [10, 1, 1, "", "MisalignmentPromptTemplateDict"], [10, 1, 1, "", "MultiConditionImageCraftPromptTemplateDict"], [10, 1, 1, "", "ObjectRecognitionPromptTemplateDict"], [10, 1, 1, "", "PromptTemplateGenerator"], [10, 1, 1, "", "RoleDescriptionPromptTemplateDict"], [10, 1, 1, "", "SolutionExtractionPromptTemplateDict"], [10, 1, 1, "", "TaskPromptTemplateDict"], [10, 1, 1, "", "TextPrompt"], [10, 1, 1, "", "TextPromptDict"], [10, 1, 1, "", "TranslationPromptTemplateDict"], [10, 1, 1, "", "VideoDescriptionPromptTemplateDict"], [10, 0, 0, "-", "ai_society"], [10, 0, 0, "-", "base"], [10, 0, 0, "-", "code"], [10, 0, 0, "-", "misalignment"], [10, 0, 0, "-", "prompt_templates"], [10, 0, 0, "-", "task_prompt_template"], [10, 0, 0, "-", "translation"]], "camel.prompts.AISocietyPromptTemplateDict": [[10, 4, 1, "id20", "ASSISTANT_PROMPT"], [10, 4, 1, "", "CRITIC_PROMPT"], [10, 4, 1, "id21", "GENERATE_ASSISTANTS"], [10, 4, 1, "id22", "GENERATE_TASKS"], [10, 4, 1, "id23", "GENERATE_USERS"], [10, 4, 1, "id24", "TASK_SPECIFY_PROMPT"], [10, 4, 1, "id25", "USER_PROMPT"]], "camel.prompts.CodePrompt": [[10, 2, 1, "", "capitalize"], [10, 2, 1, "", "casefold"], [10, 2, 1, "", "center"], [10, 3, 1, "id26", "code_type"], [10, 2, 1, "", "count"], [10, 2, 1, "", "encode"], [10, 2, 1, "", "endswith"], [10, 2, 1, "", "execute"], [10, 2, 1, "", "expandtabs"], [10, 2, 1, "", "find"], [10, 2, 1, "", "format"], [10, 2, 1, "", "format_map"], [10, 2, 1, "", "index"], [10, 2, 1, "", "isalnum"], [10, 2, 1, "", "isalpha"], [10, 2, 1, "", "isascii"], [10, 2, 1, "", "isdecimal"], [10, 2, 1, "", "isdigit"], [10, 2, 1, "", "isidentifier"], [10, 2, 1, "", "islower"], [10, 2, 1, "", "isnumeric"], [10, 2, 1, "", "isprintable"], [10, 2, 1, "", "isspace"], [10, 2, 1, "", "istitle"], [10, 2, 1, "", "isupper"], [10, 2, 1, "", "join"], [10, 2, 1, "", "ljust"], [10, 2, 1, "", "lower"], [10, 2, 1, "", "lstrip"], [10, 2, 1, "", "maketrans"], [10, 2, 1, "", "partition"], [10, 2, 1, "", "removeprefix"], [10, 2, 1, "", "removesuffix"], [10, 2, 1, "", "replace"], [10, 2, 1, "", "rfind"], [10, 2, 1, "", "rindex"], [10, 2, 1, "", "rjust"], [10, 2, 1, "", "rpartition"], [10, 2, 1, "", "rsplit"], [10, 2, 1, "", "rstrip"], [10, 2, 1, "", "set_code_type"], [10, 2, 1, "", "split"], [10, 2, 1, "", "splitlines"], [10, 2, 1, "", "startswith"], [10, 2, 1, "", "strip"], [10, 2, 1, "", "swapcase"], [10, 2, 1, "", "title"], [10, 2, 1, "", "translate"], [10, 2, 1, "", "upper"], [10, 2, 1, "", "zfill"]], "camel.prompts.CodePromptTemplateDict": [[10, 4, 1, "id27", "ASSISTANT_PROMPT"], [10, 4, 1, "id28", "GENERATE_DOMAINS"], [10, 4, 1, "id29", "GENERATE_LANGUAGES"], [10, 4, 1, "id30", "GENERATE_TASKS"], [10, 4, 1, "id31", "TASK_SPECIFY_PROMPT"], [10, 4, 1, "id32", "USER_PROMPT"]], "camel.prompts.EvaluationPromptTemplateDict": [[10, 4, 1, "id33", "GENERATE_QUESTIONS"]], "camel.prompts.GenerateTextEmbeddingDataPromptTemplateDict": [[10, 4, 1, "id34", "ASSISTANT_PROMPT"], [10, 4, 1, "id35", "GENERATE_TASKS"]], "camel.prompts.ImageCraftPromptTemplateDict": [[10, 4, 1, "", "ASSISTANT_PROMPT"]], "camel.prompts.MisalignmentPromptTemplateDict": [[10, 4, 1, "id36", "ASSISTANT_PROMPT"], [10, 4, 1, "id37", "DAN_PROMPT"], [10, 4, 1, "id38", "GENERATE_TASKS"], [10, 4, 1, "id39", "TASK_SPECIFY_PROMPT"], [10, 4, 1, "id40", "USER_PROMPT"]], "camel.prompts.MultiConditionImageCraftPromptTemplateDict": [[10, 4, 1, "", "ASSISTANT_PROMPT"]], "camel.prompts.ObjectRecognitionPromptTemplateDict": [[10, 4, 1, "", "ASSISTANT_PROMPT"]], "camel.prompts.PromptTemplateGenerator": [[10, 2, 1, "", "get_generate_tasks_prompt"], [10, 2, 1, "", "get_prompt_from_key"], [10, 2, 1, "", "get_system_prompt"], [10, 2, 1, "", "get_task_specify_prompt"]], "camel.prompts.RoleDescriptionPromptTemplateDict": [[10, 4, 1, "id41", "ASSISTANT_PROMPT"], [10, 4, 1, "id42", "ROLE_DESCRIPTION_PROMPT"], [10, 4, 1, "id43", "USER_PROMPT"]], "camel.prompts.SolutionExtractionPromptTemplateDict": [[10, 4, 1, "id44", "ASSISTANT_PROMPT"]], "camel.prompts.TextPrompt": [[10, 2, 1, "", "capitalize"], [10, 2, 1, "", "casefold"], [10, 2, 1, "", "center"], [10, 2, 1, "", "count"], [10, 2, 1, "", "encode"], [10, 2, 1, "", "endswith"], [10, 2, 1, "", "expandtabs"], [10, 2, 1, "", "find"], [10, 2, 1, "", "format"], [10, 2, 1, "", "format_map"], [10, 2, 1, "", "index"], [10, 2, 1, "", "isalnum"], [10, 2, 1, "", "isalpha"], [10, 2, 1, "", "isascii"], [10, 2, 1, "", "isdecimal"], [10, 2, 1, "", "isdigit"], [10, 2, 1, "", "isidentifier"], [10, 2, 1, "", "islower"], [10, 2, 1, "", "isnumeric"], [10, 2, 1, "", "isprintable"], [10, 2, 1, "", "isspace"], [10, 2, 1, "", "istitle"], [10, 2, 1, "", "isupper"], [10, 2, 1, "", "join"], [10, 3, 1, "id45", "key_words"], [10, 2, 1, "", "ljust"], [10, 2, 1, "", "lower"], [10, 2, 1, "", "lstrip"], [10, 2, 1, "", "maketrans"], [10, 2, 1, "", "partition"], [10, 2, 1, "", "removeprefix"], [10, 2, 1, "", "removesuffix"], [10, 2, 1, "", "replace"], [10, 2, 1, "", "rfind"], [10, 2, 1, "", "rindex"], [10, 2, 1, "", "rjust"], [10, 2, 1, "", "rpartition"], [10, 2, 1, "", "rsplit"], [10, 2, 1, "", "rstrip"], [10, 2, 1, "", "split"], [10, 2, 1, "", "splitlines"], [10, 2, 1, "", "startswith"], [10, 2, 1, "", "strip"], [10, 2, 1, "", "swapcase"], [10, 2, 1, "", "title"], [10, 2, 1, "", "translate"], [10, 2, 1, "", "upper"], [10, 2, 1, "", "zfill"]], "camel.prompts.TextPromptDict": [[10, 4, 1, "", "EMBODIMENT_PROMPT"]], "camel.prompts.TranslationPromptTemplateDict": [[10, 4, 1, "id46", "ASSISTANT_PROMPT"]], "camel.prompts.VideoDescriptionPromptTemplateDict": [[10, 4, 1, "", "ASSISTANT_PROMPT"]], "camel.prompts.ai_society": [[10, 1, 1, "", "AISocietyPromptTemplateDict"]], "camel.prompts.ai_society.AISocietyPromptTemplateDict": [[10, 4, 1, "id0", "ASSISTANT_PROMPT"], [10, 4, 1, "", "CRITIC_PROMPT"], [10, 4, 1, "id1", "GENERATE_ASSISTANTS"], [10, 4, 1, "id2", "GENERATE_TASKS"], [10, 4, 1, "id3", "GENERATE_USERS"], [10, 4, 1, "id4", "TASK_SPECIFY_PROMPT"], [10, 4, 1, "id5", "USER_PROMPT"]], "camel.prompts.base": [[10, 1, 1, "", "CodePrompt"], [10, 1, 1, "", "TextPrompt"], [10, 1, 1, "", "TextPromptDict"], [10, 5, 1, "", "return_prompt_wrapper"], [10, 5, 1, "", "wrap_prompt_functions"]], "camel.prompts.base.CodePrompt": [[10, 2, 1, "", "capitalize"], [10, 2, 1, "", "casefold"], [10, 2, 1, "", "center"], [10, 3, 1, "id6", "code_type"], [10, 2, 1, "", "count"], [10, 2, 1, "", "encode"], [10, 2, 1, "", "endswith"], [10, 2, 1, "", "execute"], [10, 2, 1, "", "expandtabs"], [10, 2, 1, "", "find"], [10, 2, 1, "", "format"], [10, 2, 1, "", "format_map"], [10, 2, 1, "", "index"], [10, 2, 1, "", "isalnum"], [10, 2, 1, "", "isalpha"], [10, 2, 1, "", "isascii"], [10, 2, 1, "", "isdecimal"], [10, 2, 1, "", "isdigit"], [10, 2, 1, "", "isidentifier"], [10, 2, 1, "", "islower"], [10, 2, 1, "", "isnumeric"], [10, 2, 1, "", "isprintable"], [10, 2, 1, "", "isspace"], [10, 2, 1, "", "istitle"], [10, 2, 1, "", "isupper"], [10, 2, 1, "", "join"], [10, 2, 1, "", "ljust"], [10, 2, 1, "", "lower"], [10, 2, 1, "", "lstrip"], [10, 2, 1, "", "maketrans"], [10, 2, 1, "", "partition"], [10, 2, 1, "", "removeprefix"], [10, 2, 1, "", "removesuffix"], [10, 2, 1, "", "replace"], [10, 2, 1, "", "rfind"], [10, 2, 1, "", "rindex"], [10, 2, 1, "", "rjust"], [10, 2, 1, "", "rpartition"], [10, 2, 1, "", "rsplit"], [10, 2, 1, "", "rstrip"], [10, 2, 1, "", "set_code_type"], [10, 2, 1, "", "split"], [10, 2, 1, "", "splitlines"], [10, 2, 1, "", "startswith"], [10, 2, 1, "", "strip"], [10, 2, 1, "", "swapcase"], [10, 2, 1, "", "title"], [10, 2, 1, "", "translate"], [10, 2, 1, "", "upper"], [10, 2, 1, "", "zfill"]], "camel.prompts.base.TextPrompt": [[10, 2, 1, "", "capitalize"], [10, 2, 1, "", "casefold"], [10, 2, 1, "", "center"], [10, 2, 1, "", "count"], [10, 2, 1, "", "encode"], [10, 2, 1, "", "endswith"], [10, 2, 1, "", "expandtabs"], [10, 2, 1, "", "find"], [10, 2, 1, "", "format"], [10, 2, 1, "", "format_map"], [10, 2, 1, "", "index"], [10, 2, 1, "", "isalnum"], [10, 2, 1, "", "isalpha"], [10, 2, 1, "", "isascii"], [10, 2, 1, "", "isdecimal"], [10, 2, 1, "", "isdigit"], [10, 2, 1, "", "isidentifier"], [10, 2, 1, "", "islower"], [10, 2, 1, "", "isnumeric"], [10, 2, 1, "", "isprintable"], [10, 2, 1, "", "isspace"], [10, 2, 1, "", "istitle"], [10, 2, 1, "", "isupper"], [10, 2, 1, "", "join"], [10, 3, 1, "id7", "key_words"], [10, 2, 1, "", "ljust"], [10, 2, 1, "", "lower"], [10, 2, 1, "", "lstrip"], [10, 2, 1, "", "maketrans"], [10, 2, 1, "", "partition"], [10, 2, 1, "", "removeprefix"], [10, 2, 1, "", "removesuffix"], [10, 2, 1, "", "replace"], [10, 2, 1, "", "rfind"], [10, 2, 1, "", "rindex"], [10, 2, 1, "", "rjust"], [10, 2, 1, "", "rpartition"], [10, 2, 1, "", "rsplit"], [10, 2, 1, "", "rstrip"], [10, 2, 1, "", "split"], [10, 2, 1, "", "splitlines"], [10, 2, 1, "", "startswith"], [10, 2, 1, "", "strip"], [10, 2, 1, "", "swapcase"], [10, 2, 1, "", "title"], [10, 2, 1, "", "translate"], [10, 2, 1, "", "upper"], [10, 2, 1, "", "zfill"]], "camel.prompts.base.TextPromptDict": [[10, 4, 1, "", "EMBODIMENT_PROMPT"]], "camel.prompts.code": [[10, 1, 1, "", "CodePromptTemplateDict"]], "camel.prompts.code.CodePromptTemplateDict": [[10, 4, 1, "id8", "ASSISTANT_PROMPT"], [10, 4, 1, "id9", "GENERATE_DOMAINS"], [10, 4, 1, "id10", "GENERATE_LANGUAGES"], [10, 4, 1, "id11", "GENERATE_TASKS"], [10, 4, 1, "id12", "TASK_SPECIFY_PROMPT"], [10, 4, 1, "id13", "USER_PROMPT"]], "camel.prompts.misalignment": [[10, 1, 1, "", "MisalignmentPromptTemplateDict"]], "camel.prompts.misalignment.MisalignmentPromptTemplateDict": [[10, 4, 1, "id14", "ASSISTANT_PROMPT"], [10, 4, 1, "id15", "DAN_PROMPT"], [10, 4, 1, "id16", "GENERATE_TASKS"], [10, 4, 1, "id17", "TASK_SPECIFY_PROMPT"], [10, 4, 1, "id18", "USER_PROMPT"]], "camel.prompts.prompt_templates": [[10, 1, 1, "", "PromptTemplateGenerator"]], "camel.prompts.prompt_templates.PromptTemplateGenerator": [[10, 2, 1, "", "get_generate_tasks_prompt"], [10, 2, 1, "", "get_prompt_from_key"], [10, 2, 1, "", "get_system_prompt"], [10, 2, 1, "", "get_task_specify_prompt"]], "camel.prompts.task_prompt_template": [[10, 1, 1, "", "TaskPromptTemplateDict"]], "camel.prompts.translation": [[10, 1, 1, "", "TranslationPromptTemplateDict"]], "camel.prompts.translation.TranslationPromptTemplateDict": [[10, 4, 1, "id19", "ASSISTANT_PROMPT"]], "camel.types": [[5, 1, 1, "", "AudioModelType"], [5, 1, 1, "", "ChatCompletion"], [5, 1, 1, "", "ChatCompletionAssistantMessageParam"], [5, 1, 1, "", "ChatCompletionChunk"], [5, 1, 1, "", "ChatCompletionFunctionMessageParam"], [5, 1, 1, "", "ChatCompletionMessage"], [5, 1, 1, "", "ChatCompletionSystemMessageParam"], [5, 1, 1, "", "ChatCompletionUserMessageParam"], [5, 1, 1, "", "Choice"], [5, 1, 1, "", "CompletionUsage"], [5, 1, 1, "", "EmbeddingModelType"], [5, 1, 1, "", "ModelPlatformType"], [5, 1, 1, "", "ModelType"], [5, 1, 1, "", "OpenAIBackendRole"], [5, 1, 1, "", "OpenAIImageType"], [5, 1, 1, "", "OpenAIVisionDetailType"], [5, 1, 1, "", "OpenAPIName"], [5, 1, 1, "", "RoleType"], [5, 1, 1, "", "StorageType"], [5, 1, 1, "", "TaskType"], [5, 1, 1, "", "TerminationMode"], [5, 1, 1, "", "VectorDistance"], [5, 1, 1, "", "VoiceType"]], "camel.types.AudioModelType": [[5, 4, 1, "", "TTS_1"], [5, 4, 1, "", "TTS_1_HD"], [5, 3, 1, "", "is_openai"]], "camel.types.ChatCompletion": [[5, 4, 1, "", "choices"], [5, 4, 1, "", "created"], [5, 4, 1, "", "id"], [5, 4, 1, "", "model"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "object"], [5, 4, 1, "", "service_tier"], [5, 4, 1, "", "system_fingerprint"], [5, 4, 1, "", "usage"]], "camel.types.ChatCompletionAssistantMessageParam": [[5, 4, 1, "", "content"], [5, 4, 1, "", "function_call"], [5, 4, 1, "", "name"], [5, 4, 1, "", "refusal"], [5, 4, 1, "", "role"], [5, 4, 1, "", "tool_calls"]], "camel.types.ChatCompletionChunk": [[5, 4, 1, "", "choices"], [5, 4, 1, "", "created"], [5, 4, 1, "", "id"], [5, 4, 1, "", "model"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "object"], [5, 4, 1, "", "service_tier"], [5, 4, 1, "", "system_fingerprint"], [5, 4, 1, "", "usage"]], "camel.types.ChatCompletionFunctionMessageParam": [[5, 4, 1, "", "content"], [5, 4, 1, "", "name"], [5, 4, 1, "", "role"]], "camel.types.ChatCompletionMessage": [[5, 4, 1, "", "content"], [5, 4, 1, "", "function_call"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "refusal"], [5, 4, 1, "", "role"], [5, 4, 1, "", "tool_calls"]], "camel.types.ChatCompletionSystemMessageParam": [[5, 4, 1, "", "content"], [5, 4, 1, "", "name"], [5, 4, 1, "", "role"]], "camel.types.ChatCompletionUserMessageParam": [[5, 4, 1, "", "content"], [5, 4, 1, "", "name"], [5, 4, 1, "", "role"]], "camel.types.Choice": [[5, 4, 1, "", "finish_reason"], [5, 4, 1, "", "index"], [5, 4, 1, "", "logprobs"], [5, 4, 1, "", "message"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"]], "camel.types.CompletionUsage": [[5, 4, 1, "", "completion_tokens"], [5, 4, 1, "", "model_computed_fields"], [5, 4, 1, "", "model_config"], [5, 4, 1, "", "model_fields"], [5, 4, 1, "", "prompt_tokens"], [5, 4, 1, "", "total_tokens"]], "camel.types.EmbeddingModelType": [[5, 4, 1, "", "MISTRAL_EMBED"], [5, 4, 1, "", "TEXT_EMBEDDING_3_LARGE"], [5, 4, 1, "", "TEXT_EMBEDDING_3_SMALL"], [5, 4, 1, "", "TEXT_EMBEDDING_ADA_2"], [5, 3, 1, "", "is_mistral"], [5, 3, 1, "", "is_openai"], [5, 3, 1, "", "output_dim"]], "camel.types.ModelPlatformType": [[5, 4, 1, "", "ANTHROPIC"], [5, 4, 1, "", "AZURE"], [5, 4, 1, "", "DEFAULT"], [5, 4, 1, "", "GEMINI"], [5, 4, 1, "", "GROQ"], [5, 4, 1, "", "LITELLM"], [5, 4, 1, "", "MISTRAL"], [5, 4, 1, "", "OLLAMA"], [5, 4, 1, "", "OPENAI"], [5, 4, 1, "", "OPENAI_COMPATIBILITY_MODEL"], [5, 4, 1, "", "OPEN_SOURCE"], [5, 4, 1, "", "SAMBA"], [5, 4, 1, "", "TOGETHER"], [5, 4, 1, "", "VLLM"], [5, 4, 1, "", "ZHIPU"], [5, 3, 1, "", "is_anthropic"], [5, 3, 1, "", "is_azure"], [5, 3, 1, "", "is_gemini"], [5, 3, 1, "", "is_groq"], [5, 3, 1, "", "is_litellm"], [5, 3, 1, "", "is_mistral"], [5, 3, 1, "", "is_ollama"], [5, 3, 1, "", "is_open_source"], [5, 3, 1, "", "is_openai"], [5, 3, 1, "", "is_openai_compatibility_model"], [5, 3, 1, "", "is_samba"], [5, 3, 1, "", "is_together"], [5, 3, 1, "", "is_vllm"], [5, 3, 1, "", "is_zhipuai"]], "camel.types.ModelType": [[5, 4, 1, "", "CLAUDE_2_0"], [5, 4, 1, "", "CLAUDE_2_1"], [5, 4, 1, "", "CLAUDE_3_5_SONNET"], [5, 4, 1, "", "CLAUDE_3_HAIKU"], [5, 4, 1, "", "CLAUDE_3_OPUS"], [5, 4, 1, "", "CLAUDE_3_SONNET"], [5, 4, 1, "", "CLAUDE_INSTANT_1_2"], [5, 4, 1, "", "GEMINI_1_5_FLASH"], [5, 4, 1, "", "GEMINI_1_5_PRO"], [5, 4, 1, "", "GLM_3_TURBO"], [5, 4, 1, "", "GLM_4"], [5, 4, 1, "", "GLM_4V"], [5, 4, 1, "", "GLM_4_OPEN_SOURCE"], [5, 4, 1, "", "GPT_3_5_TURBO"], [5, 4, 1, "", "GPT_4"], [5, 4, 1, "", "GPT_4O"], [5, 4, 1, "", "GPT_4O_MINI"], [5, 4, 1, "", "GPT_4_TURBO"], [5, 4, 1, "", "GROQ_GEMMA_2_9B_IT"], [5, 4, 1, "", "GROQ_GEMMA_7B_IT"], [5, 4, 1, "", "GROQ_LLAMA_3_1_405B"], [5, 4, 1, "", "GROQ_LLAMA_3_1_70B"], [5, 4, 1, "", "GROQ_LLAMA_3_1_8B"], [5, 4, 1, "", "GROQ_LLAMA_3_70B"], [5, 4, 1, "", "GROQ_LLAMA_3_8B"], [5, 4, 1, "", "GROQ_MIXTRAL_8_7B"], [5, 4, 1, "", "LLAMA_2"], [5, 4, 1, "", "LLAMA_3"], [5, 4, 1, "", "MISTRAL_7B"], [5, 4, 1, "", "MISTRAL_CODESTRAL"], [5, 4, 1, "", "MISTRAL_CODESTRAL_MAMBA"], [5, 4, 1, "", "MISTRAL_LARGE"], [5, 4, 1, "", "MISTRAL_MIXTRAL_8x22B"], [5, 4, 1, "", "MISTRAL_MIXTRAL_8x7B"], [5, 4, 1, "", "MISTRAL_NEMO"], [5, 4, 1, "", "NEMOTRON_4_REWARD"], [5, 4, 1, "", "QWEN_2"], [5, 4, 1, "", "SAMBA_LLAMA_3_1_405B"], [5, 4, 1, "", "SAMBA_LLAMA_3_1_70B"], [5, 4, 1, "", "SAMBA_LLAMA_3_1_8B"], [5, 4, 1, "", "STUB"], [5, 4, 1, "", "VICUNA"], [5, 4, 1, "", "VICUNA_16K"], [5, 3, 1, "", "is_anthropic"], [5, 3, 1, "", "is_azure_openai"], [5, 3, 1, "", "is_gemini"], [5, 3, 1, "", "is_groq"], [5, 3, 1, "", "is_mistral"], [5, 3, 1, "", "is_nvidia"], [5, 3, 1, "", "is_open_source"], [5, 3, 1, "", "is_openai"], [5, 3, 1, "", "is_samba"], [5, 3, 1, "", "is_zhipuai"], [5, 3, 1, "", "token_limit"], [5, 2, 1, "", "validate_model_name"], [5, 3, 1, "", "value_for_tiktoken"]], "camel.types.OpenAIBackendRole": [[5, 4, 1, "", "ASSISTANT"], [5, 4, 1, "", "FUNCTION"], [5, 4, 1, "", "SYSTEM"], [5, 4, 1, "", "TOOL"], [5, 4, 1, "", "USER"]], "camel.types.OpenAIImageType": [[5, 4, 1, "", "GIF"], [5, 4, 1, "", "JPEG"], [5, 4, 1, "", "JPG"], [5, 4, 1, "", "PNG"], [5, 4, 1, "", "WEBP"]], "camel.types.OpenAIVisionDetailType": [[5, 4, 1, "", "AUTO"], [5, 4, 1, "", "HIGH"], [5, 4, 1, "", "LOW"]], "camel.types.OpenAPIName": [[5, 4, 1, "", "BIZTOC"], [5, 4, 1, "", "COURSERA"], [5, 4, 1, "", "CREATE_QR_CODE"], [5, 4, 1, "", "KLARNA"], [5, 4, 1, "", "NASA_APOD"], [5, 4, 1, "", "OUTSCHOOL"], [5, 4, 1, "", "SPEAK"], [5, 4, 1, "", "WEB_SCRAPER"]], "camel.types.RoleType": [[5, 4, 1, "", "ASSISTANT"], [5, 4, 1, "", "CRITIC"], [5, 4, 1, "", "DEFAULT"], [5, 4, 1, "", "EMBODIMENT"], [5, 4, 1, "", "USER"]], "camel.types.StorageType": [[5, 4, 1, "", "MILVUS"], [5, 4, 1, "", "QDRANT"]], "camel.types.TaskType": [[5, 4, 1, "", "AI_SOCIETY"], [5, 4, 1, "", "CODE"], [5, 4, 1, "", "DEFAULT"], [5, 4, 1, "", "EVALUATION"], [5, 4, 1, "", "GENERATE_TEXT_EMBEDDING_DATA"], [5, 4, 1, "", "IMAGE_CRAFT"], [5, 4, 1, "", "MISALIGNMENT"], [5, 4, 1, "", "MULTI_CONDITION_IMAGE_CRAFT"], [5, 4, 1, "", "OBJECT_RECOGNITION"], [5, 4, 1, "", "ROLE_DESCRIPTION"], [5, 4, 1, "", "SOLUTION_EXTRACTION"], [5, 4, 1, "", "TRANSLATION"], [5, 4, 1, "", "VIDEO_DESCRIPTION"]], "camel.types.TerminationMode": [[5, 4, 1, "", "ALL"], [5, 4, 1, "", "ANY"]], "camel.types.VectorDistance": [[5, 4, 1, "", "COSINE"], [5, 4, 1, "", "DOT"], [5, 4, 1, "", "EUCLIDEAN"]], "camel.types.VoiceType": [[5, 4, 1, "", "ALLOY"], [5, 4, 1, "", "ECHO"], [5, 4, 1, "", "FABLE"], [5, 4, 1, "", "NOVA"], [5, 4, 1, "", "ONYX"], [5, 4, 1, "", "SHIMMER"], [5, 3, 1, "", "is_openai"]], "camel.utils": [[5, 1, 1, "", "AgentOpsMeta"], [5, 1, 1, "", "AnthropicTokenCounter"], [5, 1, 1, "", "BaseTokenCounter"], [5, 1, 1, "", "Constants"], [5, 1, 1, "", "GeminiTokenCounter"], [5, 1, 1, "", "LiteLLMTokenCounter"], [5, 1, 1, "", "MistralTokenCounter"], [5, 1, 1, "", "OpenAITokenCounter"], [5, 1, 1, "", "OpenSourceTokenCounter"], [5, 5, 1, "", "agentops_decorator"], [5, 5, 1, "", "api_keys_required"], [5, 5, 1, "", "check_server_running"], [5, 5, 1, "", "create_chunks"], [5, 5, 1, "", "dependencies_required"], [5, 5, 1, "", "download_tasks"], [5, 5, 1, "", "func_string_to_callable"], [5, 5, 1, "", "get_first_int"], [5, 5, 1, "", "get_model_encoding"], [5, 5, 1, "", "get_prompt_template_key_words"], [5, 5, 1, "", "get_pydantic_major_version"], [5, 5, 1, "", "get_pydantic_object_schema"], [5, 5, 1, "", "get_system_information"], [5, 5, 1, "", "get_task_list"], [5, 5, 1, "", "handle_http_error"], [5, 5, 1, "", "is_docker_running"], [5, 5, 1, "", "json_to_function_code"], [5, 5, 1, "", "print_text_animated"], [5, 5, 1, "", "text_extract_from_web"], [5, 5, 1, "", "to_pascal"], [5, 5, 1, "", "track_agent"]], "camel.utils.AnthropicTokenCounter": [[5, 2, 1, "", "count_tokens_from_messages"]], "camel.utils.BaseTokenCounter": [[5, 2, 1, "", "count_tokens_from_messages"]], "camel.utils.Constants": [[5, 4, 1, "", "FUNC_NAME_FOR_STRUCTURE_OUTPUT"], [5, 4, 1, "", "VIDEO_DEFAULT_IMAGE_SIZE"], [5, 4, 1, "", "VIDEO_DEFAULT_PLUG_PYAV"], [5, 4, 1, "", "VIDEO_IMAGE_EXTRACTION_INTERVAL"]], "camel.utils.GeminiTokenCounter": [[5, 2, 1, "", "count_tokens_from_messages"]], "camel.utils.LiteLLMTokenCounter": [[5, 2, 1, "", "calculate_cost_from_response"], [5, 3, 1, "", "completion_cost"], [5, 2, 1, "", "count_tokens_from_messages"], [5, 3, 1, "", "token_counter"]], "camel.utils.MistralTokenCounter": [[5, 2, 1, "", "count_tokens_from_messages"]], "camel.utils.OpenAITokenCounter": [[5, 2, 1, "", "count_tokens_from_messages"]], "camel.utils.OpenSourceTokenCounter": [[5, 2, 1, "", "count_tokens_from_messages"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"how": 0, "updat": 0, "document": [0, 16], "build": 0, "critic": 1, "agent": [1, 2, 3, 4, 6, 7, 16, 23, 24, 25], "tree": 1, "search": 1, "philosoph": [1, 2, 3, 4, 23], "bit": [1, 2, 3, 4, 23], "quick": [1, 2, 3, 4], "start": [1, 2, 3, 4, 16, 17, 19, 20, 21], "step": [1, 2, 3, 4], "0": [1, 2, 3, 4], "prepar": [1, 3, 25], "1": [1, 2, 3, 4, 14, 17, 18, 19, 20, 21, 23], "configur": [1, 3], "specif": 1, "2": [1, 2, 3, 4, 14, 17, 18, 19, 20, 21, 23], "get": [1, 16, 17, 19, 20, 21], "3": [1, 2, 3, 4, 14, 17, 18, 19, 20, 21, 23], "us": [1, 13, 14, 15, 17, 19, 20, 21], "task": [1, 3], "solv": [1, 3], "remark": [1, 3, 4], "embodi": 2, "prepart": [2, 4], "defin": [2, 4], "role": [2, 3, 4, 23], "initi": [2, 4, 25], "interact": [2, 4, 25], "creat": [3, 4, 12, 13], "your": [3, 4, 15, 25], "first": [3, 4], "societi": 3, "plai": [3, 23], "session": 3, "set": [3, 14], "argument": 3, "user": 3, "assist": 3, "kickstart": 3, "advanc": 4, "featur": 4, "tool": [4, 24, 25], "usag": [4, 24, 25], "memori": [4, 8], "misc": 4, "camel": [5, 6, 7, 8, 9, 10, 11, 16, 22, 24, 25], "packag": [5, 6, 7, 8, 9, 10, 11, 25], "subpackag": 5, "submodul": [5, 6, 7, 9, 10], "config": 5, "modul": [5, 6, 7, 8, 9, 10, 11, 16], "gener": 5, "human": 5, "messag": [5, 9], "type": [5, 12, 17, 19, 20, 21], "util": 5, "content": [5, 6, 7, 8, 9, 10, 11], "chat_ag": 6, "role_plai": 6, "task_ag": 6, "tool_ag": 7, "base": [7, 9, 10, 19], "hugging_face_tool_ag": 7, "chat_messag": 9, "system_messag": 9, "prompt": [10, 15], "ai_societi": 10, "code": [10, 12], "misalign": 10, "prompt_templ": 10, "task_prompt_templ": 10, "translat": 10, "storag": [11, 21], "introduct": [12, 13, 15], "codeprompt": 12, "class": [12, 13, 15], "import": [12, 25], "instanc": [12, 13, 15], "access": 12, "modifi": 12, "execut": 12, "work": 13, "basemessag": 13, "method": [13, 15], "instal": [14, 25], "setup": 14, "option": 14, "from": [14, 25], "pypi": 14, "sourc": 14, "poetri": 14, "conda": 14, "pip": 14, "api": [14, 16], "openai": 14, "unix": 14, "like": 14, "system": 14, "linux": 14, "maco": 14, "window": 14, "local": 14, "model": 14, "exampl": 14, "ollama": 14, "llama": 14, "write": 15, "textprompt": 15, "The": 15, "key_word": 15, "properti": 15, "format": 15, "manipul": 15, "welcom": 16, "": [16, 25], "main": 16, "kei": [16, 21], "tutori": 16, "cookbook": 16, "refer": 16, "indic": 16, "tabl": 16, "involv": 16, "embed": 17, "concept": [17, 18, 19, 20, 21], "text": 17, "imag": 17, "wip": 17, "openaiembed": 17, "sentencetransformerencod": 17, "interpret": 18, "intern": 18, "python": 18, "subprocess": 18, "docker": 18, "loader": 19, "io": 19, "unstructur": 19, "retriev": 20, "vector": 20, "keyword": 20, "auto": [20, 23], "valu": 21, "vectordb": 21, "inmemorykeyvaluestorag": 21, "jsonstorag": 21, "milvusstorag": 21, "4": [21, 23], "qdrantstorag": 21, "rag": 23, "load": 23, "data": 23, "custom": 23, "singl": 23, "In": [24, 25], "thi": [24, 25], "notebook": [24, 25], "we": [24, 25], "demonstr": [24, 25], "chatag": [24, 25], "roleplai": [24, 25], "composio": 25, "allow": 25, "seamlessli": 25, "extern": 25, "applic": 25, "connect": 25, "environ": 25, "necessari": 25, "let": 25, "run": 25}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"How to update the documentation": [[0, "how-to-update-the-documentation"]], "Building Documentation": [[0, "building-documentation"]], "Critic Agents and Tree Search": [[1, "critic-agents-and-tree-search"]], "Philosophical Bits": [[1, "philosophical-bits"], [2, "philosophical-bits"], [3, "philosophical-bits"], [4, "philosophical-bits"], [23, "philosophical-bits"]], "Quick Start": [[1, "quick-start"], [2, "quick-start"], [3, "quick-start"], [4, "quick-start"]], "\ud83d\udd79 Step 0: Preparations": [[1, "step-0-preparations"]], "\ud83d\udd79 Step 1: Configure the Specifications for Critic Agents": [[1, "step-1-configure-the-specifications-for-critic-agents"]], "\ud83d\udd79 Step 2: Get the Critic Agents": [[1, "step-2-get-the-critic-agents"]], "\ud83d\udd79 Step 3: Using Critic Agents for Task Solving": [[1, "step-3-using-critic-agents-for-task-solving"]], "Remarks": [[1, "remarks"], [3, "remarks"], [4, "remarks"]], "Embodied Agents": [[2, "embodied-agents"]], "\ud83d\udd79 Step 0: Prepartions": [[2, "step-0-prepartions"]], "\ud83d\udd79 Step 1: Define the Role": [[2, "step-1-define-the-role"]], "\ud83d\udd79 Step 2: Initialize the Agent \ud83d\udc2b": [[2, "step-2-initialize-the-agent"]], "\ud83d\udd79 Step 3: Interact with the Agent with .step()": [[2, "step-3-interact-with-the-agent-with-step"]], "Creating Your First Agent Society": [[3, "creating-your-first-agent-society"]], "Step 0: Preparations": [[3, "step-0-preparations"]], "Step 1: Configure the Role-Playing Session": [[3, "step-1-configure-the-role-playing-session"]], "Set the Task Arguments": [[3, "set-the-task-arguments"]], "Set the User Arguments": [[3, "set-the-user-arguments"]], "Set the Assistant Arguments": [[3, "set-the-assistant-arguments"]], "Step 2: Kickstart Your Society": [[3, "step-2-kickstart-your-society"]], "Step 3: Solving Tasks with Your Society": [[3, "step-3-solving-tasks-with-your-society"]], "Creating Your First Agent": [[4, "creating-your-first-agent"]], "Step 0: Prepartions": [[4, "step-0-prepartions"]], "Step 1: Define the Role": [[4, "step-1-define-the-role"]], "Step 2: Initialize the Agent": [[4, "step-2-initialize-the-agent"]], "Step 3: Interact with the Agent with .step()": [[4, "step-3-interact-with-the-agent-with-step"]], "Advanced Features": [[4, "advanced-features"]], "Tool Usage": [[4, "tool-usage"]], "Memory": [[4, "memory"]], "Miscs": [[4, "miscs"]], "Camel Package": [[5, "camel-package"]], "Subpackages": [[5, "subpackages"]], "Submodules": [[5, "submodules"], [6, "submodules"], [7, "submodules"], [9, "submodules"], [10, "submodules"]], "camel.configs module": [[5, "module-camel.configs"]], "camel.generators module": [[5, "module-camel.generators"]], "camel.human module": [[5, "module-camel.human"]], "camel.messages module": [[5, "module-camel.messages"]], "camel.types module": [[5, "module-camel.types"]], "camel.utils module": [[5, "module-camel.utils"]], "Module contents": [[5, "module-camel"], [6, "module-camel.agents"], [7, "module-camel.agents.tool_agents"], [8, "module-contents"], [9, "module-camel.messages"], [10, "module-camel.prompts"], [11, "module-contents"]], "camel.agents package": [[6, "camel-agents-package"]], "camel.agents.chat_agent module": [[6, "module-camel.agents.chat_agent"]], "camel.agents.role_playing module": [[6, "camel-agents-role-playing-module"]], "camel.agents.task_agent module": [[6, "module-camel.agents.task_agent"]], "camel.agents.tool_agents package": [[7, "camel-agents-tool-agents-package"]], "camel.agents.tool_agents.base module": [[7, "module-camel.agents.tool_agents.base"]], "camel.agents.tool_agents.hugging_face_tool_agent module": [[7, "module-camel.agents.tool_agents.hugging_face_tool_agent"]], "camel.memories package": [[8, "camel-memories-package"]], "camel.messages package": [[9, "camel-messages-package"]], "camel.messages.base module": [[9, "module-camel.messages.base"]], "camel.messages.chat_messages module": [[9, "camel-messages-chat-messages-module"]], "camel.messages.system_messages module": [[9, "camel-messages-system-messages-module"]], "camel.prompts package": [[10, "camel-prompts-package"]], "camel.prompts.ai_society module": [[10, "module-camel.prompts.ai_society"]], "camel.prompts.base module": [[10, "module-camel.prompts.base"]], "camel.prompts.code module": [[10, "module-camel.prompts.code"]], "camel.prompts.misalignment module": [[10, "module-camel.prompts.misalignment"]], "camel.prompts.prompt_templates module": [[10, "module-camel.prompts.prompt_templates"]], "camel.prompts.task_prompt_template module": [[10, "module-camel.prompts.task_prompt_template"]], "camel.prompts.translation module": [[10, "module-camel.prompts.translation"]], "camel.storages package": [[11, "camel-storages-package"]], "Introduction to CodePrompt Class": [[12, "introduction-to-codeprompt-class"]], "Importing the CodePrompt Class": [[12, "importing-the-codeprompt-class"]], "Creating a CodePrompt Instance": [[12, "creating-a-codeprompt-instance"]], "Accessing the Code and Code Type": [[12, "accessing-the-code-and-code-type"]], "Modifying the Code Type": [[12, "modifying-the-code-type"]], "Executing the Code": [[12, "executing-the-code"]], "Working with the BaseMessage Class": [[13, "working-with-the-basemessage-class"]], "Introduction": [[13, "introduction"]], "Creating a BaseMessage Instance": [[13, "creating-a-basemessage-instance"]], "Using the Methods of the BaseMessage Class": [[13, "using-the-methods-of-the-basemessage-class"]], "Installation and Setup": [[14, "installation-and-setup"]], "\ud83d\udd79 Installation": [[14, "installation"]], "[Option 1] Install from PyPI": [[14, "option-1-install-from-pypi"]], "[Option 2] Install from Source": [[14, "option-2-install-from-source"]], "Install from Source with Poetry": [[14, "install-from-source-with-poetry"]], "Install from Source with Conda and Pip": [[14, "install-from-source-with-conda-and-pip"]], "\ud83d\udd79 API Setup": [[14, "api-setup"]], "[Option 1] Using OpenAI API": [[14, "option-1-using-openai-api"]], "Unix-like System (Linux / MacOS)": [[14, "unix-like-system-linux-macos"]], "Windows": [[14, "windows"]], "[Option 2] Using Local Models": [[14, "option-2-using-local-models"]], "Example: Using Ollama to set Llama 3 locally": [[14, "example-using-ollama-to-set-llama-3-locally"]], "Write Your Prompts with the TextPrompt Class": [[15, "write-your-prompts-with-the-textprompt-class"]], "Introduction to the TextPrompt class": [[15, "introduction-to-the-textprompt-class"]], "Using the TextPrompt class": [[15, "using-the-textprompt-class"]], "The key_words property": [[15, "the-key-words-property"]], "The format method": [[15, "the-format-method"]], "Manipulating TextPrompt instances": [[15, "manipulating-textprompt-instances"]], "Welcome to CAMEL\u2019s documentation!": [[16, "welcome-to-camel-s-documentation"]], "Main Documentation": [[16, "main-documentation"]], "Get Started": [[16, null]], "Agents": [[16, null]], "Key Modules": [[16, null]], "Tutorial and Cookbooks": [[16, null]], "API References": [[16, null]], "Indices and tables": [[16, "indices-and-tables"]], "Get Involved": [[16, "get-involved"]], "Embeddings": [[17, "embeddings"]], "1. Concept": [[17, "concept"], [18, "concept"], [19, "concept"], [20, "concept"], [21, "concept"]], "1.1. Text Embeddings": [[17, "text-embeddings"]], "1.2. Image Embeddings (WIP)": [[17, "image-embeddings-wip"]], "2. Types": [[17, "types"], [19, "types"], [20, "types"], [21, "types"]], "2.1. OpenAIEmbedding": [[17, "openaiembedding"]], "2.2. SentenceTransformerEncoder": [[17, "sentencetransformerencoder"]], "3. Get Started": [[17, "get-started"], [19, "get-started"], [20, "get-started"], [21, "get-started"]], "3.1. Using OpenAIEmbedding": [[17, "using-openaiembedding"]], "3.2. Using SentenceTransformerEncoder": [[17, "using-sentencetransformerencoder"]], "Interpreters": [[18, "interpreters"]], "1.1. Internal Python Interpreter": [[18, "internal-python-interpreter"]], "1.2. Subprocess Interpreter": [[18, "subprocess-interpreter"]], "1.3. Docker Interpreter": [[18, "docker-interpreter"]], "Loaders": [[19, "loaders"]], "2.1. Base IO": [[19, "base-io"]], "2.2. Unstructured IO": [[19, "unstructured-io"]], "3.1. Using Base IO": [[19, "using-base-io"]], "3.2. Using Unstructured IO": [[19, "using-unstructured-io"]], "Retrievers": [[20, "retrievers"]], "2.1. Vector Retriever": [[20, "vector-retriever"]], "2.2. Keyword Retriever": [[20, "keyword-retriever"]], "3.1. Using Vector Retriever": [[20, "using-vector-retriever"]], "3.2. Using Auto Retriever": [[20, "using-auto-retriever"]], "Storages": [[21, "storages"]], "2.1. Key Value Storages": [[21, "key-value-storages"]], "2.2. VectorDB Storages": [[21, "vectordb-storages"]], "3.1. Using InMemoryKeyValueStorage": [[21, "using-inmemorykeyvaluestorage"]], "3.2. Using JsonStorage": [[21, "using-jsonstorage"]], "3.3. Using MilvusStorage": [[21, "using-milvusstorage"]], "3.4. Using QdrantStorage": [[21, "using-qdrantstorage"]], "camel": [[22, "camel"]], "\ud83d\udc2b Agents with RAG": [[23, "agents-with-rag"]], "Load Data": [[23, "load-data"]], "1. Customized RAG": [[23, "customized-rag"]], "2. Auto RAG": [[23, "auto-rag"]], "3. Single Agent with Auto RAG": [[23, "single-agent-with-auto-rag"]], "4. Role-playing with Auto RAG": [[23, "role-playing-with-auto-rag"]], "\ud83d\udc2b Agents with Tools": [[24, "agents-with-tools"]], "In this notebook, we demonstrate the usage of CAMEL Tools with ChatAgent and RolePlaying.": [[24, "in-this-notebook-we-demonstrate-the-usage-of-camel-tools-with-chatagent-and-roleplaying"]], "\ud83d\udc2b Agents with Tools from Composio": [[25, "agents-with-tools-from-composio"]], "In this notebook, we demonstrate the usage of CAMEL ChatAgent and RolePlaying with Tools from Composio, allowing agents to seamlessly interact with external applications.": [[25, "in-this-notebook-we-demonstrate-the-usage-of-camel-chatagent-and-roleplaying-with-tools-from-composio-allowing-agents-to-seamlessly-interact-with-external-applications"]], "Install Packages & Connect a Tool": [[25, "install-packages-connect-a-tool"]], "Prepare your environment by initializing necessary imports from CAMEL & Composio.": [[25, "prepare-your-environment-by-initializing-necessary-imports-from-camel-composio"]], "Let\u2019s run CAMEL agents with tools from Composio!": [[25, "let-s-run-camel-agents-with-tools-from-composio"]]}, "indexentries": {"aisocietytaskpromptgenerator (class in camel.generators)": [[5, "camel.generators.AISocietyTaskPromptGenerator"]], "ai_society (camel.types.tasktype attribute)": [[5, "camel.types.TaskType.AI_SOCIETY"]], "all (camel.types.terminationmode attribute)": [[5, "camel.types.TerminationMode.ALL"]], "alloy (camel.types.voicetype attribute)": [[5, "camel.types.VoiceType.ALLOY"]], "anthropic (camel.types.modelplatformtype attribute)": [[5, "camel.types.ModelPlatformType.ANTHROPIC"]], "any (camel.types.terminationmode attribute)": [[5, "camel.types.TerminationMode.ANY"]], "assistant (camel.types.openaibackendrole attribute)": [[5, "camel.types.OpenAIBackendRole.ASSISTANT"]], "assistant (camel.types.roletype attribute)": [[5, "camel.types.RoleType.ASSISTANT"]], "auto (camel.types.openaivisiondetailtype attribute)": [[5, "camel.types.OpenAIVisionDetailType.AUTO"]], "azure (camel.types.modelplatformtype attribute)": [[5, "camel.types.ModelPlatformType.AZURE"]], "agentopsmeta (class in camel.utils)": [[5, "camel.utils.AgentOpsMeta"]], "anthropicconfig (class in camel.configs)": [[5, "camel.configs.AnthropicConfig"]], "anthropictokencounter (class in camel.utils)": [[5, "camel.utils.AnthropicTokenCounter"]], "audiomodeltype (class in camel.types)": [[5, "camel.types.AudioModelType"]], "biztoc (camel.types.openapiname attribute)": [[5, "camel.types.OpenAPIName.BIZTOC"]], "baseconfig (class in camel.configs)": [[5, "camel.configs.BaseConfig"]], "basemessage (class in camel.messages)": [[5, "camel.messages.BaseMessage"], [9, "camel.messages.BaseMessage"]], "basetokencounter (class in camel.utils)": [[5, "camel.utils.BaseTokenCounter"]], "claude_2_0 (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.CLAUDE_2_0"]], "claude_2_1 (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.CLAUDE_2_1"]], "claude_3_5_sonnet (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.CLAUDE_3_5_SONNET"]], "claude_3_haiku (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.CLAUDE_3_HAIKU"]], "claude_3_opus (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.CLAUDE_3_OPUS"]], "claude_3_sonnet (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.CLAUDE_3_SONNET"]], "claude_instant_1_2 (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.CLAUDE_INSTANT_1_2"]], "code (camel.types.tasktype attribute)": [[5, "camel.types.TaskType.CODE"]], "cosine (camel.types.vectordistance attribute)": [[5, "camel.types.VectorDistance.COSINE"]], "coursera (camel.types.openapiname attribute)": [[5, "camel.types.OpenAPIName.COURSERA"]], "create_qr_code (camel.types.openapiname attribute)": [[5, "camel.types.OpenAPIName.CREATE_QR_CODE"]], "critic (camel.types.roletype attribute)": [[5, "camel.types.RoleType.CRITIC"]], "chatcompletion (class in camel.types)": [[5, "camel.types.ChatCompletion"]], "chatcompletionassistantmessageparam (class in camel.types)": [[5, "camel.types.ChatCompletionAssistantMessageParam"]], "chatcompletionchunk (class in camel.types)": [[5, "camel.types.ChatCompletionChunk"]], "chatcompletionfunctionmessageparam (class in camel.types)": [[5, "camel.types.ChatCompletionFunctionMessageParam"]], "chatcompletionmessage (class in camel.types)": [[5, "camel.types.ChatCompletionMessage"]], "chatcompletionsystemmessageparam (class in camel.types)": [[5, "camel.types.ChatCompletionSystemMessageParam"]], "chatcompletionusermessageparam (class in camel.types)": [[5, "camel.types.ChatCompletionUserMessageParam"]], "chatgptconfig (class in camel.configs)": [[5, "camel.configs.ChatGPTConfig"]], "choice (class in camel.types)": [[5, "camel.types.Choice"]], "codetaskpromptgenerator (class in camel.generators)": [[5, "camel.generators.CodeTaskPromptGenerator"]], "completionusage (class in camel.types)": [[5, "camel.types.CompletionUsage"]], "constants (class in camel.utils)": [[5, "camel.utils.Constants"]], "default (camel.types.modelplatformtype attribute)": [[5, "camel.types.ModelPlatformType.DEFAULT"]], "default (camel.types.roletype attribute)": [[5, "camel.types.RoleType.DEFAULT"]], "default (camel.types.tasktype attribute)": [[5, "camel.types.TaskType.DEFAULT"]], "dot (camel.types.vectordistance attribute)": [[5, "camel.types.VectorDistance.DOT"]], "echo (camel.types.voicetype attribute)": [[5, "camel.types.VoiceType.ECHO"]], "embodiment (camel.types.roletype attribute)": [[5, "camel.types.RoleType.EMBODIMENT"]], "euclidean (camel.types.vectordistance attribute)": [[5, "camel.types.VectorDistance.EUCLIDEAN"]], "evaluation (camel.types.tasktype attribute)": [[5, "camel.types.TaskType.EVALUATION"]], "embeddingmodeltype (class in camel.types)": [[5, "camel.types.EmbeddingModelType"]], "fable (camel.types.voicetype attribute)": [[5, "camel.types.VoiceType.FABLE"]], "function (camel.types.openaibackendrole attribute)": [[5, "camel.types.OpenAIBackendRole.FUNCTION"]], "func_name_for_structure_output (camel.utils.constants attribute)": [[5, "camel.utils.Constants.FUNC_NAME_FOR_STRUCTURE_OUTPUT"]], "functioncallingmessage (class in camel.messages)": [[5, "camel.messages.FunctionCallingMessage"], [9, "camel.messages.FunctionCallingMessage"]], "gemini (camel.types.modelplatformtype attribute)": [[5, "camel.types.ModelPlatformType.GEMINI"]], "gemini_1_5_flash (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GEMINI_1_5_FLASH"]], "gemini_1_5_pro (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GEMINI_1_5_PRO"]], "generate_text_embedding_data (camel.types.tasktype attribute)": [[5, "camel.types.TaskType.GENERATE_TEXT_EMBEDDING_DATA"]], "gif (camel.types.openaiimagetype attribute)": [[5, "camel.types.OpenAIImageType.GIF"]], "glm_3_turbo (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GLM_3_TURBO"]], "glm_4 (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GLM_4"]], "glm_4v (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GLM_4V"]], "glm_4_open_source (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GLM_4_OPEN_SOURCE"]], "gpt_3_5_turbo (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GPT_3_5_TURBO"]], "gpt_4 (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GPT_4"]], "gpt_4o (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GPT_4O"]], "gpt_4o_mini (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GPT_4O_MINI"]], "gpt_4_turbo (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GPT_4_TURBO"]], "groq (camel.types.modelplatformtype attribute)": [[5, "camel.types.ModelPlatformType.GROQ"]], "groq_gemma_2_9b_it (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GROQ_GEMMA_2_9B_IT"]], "groq_gemma_7b_it (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GROQ_GEMMA_7B_IT"]], "groq_llama_3_1_405b (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GROQ_LLAMA_3_1_405B"]], "groq_llama_3_1_70b (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GROQ_LLAMA_3_1_70B"]], "groq_llama_3_1_8b (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GROQ_LLAMA_3_1_8B"]], "groq_llama_3_70b (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GROQ_LLAMA_3_70B"]], "groq_llama_3_8b (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GROQ_LLAMA_3_8B"]], "groq_mixtral_8_7b (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.GROQ_MIXTRAL_8_7B"]], "geminiconfig (class in camel.configs)": [[5, "camel.configs.GeminiConfig"]], "geminitokencounter (class in camel.utils)": [[5, "camel.utils.GeminiTokenCounter"]], "groqconfig (class in camel.configs)": [[5, "camel.configs.GroqConfig"]], "high (camel.types.openaivisiondetailtype attribute)": [[5, "camel.types.OpenAIVisionDetailType.HIGH"]], "human (class in camel.human)": [[5, "camel.human.Human"]], "image_craft (camel.types.tasktype attribute)": [[5, "camel.types.TaskType.IMAGE_CRAFT"]], "jpeg (camel.types.openaiimagetype attribute)": [[5, "camel.types.OpenAIImageType.JPEG"]], "jpg (camel.types.openaiimagetype attribute)": [[5, "camel.types.OpenAIImageType.JPG"]], "klarna (camel.types.openapiname attribute)": [[5, "camel.types.OpenAPIName.KLARNA"]], "litellm (camel.types.modelplatformtype attribute)": [[5, "camel.types.ModelPlatformType.LITELLM"]], "llama_2 (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.LLAMA_2"]], "llama_3 (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.LLAMA_3"]], "low (camel.types.openaivisiondetailtype attribute)": [[5, "camel.types.OpenAIVisionDetailType.LOW"]], "litellmconfig (class in camel.configs)": [[5, "camel.configs.LiteLLMConfig"]], "litellmtokencounter (class in camel.utils)": [[5, "camel.utils.LiteLLMTokenCounter"]], "milvus (camel.types.storagetype attribute)": [[5, "camel.types.StorageType.MILVUS"]], "misalignment (camel.types.tasktype attribute)": [[5, "camel.types.TaskType.MISALIGNMENT"]], "mistral (camel.types.modelplatformtype attribute)": [[5, "camel.types.ModelPlatformType.MISTRAL"]], "mistral_7b (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.MISTRAL_7B"]], "mistral_codestral (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.MISTRAL_CODESTRAL"]], "mistral_codestral_mamba (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.MISTRAL_CODESTRAL_MAMBA"]], "mistral_embed (camel.types.embeddingmodeltype attribute)": [[5, "camel.types.EmbeddingModelType.MISTRAL_EMBED"]], "mistral_large (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.MISTRAL_LARGE"]], "mistral_mixtral_8x22b (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.MISTRAL_MIXTRAL_8x22B"]], "mistral_mixtral_8x7b (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.MISTRAL_MIXTRAL_8x7B"]], "mistral_nemo (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.MISTRAL_NEMO"]], "multi_condition_image_craft (camel.types.tasktype attribute)": [[5, "camel.types.TaskType.MULTI_CONDITION_IMAGE_CRAFT"]], "mistralconfig (class in camel.configs)": [[5, "camel.configs.MistralConfig"]], "mistraltokencounter (class in camel.utils)": [[5, "camel.utils.MistralTokenCounter"]], "modelplatformtype (class in camel.types)": [[5, "camel.types.ModelPlatformType"]], "modeltype (class in camel.types)": [[5, "camel.types.ModelType"]], "nasa_apod (camel.types.openapiname attribute)": [[5, "camel.types.OpenAPIName.NASA_APOD"]], "nemotron_4_reward (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.NEMOTRON_4_REWARD"]], "nova (camel.types.voicetype attribute)": [[5, "camel.types.VoiceType.NOVA"]], "object_recognition (camel.types.tasktype attribute)": [[5, "camel.types.TaskType.OBJECT_RECOGNITION"]], "ollama (camel.types.modelplatformtype attribute)": [[5, "camel.types.ModelPlatformType.OLLAMA"]], "onyx (camel.types.voicetype attribute)": [[5, "camel.types.VoiceType.ONYX"]], "openai (camel.types.modelplatformtype attribute)": [[5, "camel.types.ModelPlatformType.OPENAI"]], "openai_compatibility_model (camel.types.modelplatformtype attribute)": [[5, "camel.types.ModelPlatformType.OPENAI_COMPATIBILITY_MODEL"]], "open_source (camel.types.modelplatformtype attribute)": [[5, "camel.types.ModelPlatformType.OPEN_SOURCE"]], "outschool (camel.types.openapiname attribute)": [[5, "camel.types.OpenAPIName.OUTSCHOOL"]], "ollamaconfig (class in camel.configs)": [[5, "camel.configs.OllamaConfig"]], "openaiassistantmessage (in module camel.messages)": [[5, "camel.messages.OpenAIAssistantMessage"], [9, "camel.messages.OpenAIAssistantMessage"]], "openaibackendrole (class in camel.types)": [[5, "camel.types.OpenAIBackendRole"]], "openaiimagetype (class in camel.types)": [[5, "camel.types.OpenAIImageType"]], "openaisystemmessage (in module camel.messages)": [[5, "camel.messages.OpenAISystemMessage"], [9, "camel.messages.OpenAISystemMessage"]], "openaitokencounter (class in camel.utils)": [[5, "camel.utils.OpenAITokenCounter"]], "openaiusermessage (in module camel.messages)": [[5, "camel.messages.OpenAIUserMessage"], [9, "camel.messages.OpenAIUserMessage"]], "openaivisiondetailtype (class in camel.types)": [[5, "camel.types.OpenAIVisionDetailType"]], "openapiname (class in camel.types)": [[5, "camel.types.OpenAPIName"]], "opensourceconfig (class in camel.configs)": [[5, "camel.configs.OpenSourceConfig"]], "opensourcetokencounter (class in camel.utils)": [[5, "camel.utils.OpenSourceTokenCounter"]], "png (camel.types.openaiimagetype attribute)": [[5, "camel.types.OpenAIImageType.PNG"]], "qdrant (camel.types.storagetype attribute)": [[5, "camel.types.StorageType.QDRANT"]], "qwen_2 (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.QWEN_2"]], "role_description (camel.types.tasktype attribute)": [[5, "camel.types.TaskType.ROLE_DESCRIPTION"]], "rolenamegenerator (class in camel.generators)": [[5, "camel.generators.RoleNameGenerator"]], "roletype (class in camel.types)": [[5, "camel.types.RoleType"]], "samba (camel.types.modelplatformtype attribute)": [[5, "camel.types.ModelPlatformType.SAMBA"]], "samba_llama_3_1_405b (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.SAMBA_LLAMA_3_1_405B"]], "samba_llama_3_1_70b (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.SAMBA_LLAMA_3_1_70B"]], "samba_llama_3_1_8b (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.SAMBA_LLAMA_3_1_8B"]], "shimmer (camel.types.voicetype attribute)": [[5, "camel.types.VoiceType.SHIMMER"]], "solution_extraction (camel.types.tasktype attribute)": [[5, "camel.types.TaskType.SOLUTION_EXTRACTION"]], "speak (camel.types.openapiname attribute)": [[5, "camel.types.OpenAPIName.SPEAK"]], "stub (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.STUB"]], "system (camel.types.openaibackendrole attribute)": [[5, "camel.types.OpenAIBackendRole.SYSTEM"]], "sambaconfig (class in camel.configs)": [[5, "camel.configs.SambaConfig"]], "singletxtgenerator (class in camel.generators)": [[5, "camel.generators.SingleTxtGenerator"]], "storagetype (class in camel.types)": [[5, "camel.types.StorageType"]], "systemmessagegenerator (class in camel.generators)": [[5, "camel.generators.SystemMessageGenerator"]], "text_embedding_3_large (camel.types.embeddingmodeltype attribute)": [[5, "camel.types.EmbeddingModelType.TEXT_EMBEDDING_3_LARGE"]], "text_embedding_3_small (camel.types.embeddingmodeltype attribute)": [[5, "camel.types.EmbeddingModelType.TEXT_EMBEDDING_3_SMALL"]], "text_embedding_ada_2 (camel.types.embeddingmodeltype attribute)": [[5, "camel.types.EmbeddingModelType.TEXT_EMBEDDING_ADA_2"]], "together (camel.types.modelplatformtype attribute)": [[5, "camel.types.ModelPlatformType.TOGETHER"]], "tool (camel.types.openaibackendrole attribute)": [[5, "camel.types.OpenAIBackendRole.TOOL"]], "translation (camel.types.tasktype attribute)": [[5, "camel.types.TaskType.TRANSLATION"]], "tts_1 (camel.types.audiomodeltype attribute)": [[5, "camel.types.AudioModelType.TTS_1"]], "tts_1_hd (camel.types.audiomodeltype attribute)": [[5, "camel.types.AudioModelType.TTS_1_HD"]], "tasktype (class in camel.types)": [[5, "camel.types.TaskType"]], "terminationmode (class in camel.types)": [[5, "camel.types.TerminationMode"]], "togetheraiconfig (class in camel.configs)": [[5, "camel.configs.TogetherAIConfig"]], "user (camel.types.openaibackendrole attribute)": [[5, "camel.types.OpenAIBackendRole.USER"]], "user (camel.types.roletype attribute)": [[5, "camel.types.RoleType.USER"]], "vicuna (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.VICUNA"]], "vicuna_16k (camel.types.modeltype attribute)": [[5, "camel.types.ModelType.VICUNA_16K"]], "video_default_image_size (camel.utils.constants attribute)": [[5, "camel.utils.Constants.VIDEO_DEFAULT_IMAGE_SIZE"]], "video_default_plug_pyav (camel.utils.constants attribute)": [[5, "camel.utils.Constants.VIDEO_DEFAULT_PLUG_PYAV"]], "video_description (camel.types.tasktype attribute)": [[5, "camel.types.TaskType.VIDEO_DESCRIPTION"]], "video_image_extraction_interval (camel.utils.constants attribute)": [[5, "camel.utils.Constants.VIDEO_IMAGE_EXTRACTION_INTERVAL"]], "vllm (camel.types.modelplatformtype attribute)": [[5, "camel.types.ModelPlatformType.VLLM"]], "vllmconfig (class in camel.configs)": [[5, "camel.configs.VLLMConfig"]], "vectordistance (class in camel.types)": [[5, "camel.types.VectorDistance"]], "voicetype (class in camel.types)": [[5, "camel.types.VoiceType"]], "webp (camel.types.openaiimagetype attribute)": [[5, "camel.types.OpenAIImageType.WEBP"]], "web_scraper (camel.types.openapiname attribute)": [[5, "camel.types.OpenAPIName.WEB_SCRAPER"]], "zhipu (camel.types.modelplatformtype attribute)": [[5, "camel.types.ModelPlatformType.ZHIPU"]], "zhipuaiconfig (class in camel.configs)": [[5, "camel.configs.ZhipuAIConfig"]], "agentops_decorator() (in module camel.utils)": [[5, "camel.utils.agentops_decorator"]], "api_keys_required() (in module camel.utils)": [[5, "camel.utils.api_keys_required"]], "api_params (camel.configs.opensourceconfig attribute)": [[5, "camel.configs.OpenSourceConfig.api_params"]], "api_version (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.api_version"]], "args (camel.messages.functioncallingmessage attribute)": [[5, "camel.messages.FunctionCallingMessage.args"], [9, "camel.messages.FunctionCallingMessage.args"]], "as_dict() (camel.configs.baseconfig method)": [[5, "camel.configs.BaseConfig.as_dict"]], "as_dict() (camel.configs.sambaconfig method)": [[5, "camel.configs.SambaConfig.as_dict"]], "as_dict() (camel.configs.togetheraiconfig method)": [[5, "camel.configs.TogetherAIConfig.as_dict"]], "calculate_cost_from_response() (camel.utils.litellmtokencounter method)": [[5, "camel.utils.LiteLLMTokenCounter.calculate_cost_from_response"]], "camel": [[5, "module-camel"]], "camel.configs": [[5, "module-camel.configs"]], "camel.generators": [[5, "module-camel.generators"]], "camel.human": [[5, "module-camel.human"]], "camel.messages": [[5, "module-camel.messages"], [9, "module-camel.messages"]], "camel.types": [[5, "module-camel.types"]], "camel.utils": [[5, "module-camel.utils"]], "candidate_count (camel.configs.geminiconfig attribute)": [[5, "camel.configs.GeminiConfig.candidate_count"]], "check_server_running() (in module camel.utils)": [[5, "camel.utils.check_server_running"]], "choices (camel.types.chatcompletion attribute)": [[5, "camel.types.ChatCompletion.choices"]], "choices (camel.types.chatcompletionchunk attribute)": [[5, "camel.types.ChatCompletionChunk.choices"]], "completion_cost (camel.utils.litellmtokencounter property)": [[5, "camel.utils.LiteLLMTokenCounter.completion_cost"]], "completion_tokens (camel.types.completionusage attribute)": [[5, "camel.types.CompletionUsage.completion_tokens"]], "content (camel.messages.basemessage attribute)": [[5, "camel.messages.BaseMessage.content"], [9, "camel.messages.BaseMessage.content"]], "content (camel.types.chatcompletionassistantmessageparam attribute)": [[5, "camel.types.ChatCompletionAssistantMessageParam.content"]], "content (camel.types.chatcompletionfunctionmessageparam attribute)": [[5, "camel.types.ChatCompletionFunctionMessageParam.content"]], "content (camel.types.chatcompletionmessage attribute)": [[5, "camel.types.ChatCompletionMessage.content"]], "content (camel.types.chatcompletionsystemmessageparam attribute)": [[5, "camel.types.ChatCompletionSystemMessageParam.content"]], "content (camel.types.chatcompletionusermessageparam attribute)": [[5, "camel.types.ChatCompletionUserMessageParam.content"]], "count_tokens_from_messages() (camel.utils.anthropictokencounter method)": [[5, "camel.utils.AnthropicTokenCounter.count_tokens_from_messages"]], "count_tokens_from_messages() (camel.utils.basetokencounter method)": [[5, "camel.utils.BaseTokenCounter.count_tokens_from_messages"]], "count_tokens_from_messages() (camel.utils.geminitokencounter method)": [[5, "camel.utils.GeminiTokenCounter.count_tokens_from_messages"]], "count_tokens_from_messages() (camel.utils.litellmtokencounter method)": [[5, "camel.utils.LiteLLMTokenCounter.count_tokens_from_messages"]], "count_tokens_from_messages() (camel.utils.mistraltokencounter method)": [[5, "camel.utils.MistralTokenCounter.count_tokens_from_messages"]], "count_tokens_from_messages() (camel.utils.openaitokencounter method)": [[5, "camel.utils.OpenAITokenCounter.count_tokens_from_messages"]], "count_tokens_from_messages() (camel.utils.opensourcetokencounter method)": [[5, "camel.utils.OpenSourceTokenCounter.count_tokens_from_messages"]], "create_chunks() (in module camel.utils)": [[5, "camel.utils.create_chunks"]], "create_new_instance() (camel.messages.basemessage method)": [[5, "camel.messages.BaseMessage.create_new_instance"], [9, "camel.messages.BaseMessage.create_new_instance"]], "created (camel.types.chatcompletion attribute)": [[5, "camel.types.ChatCompletion.created"]], "created (camel.types.chatcompletionchunk attribute)": [[5, "camel.types.ChatCompletionChunk.created"]], "custom_llm_provider (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.custom_llm_provider"]], "dependencies_required() (in module camel.utils)": [[5, "camel.utils.dependencies_required"]], "deployment_id (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.deployment_id"]], "display_options() (camel.human.human method)": [[5, "camel.human.Human.display_options"]], "download_tasks() (in module camel.utils)": [[5, "camel.utils.download_tasks"]], "extra_headers (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.extra_headers"]], "extract_text_and_code_prompts() (camel.messages.basemessage method)": [[5, "camel.messages.BaseMessage.extract_text_and_code_prompts"], [9, "camel.messages.BaseMessage.extract_text_and_code_prompts"]], "fields_type_checking() (camel.configs.baseconfig class method)": [[5, "camel.configs.BaseConfig.fields_type_checking"]], "fields_type_checking() (camel.configs.geminiconfig class method)": [[5, "camel.configs.GeminiConfig.fields_type_checking"]], "fields_type_checking() (camel.configs.mistralconfig class method)": [[5, "camel.configs.MistralConfig.fields_type_checking"]], "finish_reason (camel.types.choice attribute)": [[5, "camel.types.Choice.finish_reason"]], "frequency_penalty (camel.configs.chatgptconfig attribute)": [[5, "camel.configs.ChatGPTConfig.frequency_penalty"]], "frequency_penalty (camel.configs.groqconfig attribute)": [[5, "camel.configs.GroqConfig.frequency_penalty"]], "frequency_penalty (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.frequency_penalty"]], "frequency_penalty (camel.configs.ollamaconfig attribute)": [[5, "camel.configs.OllamaConfig.frequency_penalty"]], "frequency_penalty (camel.configs.togetheraiconfig attribute)": [[5, "camel.configs.TogetherAIConfig.frequency_penalty"]], "frequency_penalty (camel.configs.vllmconfig attribute)": [[5, "camel.configs.VLLMConfig.frequency_penalty"]], "from_dict() (camel.generators.systemmessagegenerator method)": [[5, "camel.generators.SystemMessageGenerator.from_dict"]], "from_dicts() (camel.generators.systemmessagegenerator method)": [[5, "camel.generators.SystemMessageGenerator.from_dicts"]], "from_role_files() (camel.generators.aisocietytaskpromptgenerator method)": [[5, "camel.generators.AISocietyTaskPromptGenerator.from_role_files"]], "from_role_files() (camel.generators.codetaskpromptgenerator method)": [[5, "camel.generators.CodeTaskPromptGenerator.from_role_files"]], "from_role_files() (camel.generators.rolenamegenerator method)": [[5, "camel.generators.RoleNameGenerator.from_role_files"]], "from_role_files() (camel.generators.singletxtgenerator method)": [[5, "camel.generators.SingleTxtGenerator.from_role_files"]], "from_role_generator() (camel.generators.aisocietytaskpromptgenerator method)": [[5, "camel.generators.AISocietyTaskPromptGenerator.from_role_generator"]], "from_role_generator() (camel.generators.codetaskpromptgenerator method)": [[5, "camel.generators.CodeTaskPromptGenerator.from_role_generator"]], "func_name (camel.messages.functioncallingmessage attribute)": [[5, "camel.messages.FunctionCallingMessage.func_name"], [9, "camel.messages.FunctionCallingMessage.func_name"]], "func_string_to_callable() (in module camel.utils)": [[5, "camel.utils.func_string_to_callable"]], "function_call (camel.types.chatcompletionassistantmessageparam attribute)": [[5, "camel.types.ChatCompletionAssistantMessageParam.function_call"]], "function_call (camel.types.chatcompletionmessage attribute)": [[5, "camel.types.ChatCompletionMessage.function_call"]], "get_first_int() (in module camel.utils)": [[5, "camel.utils.get_first_int"]], "get_input() (camel.human.human method)": [[5, "camel.human.Human.get_input"]], "get_model_encoding() (in module camel.utils)": [[5, "camel.utils.get_model_encoding"]], "get_prompt_template_key_words() (in module camel.utils)": [[5, "camel.utils.get_prompt_template_key_words"]], "get_pydantic_major_version() (in module camel.utils)": [[5, "camel.utils.get_pydantic_major_version"]], "get_pydantic_object_schema() (in module camel.utils)": [[5, "camel.utils.get_pydantic_object_schema"]], "get_system_information() (in module camel.utils)": [[5, "camel.utils.get_system_information"]], "get_task_list() (in module camel.utils)": [[5, "camel.utils.get_task_list"]], "handle_http_error() (in module camel.utils)": [[5, "camel.utils.handle_http_error"]], "id (camel.types.chatcompletion attribute)": [[5, "camel.types.ChatCompletion.id"]], "id (camel.types.chatcompletionchunk attribute)": [[5, "camel.types.ChatCompletionChunk.id"]], "image_detail (camel.messages.basemessage attribute)": [[5, "camel.messages.BaseMessage.image_detail"], [9, "camel.messages.BaseMessage.image_detail"]], "image_list (camel.messages.basemessage attribute)": [[5, "camel.messages.BaseMessage.image_list"], [9, "camel.messages.BaseMessage.image_list"]], "index (camel.types.choice attribute)": [[5, "camel.types.Choice.index"]], "input_button (camel.human.human attribute)": [[5, "camel.human.Human.input_button"]], "is_anthropic (camel.types.modelplatformtype property)": [[5, "camel.types.ModelPlatformType.is_anthropic"]], "is_anthropic (camel.types.modeltype property)": [[5, "camel.types.ModelType.is_anthropic"]], "is_azure (camel.types.modelplatformtype property)": [[5, "camel.types.ModelPlatformType.is_azure"]], "is_azure_openai (camel.types.modeltype property)": [[5, "camel.types.ModelType.is_azure_openai"]], "is_docker_running() (in module camel.utils)": [[5, "camel.utils.is_docker_running"]], "is_gemini (camel.types.modelplatformtype property)": [[5, "camel.types.ModelPlatformType.is_gemini"]], "is_gemini (camel.types.modeltype property)": [[5, "camel.types.ModelType.is_gemini"]], "is_groq (camel.types.modelplatformtype property)": [[5, "camel.types.ModelPlatformType.is_groq"]], "is_groq (camel.types.modeltype property)": [[5, "camel.types.ModelType.is_groq"]], "is_litellm (camel.types.modelplatformtype property)": [[5, "camel.types.ModelPlatformType.is_litellm"]], "is_mistral (camel.types.embeddingmodeltype property)": [[5, "camel.types.EmbeddingModelType.is_mistral"]], "is_mistral (camel.types.modelplatformtype property)": [[5, "camel.types.ModelPlatformType.is_mistral"]], "is_mistral (camel.types.modeltype property)": [[5, "camel.types.ModelType.is_mistral"]], "is_nvidia (camel.types.modeltype property)": [[5, "camel.types.ModelType.is_nvidia"]], "is_ollama (camel.types.modelplatformtype property)": [[5, "camel.types.ModelPlatformType.is_ollama"]], "is_open_source (camel.types.modelplatformtype property)": [[5, "camel.types.ModelPlatformType.is_open_source"]], "is_open_source (camel.types.modeltype property)": [[5, "camel.types.ModelType.is_open_source"]], "is_openai (camel.types.audiomodeltype property)": [[5, "camel.types.AudioModelType.is_openai"]], "is_openai (camel.types.embeddingmodeltype property)": [[5, "camel.types.EmbeddingModelType.is_openai"]], "is_openai (camel.types.modelplatformtype property)": [[5, "camel.types.ModelPlatformType.is_openai"]], "is_openai (camel.types.modeltype property)": [[5, "camel.types.ModelType.is_openai"]], "is_openai (camel.types.voicetype property)": [[5, "camel.types.VoiceType.is_openai"]], "is_openai_compatibility_model (camel.types.modelplatformtype property)": [[5, "camel.types.ModelPlatformType.is_openai_compatibility_model"]], "is_samba (camel.types.modelplatformtype property)": [[5, "camel.types.ModelPlatformType.is_samba"]], "is_samba (camel.types.modeltype property)": [[5, "camel.types.ModelType.is_samba"]], "is_together (camel.types.modelplatformtype property)": [[5, "camel.types.ModelPlatformType.is_together"]], "is_vllm (camel.types.modelplatformtype property)": [[5, "camel.types.ModelPlatformType.is_vllm"]], "is_zhipuai (camel.types.modelplatformtype property)": [[5, "camel.types.ModelPlatformType.is_zhipuai"]], "is_zhipuai (camel.types.modeltype property)": [[5, "camel.types.ModelType.is_zhipuai"]], "json_to_function_code() (in module camel.utils)": [[5, "camel.utils.json_to_function_code"]], "kill_button (camel.human.human attribute)": [[5, "camel.human.Human.kill_button"]], "logger_color (camel.human.human attribute)": [[5, "camel.human.Human.logger_color"]], "logit_bias (camel.configs.chatgptconfig attribute)": [[5, "camel.configs.ChatGPTConfig.logit_bias"]], "logit_bias (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.logit_bias"]], "logit_bias (camel.configs.togetheraiconfig attribute)": [[5, "camel.configs.TogetherAIConfig.logit_bias"]], "logit_bias (camel.configs.vllmconfig attribute)": [[5, "camel.configs.VLLMConfig.logit_bias"]], "logprobs (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.logprobs"]], "logprobs (camel.types.choice attribute)": [[5, "camel.types.Choice.logprobs"]], "make_assistant_message() (camel.messages.basemessage class method)": [[5, "camel.messages.BaseMessage.make_assistant_message"], [9, "camel.messages.BaseMessage.make_assistant_message"]], "make_user_message() (camel.messages.basemessage class method)": [[5, "camel.messages.BaseMessage.make_user_message"], [9, "camel.messages.BaseMessage.make_user_message"]], "max_output_tokens (camel.configs.geminiconfig attribute)": [[5, "camel.configs.GeminiConfig.max_output_tokens"]], "max_retries (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.max_retries"]], "max_tokens (camel.configs.anthropicconfig attribute)": [[5, "camel.configs.AnthropicConfig.max_tokens"]], "max_tokens (camel.configs.chatgptconfig attribute)": [[5, "camel.configs.ChatGPTConfig.max_tokens"]], "max_tokens (camel.configs.groqconfig attribute)": [[5, "camel.configs.GroqConfig.max_tokens"]], "max_tokens (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.max_tokens"]], "max_tokens (camel.configs.mistralconfig attribute)": [[5, "camel.configs.MistralConfig.max_tokens"]], "max_tokens (camel.configs.ollamaconfig attribute)": [[5, "camel.configs.OllamaConfig.max_tokens"]], "max_tokens (camel.configs.sambaconfig attribute)": [[5, "camel.configs.SambaConfig.max_tokens"]], "max_tokens (camel.configs.togetheraiconfig attribute)": [[5, "camel.configs.TogetherAIConfig.max_tokens"]], "max_tokens (camel.configs.vllmconfig attribute)": [[5, "camel.configs.VLLMConfig.max_tokens"]], "max_tokens (camel.configs.zhipuaiconfig attribute)": [[5, "camel.configs.ZhipuAIConfig.max_tokens"]], "message (camel.types.choice attribute)": [[5, "camel.types.Choice.message"]], "meta_dict (camel.messages.basemessage attribute)": [[5, "camel.messages.BaseMessage.meta_dict"], [9, "camel.messages.BaseMessage.meta_dict"]], "metadata (camel.configs.anthropicconfig attribute)": [[5, "camel.configs.AnthropicConfig.metadata"]], "min_tokens (camel.configs.mistralconfig attribute)": [[5, "camel.configs.MistralConfig.min_tokens"]], "mock_response (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.mock_response"]], "model (camel.types.chatcompletion attribute)": [[5, "camel.types.ChatCompletion.model"]], "model (camel.types.chatcompletionchunk attribute)": [[5, "camel.types.ChatCompletionChunk.model"]], "model_computed_fields (camel.configs.anthropicconfig attribute)": [[5, "camel.configs.AnthropicConfig.model_computed_fields"]], "model_computed_fields (camel.configs.baseconfig attribute)": [[5, "camel.configs.BaseConfig.model_computed_fields"]], "model_computed_fields (camel.configs.chatgptconfig attribute)": [[5, "camel.configs.ChatGPTConfig.model_computed_fields"]], "model_computed_fields (camel.configs.geminiconfig attribute)": [[5, "camel.configs.GeminiConfig.model_computed_fields"]], "model_computed_fields (camel.configs.groqconfig attribute)": [[5, "camel.configs.GroqConfig.model_computed_fields"]], "model_computed_fields (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.model_computed_fields"]], "model_computed_fields (camel.configs.mistralconfig attribute)": [[5, "camel.configs.MistralConfig.model_computed_fields"]], "model_computed_fields (camel.configs.ollamaconfig attribute)": [[5, "camel.configs.OllamaConfig.model_computed_fields"]], "model_computed_fields (camel.configs.opensourceconfig attribute)": [[5, "camel.configs.OpenSourceConfig.model_computed_fields"]], "model_computed_fields (camel.configs.sambaconfig attribute)": [[5, "camel.configs.SambaConfig.model_computed_fields"]], "model_computed_fields (camel.configs.togetheraiconfig attribute)": [[5, "camel.configs.TogetherAIConfig.model_computed_fields"]], "model_computed_fields (camel.configs.vllmconfig attribute)": [[5, "camel.configs.VLLMConfig.model_computed_fields"]], "model_computed_fields (camel.configs.zhipuaiconfig attribute)": [[5, "camel.configs.ZhipuAIConfig.model_computed_fields"]], "model_computed_fields (camel.types.chatcompletion attribute)": [[5, "camel.types.ChatCompletion.model_computed_fields"]], "model_computed_fields (camel.types.chatcompletionchunk attribute)": [[5, "camel.types.ChatCompletionChunk.model_computed_fields"]], "model_computed_fields (camel.types.chatcompletionmessage attribute)": [[5, "camel.types.ChatCompletionMessage.model_computed_fields"]], "model_computed_fields (camel.types.choice attribute)": [[5, "camel.types.Choice.model_computed_fields"]], "model_computed_fields (camel.types.completionusage attribute)": [[5, "camel.types.CompletionUsage.model_computed_fields"]], "model_config (camel.configs.anthropicconfig attribute)": [[5, "camel.configs.AnthropicConfig.model_config"]], "model_config (camel.configs.baseconfig attribute)": [[5, "camel.configs.BaseConfig.model_config"]], "model_config (camel.configs.chatgptconfig attribute)": [[5, "camel.configs.ChatGPTConfig.model_config"]], "model_config (camel.configs.geminiconfig attribute)": [[5, "camel.configs.GeminiConfig.model_config"]], "model_config (camel.configs.groqconfig attribute)": [[5, "camel.configs.GroqConfig.model_config"]], "model_config (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.model_config"]], "model_config (camel.configs.mistralconfig attribute)": [[5, "camel.configs.MistralConfig.model_config"]], "model_config (camel.configs.ollamaconfig attribute)": [[5, "camel.configs.OllamaConfig.model_config"]], "model_config (camel.configs.opensourceconfig attribute)": [[5, "camel.configs.OpenSourceConfig.model_config"]], "model_config (camel.configs.sambaconfig attribute)": [[5, "camel.configs.SambaConfig.model_config"]], "model_config (camel.configs.togetheraiconfig attribute)": [[5, "camel.configs.TogetherAIConfig.model_config"]], "model_config (camel.configs.vllmconfig attribute)": [[5, "camel.configs.VLLMConfig.model_config"]], "model_config (camel.configs.zhipuaiconfig attribute)": [[5, "camel.configs.ZhipuAIConfig.model_config"]], "model_config (camel.types.chatcompletion attribute)": [[5, "camel.types.ChatCompletion.model_config"]], "model_config (camel.types.chatcompletionchunk attribute)": [[5, "camel.types.ChatCompletionChunk.model_config"]], "model_config (camel.types.chatcompletionmessage attribute)": [[5, "camel.types.ChatCompletionMessage.model_config"]], "model_config (camel.types.choice attribute)": [[5, "camel.types.Choice.model_config"]], "model_config (camel.types.completionusage attribute)": [[5, "camel.types.CompletionUsage.model_config"]], "model_fields (camel.configs.anthropicconfig attribute)": [[5, "camel.configs.AnthropicConfig.model_fields"]], "model_fields (camel.configs.baseconfig attribute)": [[5, "camel.configs.BaseConfig.model_fields"]], "model_fields (camel.configs.chatgptconfig attribute)": [[5, "camel.configs.ChatGPTConfig.model_fields"]], "model_fields (camel.configs.geminiconfig attribute)": [[5, "camel.configs.GeminiConfig.model_fields"]], "model_fields (camel.configs.groqconfig attribute)": [[5, "camel.configs.GroqConfig.model_fields"]], "model_fields (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.model_fields"]], "model_fields (camel.configs.mistralconfig attribute)": [[5, "camel.configs.MistralConfig.model_fields"]], "model_fields (camel.configs.ollamaconfig attribute)": [[5, "camel.configs.OllamaConfig.model_fields"]], "model_fields (camel.configs.opensourceconfig attribute)": [[5, "camel.configs.OpenSourceConfig.model_fields"]], "model_fields (camel.configs.sambaconfig attribute)": [[5, "camel.configs.SambaConfig.model_fields"]], "model_fields (camel.configs.togetheraiconfig attribute)": [[5, "camel.configs.TogetherAIConfig.model_fields"]], "model_fields (camel.configs.vllmconfig attribute)": [[5, "camel.configs.VLLMConfig.model_fields"]], "model_fields (camel.configs.zhipuaiconfig attribute)": [[5, "camel.configs.ZhipuAIConfig.model_fields"]], "model_fields (camel.types.chatcompletion attribute)": [[5, "camel.types.ChatCompletion.model_fields"]], "model_fields (camel.types.chatcompletionchunk attribute)": [[5, "camel.types.ChatCompletionChunk.model_fields"]], "model_fields (camel.types.chatcompletionmessage attribute)": [[5, "camel.types.ChatCompletionMessage.model_fields"]], "model_fields (camel.types.choice attribute)": [[5, "camel.types.Choice.model_fields"]], "model_fields (camel.types.completionusage attribute)": [[5, "camel.types.CompletionUsage.model_fields"]], "model_path (camel.configs.opensourceconfig attribute)": [[5, "camel.configs.OpenSourceConfig.model_path"]], "module": [[5, "module-camel"], [5, "module-camel.configs"], [5, "module-camel.generators"], [5, "module-camel.human"], [5, "module-camel.messages"], [5, "module-camel.types"], [5, "module-camel.utils"], [6, "module-camel.agents"], [6, "module-camel.agents.chat_agent"], [6, "module-camel.agents.task_agent"], [7, "module-camel.agents.tool_agents"], [7, "module-camel.agents.tool_agents.base"], [7, "module-camel.agents.tool_agents.hugging_face_tool_agent"], [9, "module-camel.messages"], [9, "module-camel.messages.base"], [10, "module-camel.prompts"], [10, "module-camel.prompts.ai_society"], [10, "module-camel.prompts.base"], [10, "module-camel.prompts.code"], [10, "module-camel.prompts.misalignment"], [10, "module-camel.prompts.prompt_templates"], [10, "module-camel.prompts.task_prompt_template"], [10, "module-camel.prompts.translation"]], "n (camel.configs.chatgptconfig attribute)": [[5, "camel.configs.ChatGPTConfig.n"]], "n (camel.configs.groqconfig attribute)": [[5, "camel.configs.GroqConfig.n"]], "n (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.n"]], "n (camel.configs.togetheraiconfig attribute)": [[5, "camel.configs.TogetherAIConfig.n"]], "n (camel.configs.vllmconfig attribute)": [[5, "camel.configs.VLLMConfig.n"]], "name (camel.human.human attribute)": [[5, "camel.human.Human.name"]], "name (camel.types.chatcompletionassistantmessageparam attribute)": [[5, "camel.types.ChatCompletionAssistantMessageParam.name"]], "name (camel.types.chatcompletionfunctionmessageparam attribute)": [[5, "camel.types.ChatCompletionFunctionMessageParam.name"]], "name (camel.types.chatcompletionsystemmessageparam attribute)": [[5, "camel.types.ChatCompletionSystemMessageParam.name"]], "name (camel.types.chatcompletionusermessageparam attribute)": [[5, "camel.types.ChatCompletionUserMessageParam.name"]], "object (camel.types.chatcompletion attribute)": [[5, "camel.types.ChatCompletion.object"]], "object (camel.types.chatcompletionchunk attribute)": [[5, "camel.types.ChatCompletionChunk.object"]], "options_dict (camel.human.human attribute)": [[5, "camel.human.Human.options_dict"]], "output_dim (camel.types.embeddingmodeltype property)": [[5, "camel.types.EmbeddingModelType.output_dim"]], "parse_input() (camel.human.human method)": [[5, "camel.human.Human.parse_input"]], "presence_penalty (camel.configs.chatgptconfig attribute)": [[5, "camel.configs.ChatGPTConfig.presence_penalty"]], "presence_penalty (camel.configs.groqconfig attribute)": [[5, "camel.configs.GroqConfig.presence_penalty"]], "presence_penalty (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.presence_penalty"]], "presence_penalty (camel.configs.ollamaconfig attribute)": [[5, "camel.configs.OllamaConfig.presence_penalty"]], "presence_penalty (camel.configs.togetheraiconfig attribute)": [[5, "camel.configs.TogetherAIConfig.presence_penalty"]], "presence_penalty (camel.configs.vllmconfig attribute)": [[5, "camel.configs.VLLMConfig.presence_penalty"]], "print_text_animated() (in module camel.utils)": [[5, "camel.utils.print_text_animated"]], "prompt_tokens (camel.types.completionusage attribute)": [[5, "camel.types.CompletionUsage.prompt_tokens"]], "random_seed (camel.configs.mistralconfig attribute)": [[5, "camel.configs.MistralConfig.random_seed"]], "reduce_step() (camel.human.human method)": [[5, "camel.human.Human.reduce_step"]], "refusal (camel.types.chatcompletionassistantmessageparam attribute)": [[5, "camel.types.ChatCompletionAssistantMessageParam.refusal"]], "refusal (camel.types.chatcompletionmessage attribute)": [[5, "camel.types.ChatCompletionMessage.refusal"]], "request_options (camel.configs.geminiconfig attribute)": [[5, "camel.configs.GeminiConfig.request_options"]], "response_format (camel.configs.chatgptconfig attribute)": [[5, "camel.configs.ChatGPTConfig.response_format"]], "response_format (camel.configs.groqconfig attribute)": [[5, "camel.configs.GroqConfig.response_format"]], "response_format (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.response_format"]], "response_format (camel.configs.mistralconfig attribute)": [[5, "camel.configs.MistralConfig.response_format"]], "response_format (camel.configs.ollamaconfig attribute)": [[5, "camel.configs.OllamaConfig.response_format"]], "response_format (camel.configs.togetheraiconfig attribute)": [[5, "camel.configs.TogetherAIConfig.response_format"]], "response_format (camel.configs.vllmconfig attribute)": [[5, "camel.configs.VLLMConfig.response_format"]], "response_mime_type (camel.configs.geminiconfig attribute)": [[5, "camel.configs.GeminiConfig.response_mime_type"]], "response_schema (camel.configs.geminiconfig attribute)": [[5, "camel.configs.GeminiConfig.response_schema"]], "result (camel.messages.functioncallingmessage attribute)": [[5, "camel.messages.FunctionCallingMessage.result"], [9, "camel.messages.FunctionCallingMessage.result"]], "role (camel.types.chatcompletionassistantmessageparam attribute)": [[5, "camel.types.ChatCompletionAssistantMessageParam.role"]], "role (camel.types.chatcompletionfunctionmessageparam attribute)": [[5, "camel.types.ChatCompletionFunctionMessageParam.role"]], "role (camel.types.chatcompletionmessage attribute)": [[5, "camel.types.ChatCompletionMessage.role"]], "role (camel.types.chatcompletionsystemmessageparam attribute)": [[5, "camel.types.ChatCompletionSystemMessageParam.role"]], "role (camel.types.chatcompletionusermessageparam attribute)": [[5, "camel.types.ChatCompletionUserMessageParam.role"]], "role_name (camel.messages.basemessage attribute)": [[5, "camel.messages.BaseMessage.role_name"], [9, "camel.messages.BaseMessage.role_name"]], "role_type (camel.messages.basemessage attribute)": [[5, "camel.messages.BaseMessage.role_type"], [9, "camel.messages.BaseMessage.role_type"]], "safe_prompt (camel.configs.mistralconfig attribute)": [[5, "camel.configs.MistralConfig.safe_prompt"]], "safety_settings (camel.configs.geminiconfig attribute)": [[5, "camel.configs.GeminiConfig.safety_settings"]], "seed (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.seed"]], "server_url (camel.configs.opensourceconfig attribute)": [[5, "camel.configs.OpenSourceConfig.server_url"]], "service_tier (camel.types.chatcompletion attribute)": [[5, "camel.types.ChatCompletion.service_tier"]], "service_tier (camel.types.chatcompletionchunk attribute)": [[5, "camel.types.ChatCompletionChunk.service_tier"]], "stop (camel.configs.chatgptconfig attribute)": [[5, "camel.configs.ChatGPTConfig.stop"]], "stop (camel.configs.groqconfig attribute)": [[5, "camel.configs.GroqConfig.stop"]], "stop (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.stop"]], "stop (camel.configs.mistralconfig attribute)": [[5, "camel.configs.MistralConfig.stop"]], "stop (camel.configs.ollamaconfig attribute)": [[5, "camel.configs.OllamaConfig.stop"]], "stop (camel.configs.sambaconfig attribute)": [[5, "camel.configs.SambaConfig.stop"]], "stop (camel.configs.togetheraiconfig attribute)": [[5, "camel.configs.TogetherAIConfig.stop"]], "stop (camel.configs.vllmconfig attribute)": [[5, "camel.configs.VLLMConfig.stop"]], "stop (camel.configs.zhipuaiconfig attribute)": [[5, "camel.configs.ZhipuAIConfig.stop"]], "stop_sequences (camel.configs.anthropicconfig attribute)": [[5, "camel.configs.AnthropicConfig.stop_sequences"]], "stop_sequences (camel.configs.geminiconfig attribute)": [[5, "camel.configs.GeminiConfig.stop_sequences"]], "stream (camel.configs.anthropicconfig attribute)": [[5, "camel.configs.AnthropicConfig.stream"]], "stream (camel.configs.chatgptconfig attribute)": [[5, "camel.configs.ChatGPTConfig.stream"]], "stream (camel.configs.groqconfig attribute)": [[5, "camel.configs.GroqConfig.stream"]], "stream (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.stream"]], "stream (camel.configs.ollamaconfig attribute)": [[5, "camel.configs.OllamaConfig.stream"]], "stream (camel.configs.sambaconfig attribute)": [[5, "camel.configs.SambaConfig.stream"]], "stream (camel.configs.togetheraiconfig attribute)": [[5, "camel.configs.TogetherAIConfig.stream"]], "stream (camel.configs.vllmconfig attribute)": [[5, "camel.configs.VLLMConfig.stream"]], "stream (camel.configs.zhipuaiconfig attribute)": [[5, "camel.configs.ZhipuAIConfig.stream"]], "stream_options (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.stream_options"]], "stream_options (camel.configs.sambaconfig attribute)": [[5, "camel.configs.SambaConfig.stream_options"]], "system_fingerprint (camel.types.chatcompletion attribute)": [[5, "camel.types.ChatCompletion.system_fingerprint"]], "system_fingerprint (camel.types.chatcompletionchunk attribute)": [[5, "camel.types.ChatCompletionChunk.system_fingerprint"]], "temperature (camel.configs.anthropicconfig attribute)": [[5, "camel.configs.AnthropicConfig.temperature"]], "temperature (camel.configs.chatgptconfig attribute)": [[5, "camel.configs.ChatGPTConfig.temperature"]], "temperature (camel.configs.geminiconfig attribute)": [[5, "camel.configs.GeminiConfig.temperature"]], "temperature (camel.configs.groqconfig attribute)": [[5, "camel.configs.GroqConfig.temperature"]], "temperature (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.temperature"]], "temperature (camel.configs.mistralconfig attribute)": [[5, "camel.configs.MistralConfig.temperature"]], "temperature (camel.configs.ollamaconfig attribute)": [[5, "camel.configs.OllamaConfig.temperature"]], "temperature (camel.configs.togetheraiconfig attribute)": [[5, "camel.configs.TogetherAIConfig.temperature"]], "temperature (camel.configs.vllmconfig attribute)": [[5, "camel.configs.VLLMConfig.temperature"]], "temperature (camel.configs.zhipuaiconfig attribute)": [[5, "camel.configs.ZhipuAIConfig.temperature"]], "text_extract_from_web() (in module camel.utils)": [[5, "camel.utils.text_extract_from_web"]], "timeout (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.timeout"]], "to_dict() (camel.messages.basemessage method)": [[5, "camel.messages.BaseMessage.to_dict"], [9, "camel.messages.BaseMessage.to_dict"]], "to_openai_assistant_message() (camel.messages.basemessage method)": [[5, "camel.messages.BaseMessage.to_openai_assistant_message"], [9, "camel.messages.BaseMessage.to_openai_assistant_message"]], "to_openai_assistant_message() (camel.messages.functioncallingmessage method)": [[5, "camel.messages.FunctionCallingMessage.to_openai_assistant_message"], [9, "camel.messages.FunctionCallingMessage.to_openai_assistant_message"]], "to_openai_function_message() (camel.messages.functioncallingmessage method)": [[5, "camel.messages.FunctionCallingMessage.to_openai_function_message"], [9, "camel.messages.FunctionCallingMessage.to_openai_function_message"]], "to_openai_message() (camel.messages.basemessage method)": [[5, "camel.messages.BaseMessage.to_openai_message"], [9, "camel.messages.BaseMessage.to_openai_message"]], "to_openai_message() (camel.messages.functioncallingmessage method)": [[5, "camel.messages.FunctionCallingMessage.to_openai_message"], [9, "camel.messages.FunctionCallingMessage.to_openai_message"]], "to_openai_system_message() (camel.messages.basemessage method)": [[5, "camel.messages.BaseMessage.to_openai_system_message"], [9, "camel.messages.BaseMessage.to_openai_system_message"]], "to_openai_user_message() (camel.messages.basemessage method)": [[5, "camel.messages.BaseMessage.to_openai_user_message"], [9, "camel.messages.BaseMessage.to_openai_user_message"]], "to_pascal() (in module camel.utils)": [[5, "camel.utils.to_pascal"]], "token_counter (camel.utils.litellmtokencounter property)": [[5, "camel.utils.LiteLLMTokenCounter.token_counter"]], "token_limit (camel.types.modeltype property)": [[5, "camel.types.ModelType.token_limit"]], "tool_calls (camel.types.chatcompletionassistantmessageparam attribute)": [[5, "camel.types.ChatCompletionAssistantMessageParam.tool_calls"]], "tool_calls (camel.types.chatcompletionmessage attribute)": [[5, "camel.types.ChatCompletionMessage.tool_calls"]], "tool_choice (camel.configs.chatgptconfig attribute)": [[5, "camel.configs.ChatGPTConfig.tool_choice"]], "tool_choice (camel.configs.groqconfig attribute)": [[5, "camel.configs.GroqConfig.tool_choice"]], "tool_choice (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.tool_choice"]], "tool_choice (camel.configs.mistralconfig attribute)": [[5, "camel.configs.MistralConfig.tool_choice"]], "tool_choice (camel.configs.zhipuaiconfig attribute)": [[5, "camel.configs.ZhipuAIConfig.tool_choice"]], "tool_config (camel.configs.geminiconfig attribute)": [[5, "camel.configs.GeminiConfig.tool_config"]], "tools (camel.configs.baseconfig attribute)": [[5, "camel.configs.BaseConfig.tools"]], "top_k (camel.configs.anthropicconfig attribute)": [[5, "camel.configs.AnthropicConfig.top_k"]], "top_k (camel.configs.geminiconfig attribute)": [[5, "camel.configs.GeminiConfig.top_k"]], "top_logprobs (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.top_logprobs"]], "top_p (camel.configs.anthropicconfig attribute)": [[5, "camel.configs.AnthropicConfig.top_p"]], "top_p (camel.configs.chatgptconfig attribute)": [[5, "camel.configs.ChatGPTConfig.top_p"]], "top_p (camel.configs.geminiconfig attribute)": [[5, "camel.configs.GeminiConfig.top_p"]], "top_p (camel.configs.groqconfig attribute)": [[5, "camel.configs.GroqConfig.top_p"]], "top_p (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.top_p"]], "top_p (camel.configs.mistralconfig attribute)": [[5, "camel.configs.MistralConfig.top_p"]], "top_p (camel.configs.ollamaconfig attribute)": [[5, "camel.configs.OllamaConfig.top_p"]], "top_p (camel.configs.togetheraiconfig attribute)": [[5, "camel.configs.TogetherAIConfig.top_p"]], "top_p (camel.configs.vllmconfig attribute)": [[5, "camel.configs.VLLMConfig.top_p"]], "top_p (camel.configs.zhipuaiconfig attribute)": [[5, "camel.configs.ZhipuAIConfig.top_p"]], "total_tokens (camel.types.completionusage attribute)": [[5, "camel.types.CompletionUsage.total_tokens"]], "track_agent() (in module camel.utils)": [[5, "camel.utils.track_agent"]], "usage (camel.types.chatcompletion attribute)": [[5, "camel.types.ChatCompletion.usage"]], "usage (camel.types.chatcompletionchunk attribute)": [[5, "camel.types.ChatCompletionChunk.usage"]], "user (camel.configs.chatgptconfig attribute)": [[5, "camel.configs.ChatGPTConfig.user"]], "user (camel.configs.groqconfig attribute)": [[5, "camel.configs.GroqConfig.user"]], "user (camel.configs.litellmconfig attribute)": [[5, "camel.configs.LiteLLMConfig.user"]], "user (camel.configs.togetheraiconfig attribute)": [[5, "camel.configs.TogetherAIConfig.user"]], "user (camel.configs.vllmconfig attribute)": [[5, "camel.configs.VLLMConfig.user"]], "validate_meta_dict_keys() (camel.generators.systemmessagegenerator method)": [[5, "camel.generators.SystemMessageGenerator.validate_meta_dict_keys"]], "validate_model_name() (camel.types.modeltype method)": [[5, "camel.types.ModelType.validate_model_name"]], "value_for_tiktoken (camel.types.modeltype property)": [[5, "camel.types.ModelType.value_for_tiktoken"]], "video_bytes (camel.messages.basemessage attribute)": [[5, "camel.messages.BaseMessage.video_bytes"], [9, "camel.messages.BaseMessage.video_bytes"]], "video_detail (camel.messages.basemessage attribute)": [[5, "camel.messages.BaseMessage.video_detail"], [9, "camel.messages.BaseMessage.video_detail"]], "baseagent (class in camel.agents)": [[6, "camel.agents.BaseAgent"]], "basetoolagent (class in camel.agents)": [[6, "camel.agents.BaseToolAgent"]], "chatagent (class in camel.agents)": [[6, "camel.agents.ChatAgent"]], "chatagent (class in camel.agents.chat_agent)": [[6, "camel.agents.chat_agent.ChatAgent"]], "criticagent (class in camel.agents)": [[6, "camel.agents.CriticAgent"]], "default_word_limit (camel.agents.taskspecifyagent attribute)": [[6, "camel.agents.TaskSpecifyAgent.DEFAULT_WORD_LIMIT"], [6, "id7"]], "default_word_limit (camel.agents.task_agent.taskspecifyagent attribute)": [[6, "camel.agents.task_agent.TaskSpecifyAgent.DEFAULT_WORD_LIMIT"], [6, "id4"]], "embodiedagent (class in camel.agents)": [[6, "camel.agents.EmbodiedAgent"]], "functioncallingrecord (class in camel.agents.chat_agent)": [[6, "camel.agents.chat_agent.FunctionCallingRecord"]], "huggingfacetoolagent (class in camel.agents)": [[6, "camel.agents.HuggingFaceToolAgent"]], "knowledgegraphagent (class in camel.agents)": [[6, "camel.agents.KnowledgeGraphAgent"]], "roleassignmentagent (class in camel.agents)": [[6, "camel.agents.RoleAssignmentAgent"]], "searchagent (class in camel.agents)": [[6, "camel.agents.SearchAgent"]], "taskcreationagent (class in camel.agents)": [[6, "camel.agents.TaskCreationAgent"]], "taskcreationagent (class in camel.agents.task_agent)": [[6, "camel.agents.task_agent.TaskCreationAgent"]], "taskplanneragent (class in camel.agents)": [[6, "camel.agents.TaskPlannerAgent"]], "taskplanneragent (class in camel.agents.task_agent)": [[6, "camel.agents.task_agent.TaskPlannerAgent"]], "taskprioritizationagent (class in camel.agents)": [[6, "camel.agents.TaskPrioritizationAgent"]], "taskprioritizationagent (class in camel.agents.task_agent)": [[6, "camel.agents.task_agent.TaskPrioritizationAgent"]], "taskspecifyagent (class in camel.agents)": [[6, "camel.agents.TaskSpecifyAgent"]], "taskspecifyagent (class in camel.agents.task_agent)": [[6, "camel.agents.task_agent.TaskSpecifyAgent"]], "args (camel.agents.chat_agent.functioncallingrecord attribute)": [[6, "camel.agents.chat_agent.FunctionCallingRecord.args"], [6, "id0"]], "as_dict() (camel.agents.chat_agent.functioncallingrecord method)": [[6, "camel.agents.chat_agent.FunctionCallingRecord.as_dict"]], "camel.agents": [[6, "module-camel.agents"]], "camel.agents.chat_agent": [[6, "module-camel.agents.chat_agent"]], "camel.agents.task_agent": [[6, "module-camel.agents.task_agent"]], "chat() (camel.agents.huggingfacetoolagent method)": [[6, "camel.agents.HuggingFaceToolAgent.chat"]], "continue_search() (camel.agents.searchagent method)": [[6, "camel.agents.SearchAgent.continue_search"]], "flatten_options() (camel.agents.criticagent method)": [[6, "camel.agents.CriticAgent.flatten_options"]], "func_dict (camel.agents.taskspecifyagent attribute)": [[6, "camel.agents.TaskSpecifyAgent.func_dict"]], "func_name (camel.agents.chat_agent.functioncallingrecord attribute)": [[6, "camel.agents.chat_agent.FunctionCallingRecord.func_name"], [6, "id1"]], "get_info() (camel.agents.chatagent method)": [[6, "camel.agents.ChatAgent.get_info"]], "get_info() (camel.agents.chat_agent.chatagent method)": [[6, "camel.agents.chat_agent.ChatAgent.get_info"]], "get_option() (camel.agents.criticagent method)": [[6, "camel.agents.CriticAgent.get_option"]], "get_tool_agent_names() (camel.agents.embodiedagent method)": [[6, "camel.agents.EmbodiedAgent.get_tool_agent_names"]], "get_usage_dict() (camel.agents.chatagent method)": [[6, "camel.agents.ChatAgent.get_usage_dict"]], "get_usage_dict() (camel.agents.chat_agent.chatagent method)": [[6, "camel.agents.chat_agent.ChatAgent.get_usage_dict"]], "handle_batch_response() (camel.agents.chatagent method)": [[6, "camel.agents.ChatAgent.handle_batch_response"]], "handle_batch_response() (camel.agents.chat_agent.chatagent method)": [[6, "camel.agents.chat_agent.ChatAgent.handle_batch_response"]], "handle_stream_response() (camel.agents.chatagent method)": [[6, "camel.agents.ChatAgent.handle_stream_response"]], "handle_stream_response() (camel.agents.chat_agent.chatagent method)": [[6, "camel.agents.chat_agent.ChatAgent.handle_stream_response"]], "init_messages() (camel.agents.chatagent method)": [[6, "camel.agents.ChatAgent.init_messages"]], "init_messages() (camel.agents.chat_agent.chatagent method)": [[6, "camel.agents.chat_agent.ChatAgent.init_messages"]], "is_tools_added() (camel.agents.chatagent method)": [[6, "camel.agents.ChatAgent.is_tools_added"]], "is_tools_added() (camel.agents.chat_agent.chatagent method)": [[6, "camel.agents.chat_agent.ChatAgent.is_tools_added"]], "memory (camel.agents.taskspecifyagent attribute)": [[6, "camel.agents.TaskSpecifyAgent.memory"]], "model_backend (camel.agents.taskspecifyagent attribute)": [[6, "camel.agents.TaskSpecifyAgent.model_backend"]], "model_computed_fields (camel.agents.chat_agent.functioncallingrecord attribute)": [[6, "camel.agents.chat_agent.FunctionCallingRecord.model_computed_fields"]], "model_config (camel.agents.chat_agent.functioncallingrecord attribute)": [[6, "camel.agents.chat_agent.FunctionCallingRecord.model_config"]], "model_fields (camel.agents.chat_agent.functioncallingrecord attribute)": [[6, "camel.agents.chat_agent.FunctionCallingRecord.model_fields"]], "model_type (camel.agents.taskspecifyagent attribute)": [[6, "camel.agents.TaskSpecifyAgent.model_type"]], "orig_sys_message (camel.agents.taskspecifyagent attribute)": [[6, "camel.agents.TaskSpecifyAgent.orig_sys_message"]], "output_language (camel.agents.taskspecifyagent attribute)": [[6, "camel.agents.TaskSpecifyAgent.output_language"]], "parse_critic() (camel.agents.criticagent method)": [[6, "camel.agents.CriticAgent.parse_critic"]], "record_message() (camel.agents.chatagent method)": [[6, "camel.agents.ChatAgent.record_message"]], "record_message() (camel.agents.chat_agent.chatagent method)": [[6, "camel.agents.chat_agent.ChatAgent.record_message"]], "reduce_step() (camel.agents.criticagent method)": [[6, "camel.agents.CriticAgent.reduce_step"]], "reset() (camel.agents.baseagent method)": [[6, "camel.agents.BaseAgent.reset"]], "reset() (camel.agents.basetoolagent method)": [[6, "camel.agents.BaseToolAgent.reset"]], "reset() (camel.agents.chatagent method)": [[6, "camel.agents.ChatAgent.reset"]], "reset() (camel.agents.huggingfacetoolagent method)": [[6, "camel.agents.HuggingFaceToolAgent.reset"]], "reset() (camel.agents.chat_agent.chatagent method)": [[6, "camel.agents.chat_agent.ChatAgent.reset"]], "result (camel.agents.chat_agent.functioncallingrecord attribute)": [[6, "camel.agents.chat_agent.FunctionCallingRecord.result"], [6, "id2"]], "role_assignment_prompt (camel.agents.roleassignmentagent attribute)": [[6, "camel.agents.RoleAssignmentAgent.role_assignment_prompt"]], "role_name (camel.agents.taskspecifyagent attribute)": [[6, "camel.agents.TaskSpecifyAgent.role_name"]], "role_type (camel.agents.taskspecifyagent attribute)": [[6, "camel.agents.TaskSpecifyAgent.role_type"]], "run() (camel.agents.knowledgegraphagent method)": [[6, "camel.agents.KnowledgeGraphAgent.run"]], "run() (camel.agents.roleassignmentagent method)": [[6, "camel.agents.RoleAssignmentAgent.run"]], "run() (camel.agents.taskcreationagent method)": [[6, "camel.agents.TaskCreationAgent.run"]], "run() (camel.agents.taskplanneragent method)": [[6, "camel.agents.TaskPlannerAgent.run"]], "run() (camel.agents.taskprioritizationagent method)": [[6, "camel.agents.TaskPrioritizationAgent.run"]], "run() (camel.agents.taskspecifyagent method)": [[6, "camel.agents.TaskSpecifyAgent.run"]], "run() (camel.agents.task_agent.taskcreationagent method)": [[6, "camel.agents.task_agent.TaskCreationAgent.run"]], "run() (camel.agents.task_agent.taskplanneragent method)": [[6, "camel.agents.task_agent.TaskPlannerAgent.run"]], "run() (camel.agents.task_agent.taskprioritizationagent method)": [[6, "camel.agents.task_agent.TaskPrioritizationAgent.run"]], "run() (camel.agents.task_agent.taskspecifyagent method)": [[6, "camel.agents.task_agent.TaskSpecifyAgent.run"]], "set_output_language() (camel.agents.chatagent method)": [[6, "camel.agents.ChatAgent.set_output_language"]], "set_output_language() (camel.agents.chat_agent.chatagent method)": [[6, "camel.agents.chat_agent.ChatAgent.set_output_language"]], "step() (camel.agents.baseagent method)": [[6, "camel.agents.BaseAgent.step"]], "step() (camel.agents.basetoolagent method)": [[6, "camel.agents.BaseToolAgent.step"]], "step() (camel.agents.chatagent method)": [[6, "camel.agents.ChatAgent.step"]], "step() (camel.agents.embodiedagent method)": [[6, "camel.agents.EmbodiedAgent.step"]], "step() (camel.agents.huggingfacetoolagent method)": [[6, "camel.agents.HuggingFaceToolAgent.step"]], "step() (camel.agents.chat_agent.chatagent method)": [[6, "camel.agents.chat_agent.ChatAgent.step"]], "step_async() (camel.agents.chatagent method)": [[6, "camel.agents.ChatAgent.step_async"]], "step_async() (camel.agents.chat_agent.chatagent method)": [[6, "camel.agents.chat_agent.ChatAgent.step_async"]], "step_token_exceed() (camel.agents.chatagent method)": [[6, "camel.agents.ChatAgent.step_token_exceed"]], "step_token_exceed() (camel.agents.chat_agent.chatagent method)": [[6, "camel.agents.chat_agent.ChatAgent.step_token_exceed"]], "step_tool_call() (camel.agents.chatagent method)": [[6, "camel.agents.ChatAgent.step_tool_call"]], "step_tool_call() (camel.agents.chat_agent.chatagent method)": [[6, "camel.agents.chat_agent.ChatAgent.step_tool_call"]], "step_tool_call_async() (camel.agents.chatagent method)": [[6, "camel.agents.ChatAgent.step_tool_call_async"]], "step_tool_call_async() (camel.agents.chat_agent.chatagent method)": [[6, "camel.agents.chat_agent.ChatAgent.step_tool_call_async"]], "summarize_text() (camel.agents.searchagent method)": [[6, "camel.agents.SearchAgent.summarize_text"]], "system_message (camel.agents.chatagent property)": [[6, "camel.agents.ChatAgent.system_message"]], "system_message (camel.agents.chat_agent.chatagent property)": [[6, "camel.agents.chat_agent.ChatAgent.system_message"]], "task_creation_prompt (camel.agents.taskcreationagent attribute)": [[6, "camel.agents.TaskCreationAgent.task_creation_prompt"]], "task_creation_prompt (camel.agents.task_agent.taskcreationagent attribute)": [[6, "camel.agents.task_agent.TaskCreationAgent.task_creation_prompt"]], "task_planner_prompt (camel.agents.taskplanneragent attribute)": [[6, "camel.agents.TaskPlannerAgent.task_planner_prompt"]], "task_planner_prompt (camel.agents.task_agent.taskplanneragent attribute)": [[6, "camel.agents.task_agent.TaskPlannerAgent.task_planner_prompt"]], "task_prioritization_prompt (camel.agents.taskprioritizationagent attribute)": [[6, "camel.agents.TaskPrioritizationAgent.task_prioritization_prompt"]], "task_prioritization_prompt (camel.agents.task_agent.taskprioritizationagent attribute)": [[6, "camel.agents.task_agent.TaskPrioritizationAgent.task_prioritization_prompt"]], "task_prompt (camel.agents.knowledgegraphagent attribute)": [[6, "camel.agents.KnowledgeGraphAgent.task_prompt"]], "task_specify_prompt (camel.agents.taskspecifyagent attribute)": [[6, "camel.agents.TaskSpecifyAgent.task_specify_prompt"], [6, "id8"]], "task_specify_prompt (camel.agents.task_agent.taskspecifyagent attribute)": [[6, "camel.agents.task_agent.TaskSpecifyAgent.task_specify_prompt"]], "terminated (camel.agents.taskspecifyagent attribute)": [[6, "camel.agents.TaskSpecifyAgent.terminated"]], "update_memory() (camel.agents.chatagent method)": [[6, "camel.agents.ChatAgent.update_memory"]], "update_memory() (camel.agents.chat_agent.chatagent method)": [[6, "camel.agents.chat_agent.ChatAgent.update_memory"]], "basetoolagent (class in camel.agents.tool_agents)": [[7, "camel.agents.tool_agents.BaseToolAgent"]], "basetoolagent (class in camel.agents.tool_agents.base)": [[7, "camel.agents.tool_agents.base.BaseToolAgent"]], "huggingfacetoolagent (class in camel.agents.tool_agents)": [[7, "camel.agents.tool_agents.HuggingFaceToolAgent"]], "huggingfacetoolagent (class in camel.agents.tool_agents.hugging_face_tool_agent)": [[7, "camel.agents.tool_agents.hugging_face_tool_agent.HuggingFaceToolAgent"]], "camel.agents.tool_agents": [[7, "module-camel.agents.tool_agents"]], "camel.agents.tool_agents.base": [[7, "module-camel.agents.tool_agents.base"]], "camel.agents.tool_agents.hugging_face_tool_agent": [[7, "module-camel.agents.tool_agents.hugging_face_tool_agent"]], "chat() (camel.agents.tool_agents.huggingfacetoolagent method)": [[7, "camel.agents.tool_agents.HuggingFaceToolAgent.chat"]], "chat() (camel.agents.tool_agents.hugging_face_tool_agent.huggingfacetoolagent method)": [[7, "camel.agents.tool_agents.hugging_face_tool_agent.HuggingFaceToolAgent.chat"]], "reset() (camel.agents.tool_agents.basetoolagent method)": [[7, "camel.agents.tool_agents.BaseToolAgent.reset"]], "reset() (camel.agents.tool_agents.huggingfacetoolagent method)": [[7, "camel.agents.tool_agents.HuggingFaceToolAgent.reset"]], "reset() (camel.agents.tool_agents.base.basetoolagent method)": [[7, "camel.agents.tool_agents.base.BaseToolAgent.reset"]], "reset() (camel.agents.tool_agents.hugging_face_tool_agent.huggingfacetoolagent method)": [[7, "camel.agents.tool_agents.hugging_face_tool_agent.HuggingFaceToolAgent.reset"]], "step() (camel.agents.tool_agents.basetoolagent method)": [[7, "camel.agents.tool_agents.BaseToolAgent.step"]], "step() (camel.agents.tool_agents.huggingfacetoolagent method)": [[7, "camel.agents.tool_agents.HuggingFaceToolAgent.step"]], "step() (camel.agents.tool_agents.base.basetoolagent method)": [[7, "camel.agents.tool_agents.base.BaseToolAgent.step"]], "step() (camel.agents.tool_agents.hugging_face_tool_agent.huggingfacetoolagent method)": [[7, "camel.agents.tool_agents.hugging_face_tool_agent.HuggingFaceToolAgent.step"]], "basemessage (class in camel.messages.base)": [[9, "camel.messages.base.BaseMessage"]], "camel.messages.base": [[9, "module-camel.messages.base"]], "content (camel.messages.functioncallingmessage attribute)": [[9, "camel.messages.FunctionCallingMessage.content"]], "content (camel.messages.base.basemessage attribute)": [[9, "camel.messages.base.BaseMessage.content"]], "create_new_instance() (camel.messages.base.basemessage method)": [[9, "camel.messages.base.BaseMessage.create_new_instance"]], "extract_text_and_code_prompts() (camel.messages.base.basemessage method)": [[9, "camel.messages.base.BaseMessage.extract_text_and_code_prompts"]], "image_detail (camel.messages.base.basemessage attribute)": [[9, "camel.messages.base.BaseMessage.image_detail"]], "image_list (camel.messages.base.basemessage attribute)": [[9, "camel.messages.base.BaseMessage.image_list"]], "make_assistant_message() (camel.messages.base.basemessage class method)": [[9, "camel.messages.base.BaseMessage.make_assistant_message"]], "make_user_message() (camel.messages.base.basemessage class method)": [[9, "camel.messages.base.BaseMessage.make_user_message"]], "meta_dict (camel.messages.functioncallingmessage attribute)": [[9, "camel.messages.FunctionCallingMessage.meta_dict"]], "meta_dict (camel.messages.base.basemessage attribute)": [[9, "camel.messages.base.BaseMessage.meta_dict"]], "role_name (camel.messages.functioncallingmessage attribute)": [[9, "camel.messages.FunctionCallingMessage.role_name"]], "role_name (camel.messages.base.basemessage attribute)": [[9, "camel.messages.base.BaseMessage.role_name"]], "role_type (camel.messages.functioncallingmessage attribute)": [[9, "camel.messages.FunctionCallingMessage.role_type"]], "role_type (camel.messages.base.basemessage attribute)": [[9, "camel.messages.base.BaseMessage.role_type"]], "to_dict() (camel.messages.base.basemessage method)": [[9, "camel.messages.base.BaseMessage.to_dict"]], "to_openai_assistant_message() (camel.messages.base.basemessage method)": [[9, "camel.messages.base.BaseMessage.to_openai_assistant_message"]], "to_openai_message() (camel.messages.base.basemessage method)": [[9, "camel.messages.base.BaseMessage.to_openai_message"]], "to_openai_system_message() (camel.messages.base.basemessage method)": [[9, "camel.messages.base.BaseMessage.to_openai_system_message"]], "to_openai_user_message() (camel.messages.base.basemessage method)": [[9, "camel.messages.base.BaseMessage.to_openai_user_message"]], "video_bytes (camel.messages.base.basemessage attribute)": [[9, "camel.messages.base.BaseMessage.video_bytes"]], "video_detail (camel.messages.base.basemessage attribute)": [[9, "camel.messages.base.BaseMessage.video_detail"]], "aisocietyprompttemplatedict (class in camel.prompts)": [[10, "camel.prompts.AISocietyPromptTemplateDict"]], "aisocietyprompttemplatedict (class in camel.prompts.ai_society)": [[10, "camel.prompts.ai_society.AISocietyPromptTemplateDict"]], "assistant_prompt (camel.prompts.aisocietyprompttemplatedict attribute)": [[10, "camel.prompts.AISocietyPromptTemplateDict.ASSISTANT_PROMPT"], [10, "id20"]], "assistant_prompt (camel.prompts.codeprompttemplatedict attribute)": [[10, "camel.prompts.CodePromptTemplateDict.ASSISTANT_PROMPT"], [10, "id27"]], "assistant_prompt (camel.prompts.generatetextembeddingdataprompttemplatedict attribute)": [[10, "camel.prompts.GenerateTextEmbeddingDataPromptTemplateDict.ASSISTANT_PROMPT"], [10, "id34"]], "assistant_prompt (camel.prompts.imagecraftprompttemplatedict attribute)": [[10, "camel.prompts.ImageCraftPromptTemplateDict.ASSISTANT_PROMPT"]], "assistant_prompt (camel.prompts.misalignmentprompttemplatedict attribute)": [[10, "camel.prompts.MisalignmentPromptTemplateDict.ASSISTANT_PROMPT"], [10, "id36"]], "assistant_prompt (camel.prompts.multiconditionimagecraftprompttemplatedict attribute)": [[10, "camel.prompts.MultiConditionImageCraftPromptTemplateDict.ASSISTANT_PROMPT"]], "assistant_prompt (camel.prompts.objectrecognitionprompttemplatedict attribute)": [[10, "camel.prompts.ObjectRecognitionPromptTemplateDict.ASSISTANT_PROMPT"]], "assistant_prompt (camel.prompts.roledescriptionprompttemplatedict attribute)": [[10, "camel.prompts.RoleDescriptionPromptTemplateDict.ASSISTANT_PROMPT"], [10, "id41"]], "assistant_prompt (camel.prompts.solutionextractionprompttemplatedict attribute)": [[10, "camel.prompts.SolutionExtractionPromptTemplateDict.ASSISTANT_PROMPT"], [10, "id44"]], "assistant_prompt (camel.prompts.translationprompttemplatedict attribute)": [[10, "camel.prompts.TranslationPromptTemplateDict.ASSISTANT_PROMPT"], [10, "id46"]], "assistant_prompt (camel.prompts.videodescriptionprompttemplatedict attribute)": [[10, "camel.prompts.VideoDescriptionPromptTemplateDict.ASSISTANT_PROMPT"]], "assistant_prompt (camel.prompts.ai_society.aisocietyprompttemplatedict attribute)": [[10, "camel.prompts.ai_society.AISocietyPromptTemplateDict.ASSISTANT_PROMPT"], [10, "id0"]], "assistant_prompt (camel.prompts.code.codeprompttemplatedict attribute)": [[10, "camel.prompts.code.CodePromptTemplateDict.ASSISTANT_PROMPT"], [10, "id8"]], "assistant_prompt (camel.prompts.misalignment.misalignmentprompttemplatedict attribute)": [[10, "camel.prompts.misalignment.MisalignmentPromptTemplateDict.ASSISTANT_PROMPT"], [10, "id14"]], "assistant_prompt (camel.prompts.translation.translationprompttemplatedict attribute)": [[10, "camel.prompts.translation.TranslationPromptTemplateDict.ASSISTANT_PROMPT"], [10, "id19"]], "critic_prompt (camel.prompts.aisocietyprompttemplatedict attribute)": [[10, "camel.prompts.AISocietyPromptTemplateDict.CRITIC_PROMPT"]], "critic_prompt (camel.prompts.ai_society.aisocietyprompttemplatedict attribute)": [[10, "camel.prompts.ai_society.AISocietyPromptTemplateDict.CRITIC_PROMPT"]], "codeprompt (class in camel.prompts)": [[10, "camel.prompts.CodePrompt"]], "codeprompt (class in camel.prompts.base)": [[10, "camel.prompts.base.CodePrompt"]], "codeprompttemplatedict (class in camel.prompts)": [[10, "camel.prompts.CodePromptTemplateDict"]], "codeprompttemplatedict (class in camel.prompts.code)": [[10, "camel.prompts.code.CodePromptTemplateDict"]], "dan_prompt (camel.prompts.misalignmentprompttemplatedict attribute)": [[10, "camel.prompts.MisalignmentPromptTemplateDict.DAN_PROMPT"], [10, "id37"]], "dan_prompt (camel.prompts.misalignment.misalignmentprompttemplatedict attribute)": [[10, "camel.prompts.misalignment.MisalignmentPromptTemplateDict.DAN_PROMPT"], [10, "id15"]], "embodiment_prompt (camel.prompts.textpromptdict attribute)": [[10, "camel.prompts.TextPromptDict.EMBODIMENT_PROMPT"]], "embodiment_prompt (camel.prompts.base.textpromptdict attribute)": [[10, "camel.prompts.base.TextPromptDict.EMBODIMENT_PROMPT"]], "evaluationprompttemplatedict (class in camel.prompts)": [[10, "camel.prompts.EvaluationPromptTemplateDict"]], "generate_assistants (camel.prompts.aisocietyprompttemplatedict attribute)": [[10, "camel.prompts.AISocietyPromptTemplateDict.GENERATE_ASSISTANTS"], [10, "id21"]], "generate_assistants (camel.prompts.ai_society.aisocietyprompttemplatedict attribute)": [[10, "camel.prompts.ai_society.AISocietyPromptTemplateDict.GENERATE_ASSISTANTS"], [10, "id1"]], "generate_domains (camel.prompts.codeprompttemplatedict attribute)": [[10, "camel.prompts.CodePromptTemplateDict.GENERATE_DOMAINS"], [10, "id28"]], "generate_domains (camel.prompts.code.codeprompttemplatedict attribute)": [[10, "camel.prompts.code.CodePromptTemplateDict.GENERATE_DOMAINS"], [10, "id9"]], "generate_languages (camel.prompts.codeprompttemplatedict attribute)": [[10, "camel.prompts.CodePromptTemplateDict.GENERATE_LANGUAGES"], [10, "id29"]], "generate_languages (camel.prompts.code.codeprompttemplatedict attribute)": [[10, "camel.prompts.code.CodePromptTemplateDict.GENERATE_LANGUAGES"], [10, "id10"]], "generate_questions (camel.prompts.evaluationprompttemplatedict attribute)": [[10, "camel.prompts.EvaluationPromptTemplateDict.GENERATE_QUESTIONS"], [10, "id33"]], "generate_tasks (camel.prompts.aisocietyprompttemplatedict attribute)": [[10, "camel.prompts.AISocietyPromptTemplateDict.GENERATE_TASKS"], [10, "id22"]], "generate_tasks (camel.prompts.codeprompttemplatedict attribute)": [[10, "camel.prompts.CodePromptTemplateDict.GENERATE_TASKS"], [10, "id30"]], "generate_tasks (camel.prompts.generatetextembeddingdataprompttemplatedict attribute)": [[10, "camel.prompts.GenerateTextEmbeddingDataPromptTemplateDict.GENERATE_TASKS"], [10, "id35"]], "generate_tasks (camel.prompts.misalignmentprompttemplatedict attribute)": [[10, "camel.prompts.MisalignmentPromptTemplateDict.GENERATE_TASKS"], [10, "id38"]], "generate_tasks (camel.prompts.ai_society.aisocietyprompttemplatedict attribute)": [[10, "camel.prompts.ai_society.AISocietyPromptTemplateDict.GENERATE_TASKS"], [10, "id2"]], "generate_tasks (camel.prompts.code.codeprompttemplatedict attribute)": [[10, "camel.prompts.code.CodePromptTemplateDict.GENERATE_TASKS"], [10, "id11"]], "generate_tasks (camel.prompts.misalignment.misalignmentprompttemplatedict attribute)": [[10, "camel.prompts.misalignment.MisalignmentPromptTemplateDict.GENERATE_TASKS"], [10, "id16"]], "generate_users (camel.prompts.aisocietyprompttemplatedict attribute)": [[10, "camel.prompts.AISocietyPromptTemplateDict.GENERATE_USERS"], [10, "id23"]], "generate_users (camel.prompts.ai_society.aisocietyprompttemplatedict attribute)": [[10, "camel.prompts.ai_society.AISocietyPromptTemplateDict.GENERATE_USERS"], [10, "id3"]], "generatetextembeddingdataprompttemplatedict (class in camel.prompts)": [[10, "camel.prompts.GenerateTextEmbeddingDataPromptTemplateDict"]], "imagecraftprompttemplatedict (class in camel.prompts)": [[10, "camel.prompts.ImageCraftPromptTemplateDict"]], "misalignmentprompttemplatedict (class in camel.prompts)": [[10, "camel.prompts.MisalignmentPromptTemplateDict"]], "misalignmentprompttemplatedict (class in camel.prompts.misalignment)": [[10, "camel.prompts.misalignment.MisalignmentPromptTemplateDict"]], "multiconditionimagecraftprompttemplatedict (class in camel.prompts)": [[10, "camel.prompts.MultiConditionImageCraftPromptTemplateDict"]], "objectrecognitionprompttemplatedict (class in camel.prompts)": [[10, "camel.prompts.ObjectRecognitionPromptTemplateDict"]], "prompttemplategenerator (class in camel.prompts)": [[10, "camel.prompts.PromptTemplateGenerator"]], "prompttemplategenerator (class in camel.prompts.prompt_templates)": [[10, "camel.prompts.prompt_templates.PromptTemplateGenerator"]], "role_description_prompt (camel.prompts.roledescriptionprompttemplatedict attribute)": [[10, "camel.prompts.RoleDescriptionPromptTemplateDict.ROLE_DESCRIPTION_PROMPT"], [10, "id42"]], "roledescriptionprompttemplatedict (class in camel.prompts)": [[10, "camel.prompts.RoleDescriptionPromptTemplateDict"]], "solutionextractionprompttemplatedict (class in camel.prompts)": [[10, "camel.prompts.SolutionExtractionPromptTemplateDict"]], "task_specify_prompt (camel.prompts.aisocietyprompttemplatedict attribute)": [[10, "camel.prompts.AISocietyPromptTemplateDict.TASK_SPECIFY_PROMPT"], [10, "id24"]], "task_specify_prompt (camel.prompts.codeprompttemplatedict attribute)": [[10, "camel.prompts.CodePromptTemplateDict.TASK_SPECIFY_PROMPT"], [10, "id31"]], "task_specify_prompt (camel.prompts.misalignmentprompttemplatedict attribute)": [[10, "camel.prompts.MisalignmentPromptTemplateDict.TASK_SPECIFY_PROMPT"], [10, "id39"]], "task_specify_prompt (camel.prompts.ai_society.aisocietyprompttemplatedict attribute)": [[10, "camel.prompts.ai_society.AISocietyPromptTemplateDict.TASK_SPECIFY_PROMPT"], [10, "id4"]], "task_specify_prompt (camel.prompts.code.codeprompttemplatedict attribute)": [[10, "camel.prompts.code.CodePromptTemplateDict.TASK_SPECIFY_PROMPT"], [10, "id12"]], "task_specify_prompt (camel.prompts.misalignment.misalignmentprompttemplatedict attribute)": [[10, "camel.prompts.misalignment.MisalignmentPromptTemplateDict.TASK_SPECIFY_PROMPT"], [10, "id17"]], "taskprompttemplatedict (class in camel.prompts)": [[10, "camel.prompts.TaskPromptTemplateDict"]], "taskprompttemplatedict (class in camel.prompts.task_prompt_template)": [[10, "camel.prompts.task_prompt_template.TaskPromptTemplateDict"]], "textprompt (class in camel.prompts)": [[10, "camel.prompts.TextPrompt"]], "textprompt (class in camel.prompts.base)": [[10, "camel.prompts.base.TextPrompt"]], "textpromptdict (class in camel.prompts)": [[10, "camel.prompts.TextPromptDict"]], "textpromptdict (class in camel.prompts.base)": [[10, "camel.prompts.base.TextPromptDict"]], "translationprompttemplatedict (class in camel.prompts)": [[10, "camel.prompts.TranslationPromptTemplateDict"]], "translationprompttemplatedict (class in camel.prompts.translation)": [[10, "camel.prompts.translation.TranslationPromptTemplateDict"]], "user_prompt (camel.prompts.aisocietyprompttemplatedict attribute)": [[10, "camel.prompts.AISocietyPromptTemplateDict.USER_PROMPT"], [10, "id25"]], "user_prompt (camel.prompts.codeprompttemplatedict attribute)": [[10, "camel.prompts.CodePromptTemplateDict.USER_PROMPT"], [10, "id32"]], "user_prompt (camel.prompts.misalignmentprompttemplatedict attribute)": [[10, "camel.prompts.MisalignmentPromptTemplateDict.USER_PROMPT"], [10, "id40"]], "user_prompt (camel.prompts.roledescriptionprompttemplatedict attribute)": [[10, "camel.prompts.RoleDescriptionPromptTemplateDict.USER_PROMPT"], [10, "id43"]], "user_prompt (camel.prompts.ai_society.aisocietyprompttemplatedict attribute)": [[10, "camel.prompts.ai_society.AISocietyPromptTemplateDict.USER_PROMPT"], [10, "id5"]], "user_prompt (camel.prompts.code.codeprompttemplatedict attribute)": [[10, "camel.prompts.code.CodePromptTemplateDict.USER_PROMPT"], [10, "id13"]], "user_prompt (camel.prompts.misalignment.misalignmentprompttemplatedict attribute)": [[10, "camel.prompts.misalignment.MisalignmentPromptTemplateDict.USER_PROMPT"], [10, "id18"]], "videodescriptionprompttemplatedict (class in camel.prompts)": [[10, "camel.prompts.VideoDescriptionPromptTemplateDict"]], "camel.prompts": [[10, "module-camel.prompts"]], "camel.prompts.ai_society": [[10, "module-camel.prompts.ai_society"]], "camel.prompts.base": [[10, "module-camel.prompts.base"]], "camel.prompts.code": [[10, "module-camel.prompts.code"]], "camel.prompts.misalignment": [[10, "module-camel.prompts.misalignment"]], "camel.prompts.prompt_templates": [[10, "module-camel.prompts.prompt_templates"]], "camel.prompts.task_prompt_template": [[10, "module-camel.prompts.task_prompt_template"]], "camel.prompts.translation": [[10, "module-camel.prompts.translation"]], "capitalize() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.capitalize"]], "capitalize() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.capitalize"]], "capitalize() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.capitalize"]], "capitalize() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.capitalize"]], "casefold() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.casefold"]], "casefold() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.casefold"]], "casefold() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.casefold"]], "casefold() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.casefold"]], "center() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.center"]], "center() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.center"]], "center() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.center"]], "center() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.center"]], "code_type (camel.prompts.codeprompt attribute)": [[10, "camel.prompts.CodePrompt.code_type"]], "code_type (camel.prompts.codeprompt property)": [[10, "id26"]], "code_type (camel.prompts.base.codeprompt attribute)": [[10, "camel.prompts.base.CodePrompt.code_type"]], "code_type (camel.prompts.base.codeprompt property)": [[10, "id6"]], "count() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.count"]], "count() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.count"]], "count() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.count"]], "count() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.count"]], "encode() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.encode"]], "encode() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.encode"]], "encode() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.encode"]], "encode() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.encode"]], "endswith() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.endswith"]], "endswith() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.endswith"]], "endswith() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.endswith"]], "endswith() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.endswith"]], "execute() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.execute"]], "execute() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.execute"]], "expandtabs() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.expandtabs"]], "expandtabs() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.expandtabs"]], "expandtabs() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.expandtabs"]], "expandtabs() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.expandtabs"]], "find() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.find"]], "find() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.find"]], "find() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.find"]], "find() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.find"]], "format() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.format"]], "format() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.format"]], "format() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.format"]], "format() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.format"]], "format_map() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.format_map"]], "format_map() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.format_map"]], "format_map() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.format_map"]], "format_map() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.format_map"]], "get_generate_tasks_prompt() (camel.prompts.prompttemplategenerator method)": [[10, "camel.prompts.PromptTemplateGenerator.get_generate_tasks_prompt"]], "get_generate_tasks_prompt() (camel.prompts.prompt_templates.prompttemplategenerator method)": [[10, "camel.prompts.prompt_templates.PromptTemplateGenerator.get_generate_tasks_prompt"]], "get_prompt_from_key() (camel.prompts.prompttemplategenerator method)": [[10, "camel.prompts.PromptTemplateGenerator.get_prompt_from_key"]], "get_prompt_from_key() (camel.prompts.prompt_templates.prompttemplategenerator method)": [[10, "camel.prompts.prompt_templates.PromptTemplateGenerator.get_prompt_from_key"]], "get_system_prompt() (camel.prompts.prompttemplategenerator method)": [[10, "camel.prompts.PromptTemplateGenerator.get_system_prompt"]], "get_system_prompt() (camel.prompts.prompt_templates.prompttemplategenerator method)": [[10, "camel.prompts.prompt_templates.PromptTemplateGenerator.get_system_prompt"]], "get_task_specify_prompt() (camel.prompts.prompttemplategenerator method)": [[10, "camel.prompts.PromptTemplateGenerator.get_task_specify_prompt"]], "get_task_specify_prompt() (camel.prompts.prompt_templates.prompttemplategenerator method)": [[10, "camel.prompts.prompt_templates.PromptTemplateGenerator.get_task_specify_prompt"]], "index() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.index"]], "index() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.index"]], "index() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.index"]], "index() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.index"]], "isalnum() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.isalnum"]], "isalnum() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.isalnum"]], "isalnum() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.isalnum"]], "isalnum() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.isalnum"]], "isalpha() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.isalpha"]], "isalpha() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.isalpha"]], "isalpha() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.isalpha"]], "isalpha() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.isalpha"]], "isascii() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.isascii"]], "isascii() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.isascii"]], "isascii() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.isascii"]], "isascii() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.isascii"]], "isdecimal() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.isdecimal"]], "isdecimal() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.isdecimal"]], "isdecimal() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.isdecimal"]], "isdecimal() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.isdecimal"]], "isdigit() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.isdigit"]], "isdigit() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.isdigit"]], "isdigit() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.isdigit"]], "isdigit() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.isdigit"]], "isidentifier() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.isidentifier"]], "isidentifier() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.isidentifier"]], "isidentifier() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.isidentifier"]], "isidentifier() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.isidentifier"]], "islower() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.islower"]], "islower() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.islower"]], "islower() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.islower"]], "islower() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.islower"]], "isnumeric() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.isnumeric"]], "isnumeric() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.isnumeric"]], "isnumeric() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.isnumeric"]], "isnumeric() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.isnumeric"]], "isprintable() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.isprintable"]], "isprintable() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.isprintable"]], "isprintable() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.isprintable"]], "isprintable() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.isprintable"]], "isspace() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.isspace"]], "isspace() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.isspace"]], "isspace() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.isspace"]], "isspace() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.isspace"]], "istitle() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.istitle"]], "istitle() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.istitle"]], "istitle() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.istitle"]], "istitle() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.istitle"]], "isupper() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.isupper"]], "isupper() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.isupper"]], "isupper() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.isupper"]], "isupper() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.isupper"]], "join() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.join"]], "join() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.join"]], "join() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.join"]], "join() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.join"]], "key_words (camel.prompts.textprompt attribute)": [[10, "camel.prompts.TextPrompt.key_words"]], "key_words (camel.prompts.textprompt property)": [[10, "id45"]], "key_words (camel.prompts.base.textprompt attribute)": [[10, "camel.prompts.base.TextPrompt.key_words"]], "key_words (camel.prompts.base.textprompt property)": [[10, "id7"]], "ljust() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.ljust"]], "ljust() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.ljust"]], "ljust() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.ljust"]], "ljust() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.ljust"]], "lower() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.lower"]], "lower() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.lower"]], "lower() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.lower"]], "lower() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.lower"]], "lstrip() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.lstrip"]], "lstrip() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.lstrip"]], "lstrip() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.lstrip"]], "lstrip() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.lstrip"]], "maketrans() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.maketrans"]], "maketrans() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.maketrans"]], "maketrans() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.maketrans"]], "maketrans() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.maketrans"]], "partition() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.partition"]], "partition() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.partition"]], "partition() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.partition"]], "partition() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.partition"]], "removeprefix() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.removeprefix"]], "removeprefix() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.removeprefix"]], "removeprefix() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.removeprefix"]], "removeprefix() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.removeprefix"]], "removesuffix() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.removesuffix"]], "removesuffix() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.removesuffix"]], "removesuffix() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.removesuffix"]], "removesuffix() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.removesuffix"]], "replace() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.replace"]], "replace() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.replace"]], "replace() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.replace"]], "replace() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.replace"]], "return_prompt_wrapper() (in module camel.prompts.base)": [[10, "camel.prompts.base.return_prompt_wrapper"]], "rfind() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.rfind"]], "rfind() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.rfind"]], "rfind() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.rfind"]], "rfind() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.rfind"]], "rindex() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.rindex"]], "rindex() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.rindex"]], "rindex() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.rindex"]], "rindex() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.rindex"]], "rjust() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.rjust"]], "rjust() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.rjust"]], "rjust() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.rjust"]], "rjust() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.rjust"]], "rpartition() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.rpartition"]], "rpartition() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.rpartition"]], "rpartition() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.rpartition"]], "rpartition() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.rpartition"]], "rsplit() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.rsplit"]], "rsplit() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.rsplit"]], "rsplit() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.rsplit"]], "rsplit() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.rsplit"]], "rstrip() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.rstrip"]], "rstrip() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.rstrip"]], "rstrip() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.rstrip"]], "rstrip() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.rstrip"]], "set_code_type() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.set_code_type"]], "set_code_type() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.set_code_type"]], "split() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.split"]], "split() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.split"]], "split() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.split"]], "split() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.split"]], "splitlines() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.splitlines"]], "splitlines() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.splitlines"]], "splitlines() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.splitlines"]], "splitlines() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.splitlines"]], "startswith() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.startswith"]], "startswith() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.startswith"]], "startswith() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.startswith"]], "startswith() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.startswith"]], "strip() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.strip"]], "strip() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.strip"]], "strip() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.strip"]], "strip() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.strip"]], "swapcase() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.swapcase"]], "swapcase() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.swapcase"]], "swapcase() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.swapcase"]], "swapcase() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.swapcase"]], "title() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.title"]], "title() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.title"]], "title() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.title"]], "title() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.title"]], "translate() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.translate"]], "translate() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.translate"]], "translate() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.translate"]], "translate() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.translate"]], "upper() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.upper"]], "upper() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.upper"]], "upper() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.upper"]], "upper() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.upper"]], "wrap_prompt_functions() (in module camel.prompts.base)": [[10, "camel.prompts.base.wrap_prompt_functions"]], "zfill() (camel.prompts.codeprompt method)": [[10, "camel.prompts.CodePrompt.zfill"]], "zfill() (camel.prompts.textprompt method)": [[10, "camel.prompts.TextPrompt.zfill"]], "zfill() (camel.prompts.base.codeprompt method)": [[10, "camel.prompts.base.CodePrompt.zfill"]], "zfill() (camel.prompts.base.textprompt method)": [[10, "camel.prompts.base.TextPrompt.zfill"]]}})